"use strict";var r3=Object.create;var ut=Object.defineProperty;var n3=Object.getOwnPropertyDescriptor;var s3=Object.getOwnPropertyNames;var l3=Object.getPrototypeOf,o3=Object.prototype.hasOwnProperty;var m3=(e,a)=>()=>(e&&(a=e(e=0)),a);var y=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),Ti=(e,a)=>{for(var t in a)ut(e,t,{get:a[t],enumerable:!0})},Di=(e,a,t,p)=>{if(a&&typeof a=="object"||typeof a=="function")for(let d of s3(a))!o3.call(e,d)&&d!==t&&ut(e,d,{get:()=>a[d],enumerable:!(p=n3(a,d))||p.enumerable});return e};var Ge=(e,a,t)=>(t=e!=null?r3(l3(e)):{},Di(a||!e||!e.__esModule?ut(t,"default",{value:e,enumerable:!0}):t,e)),Ai=e=>Di(ut({},"__esModule",{value:!0}),e);var Xi=y((Na,Sa)=>{"use strict";Object.defineProperty(Na,"__esModule",{value:!0});var ji=new WeakMap,m2=new WeakMap;function X(e){let a=ji.get(e);return console.assert(a!=null,"'this' is expected an Event object, but got",e),a}function Bi(e){if(e.passiveListener!=null){typeof console<"u"&&typeof console.error=="function"&&console.error("Unable to preventDefault inside passive event listener invocation.",e.passiveListener);return}e.event.cancelable&&(e.canceled=!0,typeof e.event.preventDefault=="function"&&e.event.preventDefault())}function z1(e,a){ji.set(this,{eventTarget:e,event:a,eventPhase:2,currentTarget:e,canceled:!1,stopped:!1,immediateStopped:!1,passiveListener:null,timeStamp:a.timeStamp||Date.now()}),Object.defineProperty(this,"isTrusted",{value:!1,enumerable:!0});let t=Object.keys(a);for(let p=0;p<t.length;++p){let d=t[p];d in this||Object.defineProperty(this,d,Gi(d))}}z1.prototype={get type(){return X(this).event.type},get target(){return X(this).eventTarget},get currentTarget(){return X(this).currentTarget},composedPath(){let e=X(this).currentTarget;return e==null?[]:[e]},get NONE(){return 0},get CAPTURING_PHASE(){return 1},get AT_TARGET(){return 2},get BUBBLING_PHASE(){return 3},get eventPhase(){return X(this).eventPhase},stopPropagation(){let e=X(this);e.stopped=!0,typeof e.event.stopPropagation=="function"&&e.event.stopPropagation()},stopImmediatePropagation(){let e=X(this);e.stopped=!0,e.immediateStopped=!0,typeof e.event.stopImmediatePropagation=="function"&&e.event.stopImmediatePropagation()},get bubbles(){return!!X(this).event.bubbles},get cancelable(){return!!X(this).event.cancelable},preventDefault(){Bi(X(this))},get defaultPrevented(){return X(this).canceled},get composed(){return!!X(this).event.composed},get timeStamp(){return X(this).timeStamp},get srcElement(){return X(this).eventTarget},get cancelBubble(){return X(this).stopped},set cancelBubble(e){if(!e)return;let a=X(this);a.stopped=!0,typeof a.event.cancelBubble=="boolean"&&(a.event.cancelBubble=!0)},get returnValue(){return!X(this).canceled},set returnValue(e){e||Bi(X(this))},initEvent(){}};Object.defineProperty(z1.prototype,"constructor",{value:z1,configurable:!0,writable:!0});typeof window<"u"&&typeof window.Event<"u"&&(Object.setPrototypeOf(z1.prototype,window.Event.prototype),m2.set(window.Event.prototype,z1));function Gi(e){return{get(){return X(this).event[e]},set(a){X(this).event[e]=a},configurable:!0,enumerable:!0}}function v3(e){return{value(){let a=X(this).event;return a[e].apply(a,arguments)},configurable:!0,enumerable:!0}}function g3(e,a){let t=Object.keys(a);if(t.length===0)return e;function p(d,i){e.call(this,d,i)}p.prototype=Object.create(e.prototype,{constructor:{value:p,configurable:!0,writable:!0}});for(let d=0;d<t.length;++d){let i=t[d];if(!(i in e.prototype)){let s=typeof Object.getOwnPropertyDescriptor(a,i).value=="function";Object.defineProperty(p.prototype,i,s?v3(i):Gi(i))}}return p}function zi(e){if(e==null||e===Object.prototype)return z1;let a=m2.get(e);return a==null&&(a=g3(zi(Object.getPrototypeOf(e)),e),m2.set(e,a)),a}function w3(e,a){let t=zi(Object.getPrototypeOf(a));return new t(e,a)}function y3(e){return X(e).immediateStopped}function E3(e,a){X(e).eventPhase=a}function S3(e,a){X(e).currentTarget=a}function ki(e,a){X(e).passiveListener=a}var Wi=new WeakMap,Ui=1,Hi=2,St=3;function Nt(e){return e!==null&&typeof e=="object"}function Ea(e){let a=Wi.get(e);if(a==null)throw new TypeError("'this' is expected an EventTarget object, but got another value.");return a}function N3(e){return{get(){let t=Ea(this).get(e);for(;t!=null;){if(t.listenerType===St)return t.listener;t=t.next}return null},set(a){typeof a!="function"&&!Nt(a)&&(a=null);let t=Ea(this),p=null,d=t.get(e);for(;d!=null;)d.listenerType===St?p!==null?p.next=d.next:d.next!==null?t.set(e,d.next):t.delete(e):p=d,d=d.next;if(a!==null){let i={listener:a,listenerType:St,passive:!1,once:!1,next:null};p===null?t.set(e,i):p.next=i}},configurable:!0,enumerable:!0}}function u2(e,a){Object.defineProperty(e,`on${a}`,N3(a))}function Mi(e){function a(){ze.call(this)}a.prototype=Object.create(ze.prototype,{constructor:{value:a,configurable:!0,writable:!0}});for(let t=0;t<e.length;++t)u2(a.prototype,e[t]);return a}function ze(){if(this instanceof ze){Wi.set(this,new Map);return}if(arguments.length===1&&Array.isArray(arguments[0]))return Mi(arguments[0]);if(arguments.length>0){let e=new Array(arguments.length);for(let a=0;a<arguments.length;++a)e[a]=arguments[a];return Mi(e)}throw new TypeError("Cannot call a class as a function")}ze.prototype={addEventListener(e,a,t){if(a==null)return;if(typeof a!="function"&&!Nt(a))throw new TypeError("'listener' should be a function or an object.");let p=Ea(this),d=Nt(t),r=(d?!!t.capture:!!t)?Ui:Hi,s={listener:a,listenerType:r,passive:d&&!!t.passive,once:d&&!!t.once,next:null},n=p.get(e);if(n===void 0){p.set(e,s);return}let o=null;for(;n!=null;){if(n.listener===a&&n.listenerType===r)return;o=n,n=n.next}o.next=s},removeEventListener(e,a,t){if(a==null)return;let p=Ea(this),i=(Nt(t)?!!t.capture:!!t)?Ui:Hi,r=null,s=p.get(e);for(;s!=null;){if(s.listener===a&&s.listenerType===i){r!==null?r.next=s.next:s.next!==null?p.set(e,s.next):p.delete(e);return}r=s,s=s.next}},dispatchEvent(e){if(e==null||typeof e.type!="string")throw new TypeError('"event.type" should be a string.');let a=Ea(this),t=e.type,p=a.get(t);if(p==null)return!0;let d=w3(this,e),i=null;for(;p!=null;){if(p.once?i!==null?i.next=p.next:p.next!==null?a.set(t,p.next):a.delete(t):i=p,ki(d,p.passive?p.listener:null),typeof p.listener=="function")try{p.listener.call(this,d)}catch(r){typeof console<"u"&&typeof console.error=="function"&&console.error(r)}else p.listenerType!==St&&typeof p.listener.handleEvent=="function"&&p.listener.handleEvent(d);if(y3(d))break;p=p.next}return ki(d,null),E3(d,0),S3(d,null),!d.defaultPrevented}};Object.defineProperty(ze.prototype,"constructor",{value:ze,configurable:!0,writable:!0});typeof window<"u"&&typeof window.EventTarget<"u"&&Object.setPrototypeOf(ze.prototype,window.EventTarget.prototype);Na.defineEventAttribute=u2;Na.EventTarget=ze;Na.default=ze;Sa.exports=ze;Sa.exports.EventTarget=Sa.exports.default=ze;Sa.exports.defineEventAttribute=u2});var Yi=y((ba,_a)=>{"use strict";Object.defineProperty(ba,"__esModule",{value:!0});var c2=Xi(),v1=class extends c2.EventTarget{constructor(){throw super(),new TypeError("AbortSignal cannot be constructed directly")}get aborted(){let a=_t.get(this);if(typeof a!="boolean")throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this===null?"null":typeof this}`);return a}};c2.defineEventAttribute(v1.prototype,"abort");function _3(){let e=Object.create(v1.prototype);return c2.EventTarget.call(e),_t.set(e,!1),e}function b3(e){_t.get(e)===!1&&(_t.set(e,!0),e.dispatchEvent({type:"abort"}))}var _t=new WeakMap;Object.defineProperties(v1.prototype,{aborted:{enumerable:!0}});typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol"&&Object.defineProperty(v1.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortSignal"});var g1=class{constructor(){Ki.set(this,_3())}get signal(){return Zi(this)}abort(){b3(Zi(this))}},Ki=new WeakMap;function Zi(e){let a=Ki.get(e);if(a==null)throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${e===null?"null":typeof e}`);return a}Object.defineProperties(g1.prototype,{signal:{enumerable:!0},abort:{enumerable:!0}});typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol"&&Object.defineProperty(g1.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortController"});ba.AbortController=g1;ba.AbortSignal=v1;ba.default=g1;_a.exports=g1;_a.exports.AbortController=_a.exports.default=g1;_a.exports.AbortSignal=v1});var f2=y(Qi=>{Qi.require=function(){if(typeof process=="object"&&process.versions&&process.versions.electron)try{let e=require("original-fs");if(Object.keys(e).length>0)return e}catch{}return require("fs")}});var h2=y((qf,Ji)=>{Ji.exports={LOCHDR:30,LOCSIG:67324752,LOCVER:4,LOCFLG:6,LOCHOW:8,LOCTIM:10,LOCCRC:14,LOCSIZ:18,LOCLEN:22,LOCNAM:26,LOCEXT:28,EXTSIG:134695760,EXTHDR:16,EXTCRC:4,EXTSIZ:8,EXTLEN:12,CENHDR:46,CENSIG:33639248,CENVEM:4,CENVER:6,CENFLG:8,CENHOW:10,CENTIM:12,CENCRC:16,CENSIZ:20,CENLEN:24,CENNAM:28,CENEXT:30,CENCOM:32,CENDSK:34,CENATT:36,CENATX:38,CENOFF:42,ENDHDR:22,ENDSIG:101010256,ENDSUB:8,ENDTOT:10,ENDSIZ:12,ENDOFF:16,ENDCOM:20,END64HDR:20,END64SIG:117853008,END64START:4,END64OFF:8,END64NUMDISKS:16,ZIP64SIG:101075792,ZIP64HDR:56,ZIP64LEAD:12,ZIP64SIZE:4,ZIP64VEM:12,ZIP64VER:14,ZIP64DSK:16,ZIP64DSKDIR:20,ZIP64SUB:24,ZIP64TOT:32,ZIP64SIZB:40,ZIP64OFF:48,ZIP64EXTRA:56,STORED:0,SHRUNK:1,REDUCED1:2,REDUCED2:3,REDUCED3:4,REDUCED4:5,IMPLODED:6,DEFLATED:8,ENHANCED_DEFLATED:9,PKWARE:10,BZIP2:12,LZMA:14,IBM_TERSE:18,IBM_LZ77:19,AES_ENCRYPT:99,FLG_ENC:1,FLG_COMP1:2,FLG_COMP2:4,FLG_DESC:8,FLG_ENH:16,FLG_PATCH:32,FLG_STR:64,FLG_EFS:2048,FLG_MSK:4096,FILE:2,BUFFER:1,NONE:0,EF_ID:0,EF_SIZE:2,ID_ZIP64:1,ID_AVINFO:7,ID_PFS:8,ID_OS2:9,ID_NTFS:10,ID_OPENVMS:12,ID_UNIX:13,ID_FORK:14,ID_PATCH:15,ID_X509_PKCS7:20,ID_X509_CERTID_F:21,ID_X509_CERTID_C:22,ID_STRONGENC:23,ID_RECORD_MGT:24,ID_X509_PKCS7_RL:25,ID_IBM1:101,ID_IBM2:102,ID_POSZIP:18064,EF_ZIP64_OR_32:4294967295,EF_ZIP64_OR_16:65535,EF_ZIP64_SUNCOMP:0,EF_ZIP64_SCOMP:8,EF_ZIP64_RHO:16,EF_ZIP64_DSN:24}});var v2=y((Bf,er)=>{er.exports={INVALID_LOC:"Invalid LOC header (bad signature)",INVALID_CEN:"Invalid CEN header (bad signature)",INVALID_END:"Invalid END header (bad signature)",NO_DATA:"Nothing to decompress",BAD_CRC:"CRC32 checksum failed",FILE_IN_THE_WAY:"There is a file in the way: %s",UNKNOWN_METHOD:"Invalid/unsupported compression method",AVAIL_DATA:"inflate::Available inflate data did not terminate",INVALID_DISTANCE:"inflate::Invalid literal/length or distance code in fixed or dynamic block",TO_MANY_CODES:"inflate::Dynamic block code description: too many length or distance codes",INVALID_REPEAT_LEN:"inflate::Dynamic block code description: repeat more than specified lengths",INVALID_REPEAT_FIRST:"inflate::Dynamic block code description: repeat lengths with no first length",INCOMPLETE_CODES:"inflate::Dynamic block code description: code lengths codes incomplete",INVALID_DYN_DISTANCE:"inflate::Dynamic block code description: invalid distance code lengths",INVALID_CODES_LEN:"inflate::Dynamic block code description: invalid literal/length code lengths",INVALID_STORE_BLOCK:"inflate::Stored block length did not match one's complement",INVALID_BLOCK_TYPE:"inflate::Invalid block type (type == 3)",CANT_EXTRACT_FILE:"Could not extract the file",CANT_OVERRIDE:"Target file already exists",NO_ZIP:"No zip file was loaded",NO_ENTRY:"Entry doesn't exist",DIRECTORY_CONTENT_ERROR:"A directory cannot have content",FILE_NOT_FOUND:"File not found: %s",NOT_IMPLEMENTED:"Not implemented",INVALID_FILENAME:"Invalid filename",INVALID_FORMAT:"Invalid or unsupported zip format. No END header found"}});var dr=y((kf,pr)=>{var T3=f2().require(),_e=require("path"),ar=h2(),D3=v2(),A3=typeof process=="object"&&process.platform==="win32",tr=e=>e&&typeof e=="object",g2=new Uint32Array(256).map((e,a)=>{for(let t=0;t<8;t++)a&1?a=3988292384^a>>>1:a>>>=1;return a>>>0});function fe(e){this.sep=_e.sep,this.fs=T3,tr(e)&&tr(e.fs)&&typeof e.fs.statSync=="function"&&(this.fs=e.fs)}pr.exports=fe;fe.prototype.makeDir=function(e){let a=this;function t(p){let d=p.split(a.sep)[0];p.split(a.sep).forEach(function(i){if(!(!i||i.substr(-1,1)===":")){d+=a.sep+i;var r;try{r=a.fs.statSync(d)}catch{a.fs.mkdirSync(d)}if(r&&r.isFile())throw D3.FILE_IN_THE_WAY.replace("%s",d)}})}t(e)};fe.prototype.writeFileTo=function(e,a,t,p){let d=this;if(d.fs.existsSync(e)){if(!t)return!1;var i=d.fs.statSync(e);if(i.isDirectory())return!1}var r=_e.dirname(e);d.fs.existsSync(r)||d.makeDir(r);var s;try{s=d.fs.openSync(e,"w",438)}catch{d.fs.chmodSync(e,438),s=d.fs.openSync(e,"w",438)}if(s)try{d.fs.writeSync(s,a,0,a.length,0)}finally{d.fs.closeSync(s)}return d.fs.chmodSync(e,p||438),!0};fe.prototype.writeFileToAsync=function(e,a,t,p,d){typeof p=="function"&&(d=p,p=void 0);let i=this;i.fs.exists(e,function(r){if(r&&!t)return d(!1);i.fs.stat(e,function(s,n){if(r&&n.isDirectory())return d(!1);var o=_e.dirname(e);i.fs.exists(o,function(l){l||i.makeDir(o),i.fs.open(e,"w",438,function(u,f){u?i.fs.chmod(e,438,function(){i.fs.open(e,"w",438,function(c,m){i.fs.write(m,a,0,a.length,0,function(){i.fs.close(m,function(){i.fs.chmod(e,p||438,function(){d(!0)})})})})}):f?i.fs.write(f,a,0,a.length,0,function(){i.fs.close(f,function(){i.fs.chmod(e,p||438,function(){d(!0)})})}):i.fs.chmod(e,p||438,function(){d(!0)})})})})})};fe.prototype.findFiles=function(e){let a=this;function t(p,d,i){typeof d=="boolean"&&(i=d,d=void 0);let r=[];return a.fs.readdirSync(p).forEach(function(s){var n=_e.join(p,s);a.fs.statSync(n).isDirectory()&&i&&(r=r.concat(t(n,d,i))),(!d||d.test(n))&&r.push(_e.normalize(n)+(a.fs.statSync(n).isDirectory()?a.sep:""))}),r}return t(e,void 0,!0)};fe.prototype.getAttributes=function(){};fe.prototype.setAttributes=function(){};fe.crc32update=function(e,a){return g2[(e^a)&255]^e>>>8};fe.crc32=function(e){typeof e=="string"&&(e=Buffer.from(e,"utf8")),g2.length||genCRCTable();let a=e.length,t=-1;for(let p=0;p<a;)t=fe.crc32update(t,e[p++]);return~t>>>0};fe.methodToString=function(e){switch(e){case ar.STORED:return"STORED ("+e+")";case ar.DEFLATED:return"DEFLATED ("+e+")";default:return"UNSUPPORTED ("+e+")"}};fe.canonical=function(e){if(!e)return"";var a=_e.posix.normalize("/"+e.split("\\").join("/"));return _e.join(".",a)};fe.sanitize=function(e,a){e=_e.resolve(_e.normalize(e));for(var t=a.split("/"),p=0,d=t.length;p<d;p++){var i=_e.normalize(_e.join(e,t.slice(p,d).join(_e.sep)));if(i.indexOf(e)===0)return i}return _e.normalize(_e.join(e,_e.basename(a)))};fe.toBuffer=function(a){return Buffer.isBuffer(a)?a:a instanceof Uint8Array?Buffer.from(a):typeof a=="string"?Buffer.from(a,"utf8"):Buffer.alloc(0)};fe.readBigUInt64LE=function(e,a){var t=Buffer.from(e.slice(a,a+8));return t.swap64(),parseInt(`0x${t.toString("hex")}`)};fe.isWin=A3;fe.crcTable=g2});var nr=y((Uf,rr)=>{var bt=f2().require(),ir=require("path");bt.existsSync=bt.existsSync||ir.existsSync;rr.exports=function(e){var a=e||"",t=d(),p=null;function d(){return{directory:!1,readonly:!1,hidden:!1,executable:!1,mtime:0,atime:0}}return a&&bt.existsSync(a)?(p=bt.statSync(a),t.directory=p.isDirectory(),t.mtime=p.mtime,t.atime=p.atime,t.executable=(73&p.mode)!==0,t.readonly=(128&p.mode)===0,t.hidden=ir.basename(a)[0]==="."):console.warn("Invalid path: "+a),{get directory(){return t.directory},get readOnly(){return t.readonly},get hidden(){return t.hidden},get mtime(){return t.mtime},get atime(){return t.atime},get executable(){return t.executable},decodeAttributes:function(){},encodeAttributes:function(){},toJSON:function(){return{path:a,isDirectory:t.directory,isReadOnly:t.readonly,isHidden:t.hidden,isExecutable:t.executable,mTime:t.mtime,aTime:t.atime}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var W1=y((Hf,Ta)=>{Ta.exports=dr();Ta.exports.Constants=h2();Ta.exports.Errors=v2();Ta.exports.FileAttr=nr()});var lr=y((Mf,sr)=>{var Da=W1(),O=Da.Constants;sr.exports=function(){var e=20,a=10,t=0,p=0,d=0,i=0,r=0,s=0,n=0,o=0,l=0,u=0,f=0,c=0,m=0;e|=Da.isWin?2560:768,t|=O.FLG_EFS;var h={};function g(v){v=new Date(v),d=(v.getFullYear()-1980&127)<<25|v.getMonth()+1<<21|v.getDate()<<16|v.getHours()<<11|v.getMinutes()<<5|v.getSeconds()>>1}return g(+new Date),{get made(){return e},set made(v){e=v},get version(){return a},set version(v){a=v},get flags(){return t},set flags(v){t=v},get method(){return p},set method(v){switch(v){case O.STORED:this.version=10;case O.DEFLATED:default:this.version=20}p=v},get time(){return new Date((d>>25&127)+1980,(d>>21&15)-1,d>>16&31,d>>11&31,d>>5&63,(d&31)<<1)},set time(v){g(v)},get crc(){return i},set crc(v){i=Math.max(0,v)>>>0},get compressedSize(){return r},set compressedSize(v){r=Math.max(0,v)>>>0},get size(){return s},set size(v){s=Math.max(0,v)>>>0},get fileNameLength(){return n},set fileNameLength(v){n=v},get extraLength(){return o},set extraLength(v){o=v},get commentLength(){return l},set commentLength(v){l=v},get diskNumStart(){return u},set diskNumStart(v){u=Math.max(0,v)>>>0},get inAttr(){return f},set inAttr(v){f=Math.max(0,v)>>>0},get attr(){return c},set attr(v){c=Math.max(0,v)>>>0},get fileAttr(){return c?(c>>>0|0)>>16&4095:0},get offset(){return m},set offset(v){m=Math.max(0,v)>>>0},get encripted(){return(t&1)===1},get entryHeaderSize(){return O.CENHDR+n+o+l},get realDataOffset(){return m+O.LOCHDR+h.fnameLen+h.extraLen},get dataHeader(){return h},loadDataHeaderFromBinary:function(v){var w=v.slice(m,m+O.LOCHDR);if(w.readUInt32LE(0)!==O.LOCSIG)throw new Error(Da.Errors.INVALID_LOC);h={version:w.readUInt16LE(O.LOCVER),flags:w.readUInt16LE(O.LOCFLG),method:w.readUInt16LE(O.LOCHOW),time:w.readUInt32LE(O.LOCTIM),crc:w.readUInt32LE(O.LOCCRC),compressedSize:w.readUInt32LE(O.LOCSIZ),size:w.readUInt32LE(O.LOCLEN),fnameLen:w.readUInt16LE(O.LOCNAM),extraLen:w.readUInt16LE(O.LOCEXT)}},loadFromBinary:function(v){if(v.length!==O.CENHDR||v.readUInt32LE(0)!==O.CENSIG)throw new Error(Da.Errors.INVALID_CEN);e=v.readUInt16LE(O.CENVEM),a=v.readUInt16LE(O.CENVER),t=v.readUInt16LE(O.CENFLG),p=v.readUInt16LE(O.CENHOW),d=v.readUInt32LE(O.CENTIM),i=v.readUInt32LE(O.CENCRC),r=v.readUInt32LE(O.CENSIZ),s=v.readUInt32LE(O.CENLEN),n=v.readUInt16LE(O.CENNAM),o=v.readUInt16LE(O.CENEXT),l=v.readUInt16LE(O.CENCOM),u=v.readUInt16LE(O.CENDSK),f=v.readUInt16LE(O.CENATT),c=v.readUInt32LE(O.CENATX),m=v.readUInt32LE(O.CENOFF)},dataHeaderToBinary:function(){var v=Buffer.alloc(O.LOCHDR);return v.writeUInt32LE(O.LOCSIG,0),v.writeUInt16LE(a,O.LOCVER),v.writeUInt16LE(t,O.LOCFLG),v.writeUInt16LE(p,O.LOCHOW),v.writeUInt32LE(d,O.LOCTIM),v.writeUInt32LE(i,O.LOCCRC),v.writeUInt32LE(r,O.LOCSIZ),v.writeUInt32LE(s,O.LOCLEN),v.writeUInt16LE(n,O.LOCNAM),v.writeUInt16LE(o,O.LOCEXT),v},entryHeaderToBinary:function(){var v=Buffer.alloc(O.CENHDR+n+o+l);return v.writeUInt32LE(O.CENSIG,0),v.writeUInt16LE(e,O.CENVEM),v.writeUInt16LE(a,O.CENVER),v.writeUInt16LE(t,O.CENFLG),v.writeUInt16LE(p,O.CENHOW),v.writeUInt32LE(d,O.CENTIM),v.writeUInt32LE(i,O.CENCRC),v.writeUInt32LE(r,O.CENSIZ),v.writeUInt32LE(s,O.CENLEN),v.writeUInt16LE(n,O.CENNAM),v.writeUInt16LE(o,O.CENEXT),v.writeUInt16LE(l,O.CENCOM),v.writeUInt16LE(u,O.CENDSK),v.writeUInt16LE(f,O.CENATT),v.writeUInt32LE(c,O.CENATX),v.writeUInt32LE(m,O.CENOFF),v.fill(0,O.CENHDR),v},toJSON:function(){let v=function(w){return w+" bytes"};return{made:e,version:a,flags:t,method:Da.methodToString(p),time:this.time,crc:"0x"+i.toString(16).toUpperCase(),compressedSize:v(r),size:v(s),fileNameLength:v(n),extraLength:v(o),commentLength:v(l),diskNumStart:u,inAttr:f,attr:c,offset:m,entryHeaderSize:v(O.CENHDR+n+o+l)}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var mr=y((jf,or)=>{var X1=W1(),Q=X1.Constants;or.exports=function(){var e=0,a=0,t=0,p=0,d=0;return{get diskEntries(){return e},set diskEntries(i){e=a=i},get totalEntries(){return a},set totalEntries(i){a=e=i},get size(){return t},set size(i){t=i},get offset(){return p},set offset(i){p=i},get commentLength(){return d},set commentLength(i){d=i},get mainHeaderSize(){return Q.ENDHDR+d},loadFromBinary:function(i){if((i.length!==Q.ENDHDR||i.readUInt32LE(0)!==Q.ENDSIG)&&(i.length<Q.ZIP64HDR||i.readUInt32LE(0)!==Q.ZIP64SIG))throw new Error(X1.Errors.INVALID_END);i.readUInt32LE(0)===Q.ENDSIG?(e=i.readUInt16LE(Q.ENDSUB),a=i.readUInt16LE(Q.ENDTOT),t=i.readUInt32LE(Q.ENDSIZ),p=i.readUInt32LE(Q.ENDOFF),d=i.readUInt16LE(Q.ENDCOM)):(e=X1.readBigUInt64LE(i,Q.ZIP64SUB),a=X1.readBigUInt64LE(i,Q.ZIP64TOT),t=X1.readBigUInt64LE(i,Q.ZIP64SIZE),p=X1.readBigUInt64LE(i,Q.ZIP64OFF),d=0)},toBinary:function(){var i=Buffer.alloc(Q.ENDHDR+d);return i.writeUInt32LE(Q.ENDSIG,0),i.writeUInt32LE(0,4),i.writeUInt16LE(e,Q.ENDSUB),i.writeUInt16LE(a,Q.ENDTOT),i.writeUInt32LE(t,Q.ENDSIZ),i.writeUInt32LE(p,Q.ENDOFF),i.writeUInt16LE(d,Q.ENDCOM),i.fill(" ",Q.ENDHDR),i},toJSON:function(){let i=function(r,s){let n=r.toString(16).toUpperCase();for(;n.length<s;)n="0"+n;return"0x"+n};return{diskEntries:e,totalEntries:a,size:t+" bytes",offset:i(p,4),commentLength:d}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var y2=y(w2=>{w2.EntryHeader=lr();w2.MainHeader=mr()});var cr=y((zf,ur)=>{ur.exports=function(e){var a=require("zlib"),t={chunkSize:(parseInt(e.length/1024)+1)*1024};return{deflate:function(){return a.deflateRawSync(e,t)},deflateAsync:function(p){var d=a.createDeflateRaw(t),i=[],r=0;d.on("data",function(s){i.push(s),r+=s.length}),d.on("end",function(){var s=Buffer.alloc(r),n=0;s.fill(0);for(var o=0;o<i.length;o++){var l=i[o];l.copy(s,n),n+=l.length}p&&p(s)}),d.end(e)}}}});var hr=y((Wf,fr)=>{fr.exports=function(e){var a=require("zlib");return{inflate:function(){return a.inflateRawSync(e)},inflateAsync:function(t){var p=a.createInflateRaw(),d=[],i=0;p.on("data",function(r){d.push(r),i+=r.length}),p.on("end",function(){var r=Buffer.alloc(i),s=0;r.fill(0);for(var n=0;n<d.length;n++){var o=d[n];o.copy(r,s),s+=o.length}t&&t(r)}),p.end(e)}}}});var Er=y((Xf,yr)=>{"use strict";var{randomFillSync:vr}=require("crypto"),x3=new Uint32Array(256).map((e,a)=>{for(let t=0;t<8;t++)a&1?a=a>>>1^3988292384:a>>>=1;return a>>>0}),wr=(e,a)=>Math.imul(e,a)>>>0,gr=(e,a)=>x3[(e^a)&255]^e>>>8,Aa=()=>typeof vr=="function"?vr(Buffer.alloc(12)):Aa.node();Aa.node=()=>{let e=Buffer.alloc(12),a=e.length;for(let t=0;t<a;t++)e[t]=Math.random()*256&255;return e};var Tt={genSalt:Aa};function Dt(e){let a=Buffer.isBuffer(e)?e:Buffer.from(e);this.keys=new Uint32Array([305419896,591751049,878082192]);for(let t=0;t<a.length;t++)this.updateKeys(a[t])}Dt.prototype.updateKeys=function(e){let a=this.keys;return a[0]=gr(a[0],e),a[1]+=a[0]&255,a[1]=wr(a[1],134775813)+1,a[2]=gr(a[2],a[1]>>>24),e};Dt.prototype.next=function(){let e=(this.keys[2]|2)>>>0;return wr(e,e^1)>>8&255};function C3(e){let a=new Dt(e);return function(t){let p=Buffer.alloc(t.length),d=0;for(let i of t)p[d++]=a.updateKeys(i^a.next());return p}}function I3(e){let a=new Dt(e);return function(t,p,d=0){p||(p=Buffer.alloc(t.length));for(let i of t){let r=a.next();p[d++]=i^r,a.updateKeys(i)}return p}}function R3(e,a,t){if(!e||!Buffer.isBuffer(e)||e.length<12)return Buffer.alloc(0);let p=C3(t);if(p(e.slice(0,12))[11]!==a.crc>>>24)throw"ADM-ZIP: Wrong Password";return p(e.slice(12))}function O3(e){Buffer.isBuffer(e)&&e.length>=12?Tt.genSalt=function(){return e.slice(0,12)}:e==="node"?Tt.genSalt=Aa.node:Tt.genSalt=Aa}function L3(e,a,t,p=!1){e==null&&(e=Buffer.alloc(0)),Buffer.isBuffer(e)||(e=Buffer.from(e.toString()));let d=I3(t),i=Tt.genSalt();i[11]=a.crc>>>24&255,p&&(i[10]=a.crc>>>16&255);let r=Buffer.alloc(e.length+12);return d(i,r),d(e,r,12)}yr.exports={decrypt:R3,encrypt:L3,_salter:O3}});var Sr=y(At=>{At.Deflater=cr();At.Inflater=hr();At.ZipCrypto=Er()});var S2=y((Kf,Nr)=>{var de=W1(),V3=y2(),Ve=de.Constants,E2=Sr();Nr.exports=function(e){var a=new V3.EntryHeader,t=Buffer.alloc(0),p=Buffer.alloc(0),d=!1,i=null,r=Buffer.alloc(0);function s(){return!e||!Buffer.isBuffer(e)?Buffer.alloc(0):(a.loadDataHeaderFromBinary(e),e.slice(a.realDataOffset,a.realDataOffset+a.compressedSize))}function n(m){return!((a.flags&8)!==8&&de.crc32(m)!==a.dataHeader.crc)}function o(m,h,g){if(typeof h>"u"&&typeof m=="string"&&(g=m,m=void 0),d)return m&&h&&h(Buffer.alloc(0),de.Errors.DIRECTORY_CONTENT_ERROR),Buffer.alloc(0);var v=s();if(v.length===0)return m&&h&&h(v),v;if(a.encripted){if(typeof g!="string"&&!Buffer.isBuffer(g))throw new Error("ADM-ZIP: Incompatible password parameter");v=E2.ZipCrypto.decrypt(v,a,g)}var w=Buffer.alloc(a.size);switch(a.method){case de.Constants.STORED:if(v.copy(w),n(w))return m&&h&&h(w),w;throw m&&h&&h(w,de.Errors.BAD_CRC),new Error(de.Errors.BAD_CRC);case de.Constants.DEFLATED:var _=new E2.Inflater(v);if(m)_.inflateAsync(function(b){b.copy(b,0),h&&(n(b)?h(b):h(b,de.Errors.BAD_CRC))});else{if(_.inflate(w).copy(w,0),!n(w))throw new Error(de.Errors.BAD_CRC+" "+t.toString());return w}break;default:throw m&&h&&h(Buffer.alloc(0),de.Errors.UNKNOWN_METHOD),new Error(de.Errors.UNKNOWN_METHOD)}}function l(m,h){if((!i||!i.length)&&Buffer.isBuffer(e))return m&&h&&h(s()),s();if(i.length&&!d){var g;switch(a.method){case de.Constants.STORED:return a.compressedSize=a.size,g=Buffer.alloc(i.length),i.copy(g),m&&h&&h(g),g;default:case de.Constants.DEFLATED:var v=new E2.Deflater(i);if(m)v.deflateAsync(function(_){g=Buffer.alloc(_.length),a.compressedSize=_.length,_.copy(g),h&&h(g)});else{var w=v.deflate();return a.compressedSize=w.length,w}v=null;break}}else if(m&&h)h(Buffer.alloc(0));else return Buffer.alloc(0)}function u(m,h){return(m.readUInt32LE(h+4)<<4)+m.readUInt32LE(h)}function f(m){for(var h=0,g,v,w;h<m.length;)g=m.readUInt16LE(h),h+=2,v=m.readUInt16LE(h),h+=2,w=m.slice(h,h+v),h+=v,Ve.ID_ZIP64===g&&c(w)}function c(m){var h,g,v,w;m.length>=Ve.EF_ZIP64_SCOMP&&(h=u(m,Ve.EF_ZIP64_SUNCOMP),a.size===Ve.EF_ZIP64_OR_32&&(a.size=h)),m.length>=Ve.EF_ZIP64_RHO&&(g=u(m,Ve.EF_ZIP64_SCOMP),a.compressedSize===Ve.EF_ZIP64_OR_32&&(a.compressedSize=g)),m.length>=Ve.EF_ZIP64_DSN&&(v=u(m,Ve.EF_ZIP64_RHO),a.offset===Ve.EF_ZIP64_OR_32&&(a.offset=v)),m.length>=Ve.EF_ZIP64_DSN+4&&(w=m.readUInt32LE(Ve.EF_ZIP64_DSN),a.diskNumStart===Ve.EF_ZIP64_OR_16&&(a.diskNumStart=w))}return{get entryName(){return t.toString()},get rawEntryName(){return t},set entryName(m){t=de.toBuffer(m);var h=t[t.length-1];d=h===47||h===92,a.fileNameLength=t.length},get extra(){return r},set extra(m){r=m,a.extraLength=m.length,f(m)},get comment(){return p.toString()},set comment(m){p=de.toBuffer(m),a.commentLength=p.length},get name(){var m=t.toString();return d?m.substr(m.length-1).split("/").pop():m.split("/").pop()},get isDirectory(){return d},getCompressedData:function(){return l(!1,null)},getCompressedDataAsync:function(m){l(!0,m)},setData:function(m){i=de.toBuffer(m),!d&&i.length?(a.size=i.length,a.method=de.Constants.DEFLATED,a.crc=de.crc32(m),a.changed=!0):a.method=de.Constants.STORED},getData:function(m){return a.changed?i:o(!1,null,m)},getDataAsync:function(m,h){a.changed?m(i):o(!0,m,h)},set attr(m){a.attr=m},get attr(){return a.attr},set header(m){a.loadFromBinary(m)},get header(){return a},packHeader:function(){var m=a.entryHeaderToBinary(),h=de.Constants.CENHDR;return t.copy(m,h),h+=t.length,a.extraLength&&(r.copy(m,h),h+=a.extraLength),a.commentLength&&p.copy(m,h),m},toJSON:function(){let m=function(h){return"<"+(h&&h.length+" bytes buffer"||"null")+">"};return{entryName:this.entryName,name:this.name,comment:this.comment,isDirectory:this.isDirectory,header:a.toJSON(),compressedData:m(e),data:m(i)}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var Tr=y((Yf,br)=>{var _r=S2(),P3=y2(),ye=W1();br.exports=function(e,a){var t=[],p={},d=Buffer.alloc(0),i=new P3.MainHeader,r=!1;let s=Object.assign(Object.create(null),a),{noSort:n}=s;e?u(s.readEntries):r=!0;function o(c){let m=i.diskEntries,h=i.offset;for(let g=0;g<m;g++){let v=h,w=new _r(e);w.header=e.slice(v,v+=ye.Constants.CENHDR),w.entryName=e.slice(v,v+=w.header.fileNameLength),h+=w.header.entryHeaderSize,c(w)}}function l(){r=!0,p={},t=new Array(i.diskEntries);for(var c=i.offset,m=0;m<t.length;m++){var h=c,g=new _r(e);g.header=e.slice(h,h+=ye.Constants.CENHDR),g.entryName=e.slice(h,h+=g.header.fileNameLength),g.header.extraLength&&(g.extra=e.slice(h,h+=g.header.extraLength)),g.header.commentLength&&(g.comment=e.slice(h,h+g.header.commentLength)),c+=g.header.entryHeaderSize,t[m]=g,p[g.entryName]=g}}function u(c){var m=e.length-ye.Constants.ENDHDR,h=Math.max(0,m-65535),g=h,v=e.length,w=-1,_=0;for(m;m>=g;m--)if(e[m]===80){if(e.readUInt32LE(m)===ye.Constants.ENDSIG){w=m,_=m,v=m+ye.Constants.ENDHDR,g=m-ye.Constants.END64HDR;continue}if(e.readUInt32LE(m)===ye.Constants.END64SIG){g=h;continue}if(e.readUInt32LE(m)===ye.Constants.ZIP64SIG){w=m,v=m+ye.readBigUInt64LE(e,m+ye.Constants.ZIP64SIZE)+ye.Constants.ZIP64LEAD;break}}if(!~w)throw new Error(ye.Errors.INVALID_FORMAT);i.loadFromBinary(e.slice(w,v)),i.commentLength&&(d=e.slice(_+ye.Constants.ENDHDR)),c&&l()}function f(){t.length>1&&!n&&t.sort((c,m)=>c.entryName.toLowerCase().localeCompare(m.entryName.toLowerCase()))}return{get entries(){return r||l(),t},get comment(){return d.toString()},set comment(c){d=ye.toBuffer(c),i.commentLength=d.length},getEntryCount:function(){return r?t.length:i.diskEntries},forEach:function(c){if(!r){o(c);return}t.forEach(c)},getEntry:function(c){return r||l(),p[c]||null},setEntry:function(c){r||l(),t.push(c),p[c.entryName]=c,i.totalEntries=t.length},deleteEntry:function(c){r||l();var m=p[c];if(m&&m.isDirectory){var h=this;this.getEntryChildren(m).forEach(function(g){g.entryName!==c&&h.deleteEntry(g.entryName)})}t.splice(t.indexOf(m),1),delete p[c],i.totalEntries=t.length},getEntryChildren:function(c){if(r||l(),c&&c.isDirectory){let m=[],h=c.entryName,g=h.length;return t.forEach(function(v){v.entryName.substr(0,g)===h&&m.push(v)}),m}return[]},compressToBuffer:function(){r||l(),f();let c=[],m=[],h=0,g=0;i.size=0,i.offset=0;for(let _ of t){let b=_.getCompressedData();_.header.offset=g;let T=_.header.dataHeaderToBinary(),R=_.rawEntryName.length,x=Buffer.alloc(R+_.extra.length);_.rawEntryName.copy(x,0),x.copy(_.extra,R);let D=T.length+x.length+b.length;g+=D,c.push(T),c.push(x),c.push(b);let C=_.packHeader();m.push(C),i.size+=C.length,h+=D+C.length}h+=i.mainHeaderSize,i.offset=g,g=0;let v=Buffer.alloc(h);for(let _ of c)_.copy(v,g),g+=_.length;for(let _ of m)_.copy(v,g),g+=_.length;let w=i.toBinary();return d&&d.copy(w,ye.Constants.ENDHDR),w.copy(v,g),v},toAsyncBuffer:function(c,m,h,g){try{r||l(),f();let v=[],w=[],_=0,b=0;i.size=0,i.offset=0;let T=function(R){if(R.length){let x=R.pop(),D=x.entryName+x.extra.toString();h&&h(D),x.getCompressedDataAsync(function(C){g&&g(D),x.header.offset=b;let U=x.header.dataHeaderToBinary(),N=Buffer.alloc(D.length,D),H=U.length+N.length+C.length;b+=H,v.push(U),v.push(N),v.push(C);let $=x.packHeader();w.push($),i.size+=$.length,_+=H+$.length,T(R)})}else{_+=i.mainHeaderSize,i.offset=b,b=0;let x=Buffer.alloc(_);v.forEach(function(C){C.copy(x,b),b+=C.length}),w.forEach(function(C){C.copy(x,b),b+=C.length});let D=i.toBinary();d&&d.copy(D,ye.Constants.ENDHDR),D.copy(x,b),c(x)}};T(t)}catch(v){m(v)}}}}});var Ar=y((Qf,Dr)=>{var le=W1(),Je=require("path"),$3=S2(),F3=Tr(),L1=(e,a)=>typeof e=="boolean"?e:a,N2=(e,a)=>typeof e=="string"?e:a,q3={noSort:!1,readEntries:!1,method:le.Constants.NONE,fs:null};Dr.exports=function(e,a){let t=null,p=Object.assign(Object.create(null),q3);e&&typeof e=="object"&&(e instanceof Uint8Array||(Object.assign(p,e),e=p.input?p.input:void 0,p.input&&delete p.input),Buffer.isBuffer(e)&&(t=e,p.method=le.Constants.BUFFER,e=void 0)),Object.assign(p,a);let d=new le(p);if(e&&typeof e=="string")if(d.fs.existsSync(e))p.method=le.Constants.FILE,p.filename=e,t=d.fs.readFileSync(e);else throw new Error(le.Errors.INVALID_FILENAME);let i=new F3(t,p),{canonical:r,sanitize:s}=le;function n(l){if(l&&i){var u;if(typeof l=="string"&&(u=i.getEntry(l)),typeof l=="object"&&typeof l.entryName<"u"&&typeof l.header<"u"&&(u=i.getEntry(l.entryName)),u)return u}return null}function o(l){let{join:u,normalize:f,sep:c}=Je.posix;return u(".",f(c+l.split("\\").join(c)+c))}return{readFile:function(l,u){var f=n(l);return f&&f.getData(u)||null},readFileAsync:function(l,u){var f=n(l);f?f.getDataAsync(u):u(null,"getEntry failed for:"+l)},readAsText:function(l,u){var f=n(l);if(f){var c=f.getData();if(c&&c.length)return c.toString(u||"utf8")}return""},readAsTextAsync:function(l,u,f){var c=n(l);c?c.getDataAsync(function(m,h){if(h){u(m,h);return}m&&m.length?u(m.toString(f||"utf8")):u("")}):u("")},deleteFile:function(l){var u=n(l);u&&i.deleteEntry(u.entryName)},addZipComment:function(l){i.comment=l},getZipComment:function(){return i.comment||""},addZipEntryComment:function(l,u){var f=n(l);f&&(f.comment=u)},getZipEntryComment:function(l){var u=n(l);return u&&u.comment||""},updateFile:function(l,u){var f=n(l);f&&f.setData(u)},addLocalFile:function(l,u,f,c){if(d.fs.existsSync(l)){u=u?o(u):"";var m=l.split("\\").join("/").split("/").pop();u+=f||m;let h=d.fs.statSync(l);this.addFile(u,d.fs.readFileSync(l),c,h)}else throw new Error(le.Errors.FILE_NOT_FOUND.replace("%s",l))},addLocalFolder:function(l,u,f,c){if(f instanceof RegExp?f=function(m){return function(h){return m.test(h)}}(f):typeof f!="function"&&(f=function(){return!0}),u=u?o(u):"",l=Je.normalize(l),d.fs.existsSync(l)){let m=d.findFiles(l),h=this;m.length&&m.forEach(function(g){var v=Je.relative(l,g).split("\\").join("/");if(f(v)){var w=d.fs.statSync(g);w.isFile()?h.addFile(u+v,d.fs.readFileSync(g),"",c||w):h.addFile(u+v+"/",Buffer.alloc(0),"",c||w)}})}else throw new Error(le.Errors.FILE_NOT_FOUND.replace("%s",l))},addLocalFolderAsync:function(l,u,f,c){c instanceof RegExp?c=function(h){return function(g){return h.test(g)}}(c):typeof c!="function"&&(c=function(){return!0}),f=f?o(f):"",l=Je.normalize(l);var m=this;d.fs.open(l,"r",function(h){if(h&&h.code==="ENOENT")u(void 0,le.Errors.FILE_NOT_FOUND.replace("%s",l));else if(h)u(void 0,h);else{var g=d.findFiles(l),v=-1,w=function(){if(v+=1,v<g.length){var _=g[v],b=Je.relative(l,_).split("\\").join("/");b=b.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/[^\x20-\x7E]/g,""),c(b)?d.fs.stat(_,function(T,R){T&&u(void 0,T),R.isFile()?d.fs.readFile(_,function(x,D){x?u(void 0,x):(m.addFile(f+b,D,"",R),w())}):(m.addFile(f+b+"/",Buffer.alloc(0),"",R),w())}):process.nextTick(()=>{w()})}else u(!0,void 0)};w()}})},addLocalFolderPromise:function(l,u){return new Promise((f,c)=>{let{filter:m,zipPath:h}=Object.assign({},u);this.addLocalFolderAsync(l,(g,v)=>{v&&c(v),g&&f(this)},h,m)})},addFile:function(l,u,f,c){let m=n(l),h=m!=null;h||(m=new $3,m.entryName=l),m.comment=f||"";let g=typeof c=="object"&&c instanceof d.fs.Stats;g&&(m.header.time=c.mtime);var v=m.isDirectory?16:0;let w=m.isDirectory?16384:32768;g?w|=4095&c.mode:typeof c=="number"?w|=4095&c:w|=m.isDirectory?493:420,v=(v|w<<16)>>>0,m.attr=v,m.setData(u),h||i.setEntry(m)},getEntries:function(){return i?i.entries:[]},getEntry:function(l){return n(l)},getEntryCount:function(){return i.getEntryCount()},forEach:function(l){return i.forEach(l)},extractEntryTo:function(l,u,f,c,m,h){c=L1(c,!1),m=L1(m,!1),f=L1(f,!0),h=N2(h,N2(m,void 0));var g=n(l);if(!g)throw new Error(le.Errors.NO_ENTRY);var v=r(g.entryName),w=s(u,h&&!g.isDirectory?h:f?v:Je.basename(v));if(g.isDirectory){var _=i.getEntryChildren(g);return _.forEach(function(R){if(R.isDirectory)return;var x=R.getData();if(!x)throw new Error(le.Errors.CANT_EXTRACT_FILE);var D=r(R.entryName),C=s(u,f?D:Je.basename(D));let U=m?R.header.fileAttr:void 0;d.writeFileTo(C,x,c,U)}),!0}var b=g.getData();if(!b)throw new Error(le.Errors.CANT_EXTRACT_FILE);if(d.fs.existsSync(w)&&!c)throw new Error(le.Errors.CANT_OVERRIDE);let T=m?l.header.fileAttr:void 0;return d.writeFileTo(w,b,c,T),!0},test:function(l){if(!i)return!1;for(var u in i.entries)try{if(u.isDirectory)continue;var f=i.entries[u].getData(l);if(!f)return!1}catch{return!1}return!0},extractAllTo:function(l,u,f,c){if(u=L1(u,!1),c=N2(f,c),f=L1(f,!1),!i)throw new Error(le.Errors.NO_ZIP);i.entries.forEach(function(m){var h=s(l,r(m.entryName.toString()));if(m.isDirectory){d.makeDir(h);return}var g=m.getData(c);if(!g)throw new Error(le.Errors.CANT_EXTRACT_FILE);let v=f?m.header.fileAttr:void 0;d.writeFileTo(h,g,u,v);try{d.fs.utimesSync(h,m.header.time,m.header.time)}catch{throw new Error(le.Errors.CANT_EXTRACT_FILE)}})},extractAllToAsync:function(l,u,f,c){if(u=L1(u,!1),typeof f=="function"&&!c&&(c=f),f=L1(f,!1),c||(c=function(_){throw new Error(_)}),!i){c(new Error(le.Errors.NO_ZIP));return}l=Je.resolve(l);let m=_=>s(l,Je.normalize(r(_.entryName.toString()))),h=(_,b)=>new Error(_+': "'+b+'"'),g=[],v=new Set;i.entries.forEach(_=>{_.isDirectory?g.push(_):v.add(_)});for(let _ of g){let b=m(_),T=f?_.header.fileAttr:void 0;try{d.makeDir(b),T&&d.fs.chmodSync(b,T),d.fs.utimesSync(b,_.header.time,_.header.time)}catch{c(h("Unable to create folder",b))}}let w=()=>{v.size===0&&c()};for(let _ of v.values()){let b=Je.normalize(r(_.entryName.toString())),T=s(l,b);_.getDataAsync(function(R,x){if(x){c(new Error(x));return}if(!R)c(new Error(le.Errors.CANT_EXTRACT_FILE));else{let D=f?_.header.fileAttr:void 0;d.writeFileToAsync(T,R,u,D,function(C){if(!C){c(h("Unable to write file",T));return}d.fs.utimes(T,_.header.time,_.header.time,function(U){if(U){c(h("Unable to set times",T));return}v.delete(_),w()})})}})}w()},writeZip:function(l,u){if(arguments.length===1&&typeof l=="function"&&(u=l,l=""),!l&&p.filename&&(l=p.filename),!!l){var f=i.compressToBuffer();if(f){var c=d.writeFileTo(l,f,!0);typeof u=="function"&&u(c?null:new Error("failed"),"")}}},writeZipPromise:function(l,u){let{overwrite:f,perm:c}=Object.assign({overwrite:!0},u);return new Promise((m,h)=>{!l&&p.filename&&(l=p.filename),l||h("ADM-ZIP: ZIP File Name Missing"),this.toBufferPromise().then(g=>{let v=w=>w?m(w):h("ADM-ZIP: Wasn't able to write zip file");d.writeFileToAsync(l,g,f,c,v)},h)})},toBufferPromise:function(){return new Promise((l,u)=>{i.toAsyncBuffer(l,u)})},toBuffer:function(l,u,f,c){return this.valueOf=2,typeof l=="function"?(i.toAsyncBuffer(l,u,f,c),null):i.compressToBuffer()}}}});var Ir=y((Jf,Cr)=>{"use strict";var J={};Cr.exports=J;function xr(e){return e<0?-1:1}function B3(e){return e%1===.5&&!(e&1)?Math.floor(e):Math.round(e)}function w1(e,a){a.unsigned||--e;let t=a.unsigned?0:-Math.pow(2,e),p=Math.pow(2,e)-1,d=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),i=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(r,s){s||(s={});let n=+r;if(s.enforceRange){if(!Number.isFinite(n))throw new TypeError("Argument is not a finite number");if(n=xr(n)*Math.floor(Math.abs(n)),n<t||n>p)throw new TypeError("Argument is not in byte range");return n}if(!isNaN(n)&&s.clamp)return n=B3(n),n<t&&(n=t),n>p&&(n=p),n;if(!Number.isFinite(n)||n===0)return 0;if(n=xr(n)*Math.floor(Math.abs(n)),n=n%d,!a.unsigned&&n>=i)return n-d;if(a.unsigned){if(n<0)n+=d;else if(n===-0)return 0}return n}}J.void=function(){};J.boolean=function(e){return!!e};J.byte=w1(8,{unsigned:!1});J.octet=w1(8,{unsigned:!0});J.short=w1(16,{unsigned:!1});J["unsigned short"]=w1(16,{unsigned:!0});J.long=w1(32,{unsigned:!1});J["unsigned long"]=w1(32,{unsigned:!0});J["long long"]=w1(32,{unsigned:!1,moduloBitLength:64});J["unsigned long long"]=w1(32,{unsigned:!0,moduloBitLength:64});J.double=function(e){let a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a};J["unrestricted double"]=function(e){let a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a};J.float=J.double;J["unrestricted float"]=J["unrestricted double"];J.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&e===null?"":String(e)};J.ByteString=function(e,a){let t=String(e),p;for(let d=0;(p=t.codePointAt(d))!==void 0;++d)if(p>255)throw new TypeError("Argument is not a valid bytestring");return t};J.USVString=function(e){let a=String(e),t=a.length,p=[];for(let d=0;d<t;++d){let i=a.charCodeAt(d);if(i<55296||i>57343)p.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)p.push(String.fromCodePoint(65533));else if(d===t-1)p.push(String.fromCodePoint(65533));else{let r=a.charCodeAt(d+1);if(56320<=r&&r<=57343){let s=i&1023,n=r&1023;p.push(String.fromCodePoint(65536+1024*s+n)),++d}else p.push(String.fromCodePoint(65533))}}return p.join("")};J.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e};J.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e}});var Rr=y((eh,y1)=>{"use strict";y1.exports.mixin=function(a,t){let p=Object.getOwnPropertyNames(t);for(let d=0;d<p.length;++d)Object.defineProperty(a,p[d],Object.getOwnPropertyDescriptor(t,p[d]))};y1.exports.wrapperSymbol=Symbol("wrapper");y1.exports.implSymbol=Symbol("impl");y1.exports.wrapperForImpl=function(e){return e[y1.exports.wrapperSymbol]};y1.exports.implForWrapper=function(e){return e[y1.exports.implSymbol]}});var Or=y((ah,k3)=>{k3.exports=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]});var qr=y((th,Ct)=>{"use strict";var Vr=require("punycode"),Lr=Or(),Z1={TRANSITIONAL:0,NONTRANSITIONAL:1};function Pr(e){return e.split("\0").map(function(a){return a.normalize("NFC")}).join("\0")}function $r(e){for(var a=0,t=Lr.length-1;a<=t;){var p=Math.floor((a+t)/2),d=Lr[p];if(d[0][0]<=e&&d[0][1]>=e)return d;d[0][0]>e?t=p-1:a=p+1}return null}var U3=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Fr(e){return e.replace(U3,"_").length}function H3(e,a,t){for(var p=!1,d="",i=Fr(e),r=0;r<i;++r){var s=e.codePointAt(r),n=$r(s);switch(n[1]){case"disallowed":p=!0,d+=String.fromCodePoint(s);break;case"ignored":break;case"mapped":d+=String.fromCodePoint.apply(String,n[2]);break;case"deviation":t===Z1.TRANSITIONAL?d+=String.fromCodePoint.apply(String,n[2]):d+=String.fromCodePoint(s);break;case"valid":d+=String.fromCodePoint(s);break;case"disallowed_STD3_mapped":a?(p=!0,d+=String.fromCodePoint(s)):d+=String.fromCodePoint.apply(String,n[2]);break;case"disallowed_STD3_valid":a&&(p=!0),d+=String.fromCodePoint(s);break}}return{string:d,error:p}}var M3=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function j3(e,a){e.substr(0,4)==="xn--"&&(e=Vr.toUnicode(e),a=Z1.NONTRANSITIONAL);var t=!1;(Pr(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(M3)===0)&&(t=!0);for(var p=Fr(e),d=0;d<p;++d){var i=$r(e.codePointAt(d));if(xt===Z1.TRANSITIONAL&&i[1]!=="valid"||xt===Z1.NONTRANSITIONAL&&i[1]!=="valid"&&i[1]!=="deviation"){t=!0;break}}return{label:e,error:t}}function xt(e,a,t){var p=H3(e,a,t);p.string=Pr(p.string);for(var d=p.string.split("."),i=0;i<d.length;++i)try{var r=j3(d[i]);d[i]=r.label,p.error=p.error||r.error}catch{p.error=!0}return{string:d.join("."),error:p.error}}Ct.exports.toASCII=function(e,a,t,p){var d=xt(e,a,t),i=d.string.split(".");if(i=i.map(function(n){try{return Vr.toASCII(n)}catch{return d.error=!0,n}}),p){var r=i.slice(0,i.length-1).join(".").length;(r.length>253||r.length===0)&&(d.error=!0);for(var s=0;s<i.length;++s)if(i.length>63||i.length===0){d.error=!0;break}}return d.error?null:i.join(".")};Ct.exports.toUnicode=function(e,a){var t=xt(e,a,Z1.NONTRANSITIONAL);return{domain:t.string,error:t.error}};Ct.exports.PROCESSING_OPTIONS=Z1});var e1=y((ph,Pe)=>{"use strict";var K1=require("punycode"),Br=qr(),Mr={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},q=Symbol("failure");function kr(e){return K1.ucs2.decode(e).length}function Ur(e,a){let t=e[a];return isNaN(t)?void 0:String.fromCodePoint(t)}function xa(e){return e>=48&&e<=57}function Ca(e){return e>=65&&e<=90||e>=97&&e<=122}function G3(e){return Ca(e)||xa(e)}function We(e){return xa(e)||e>=65&&e<=70||e>=97&&e<=102}function Hr(e){return e==="."||e.toLowerCase()==="%2e"}function z3(e){return e=e.toLowerCase(),e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function W3(e,a){return Ca(e)&&(a===58||a===124)}function jr(e){return e.length===2&&Ca(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function X3(e){return e.length===2&&Ca(e.codePointAt(0))&&e[1]===":"}function Z3(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function K3(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function _2(e){return Mr[e]!==void 0}function ne(e){return _2(e.scheme)}function Y3(e){return Mr[e]}function Gr(e){let a=e.toString(16).toUpperCase();return a.length===1&&(a="0"+a),"%"+a}function Q3(e){let a=new Buffer(e),t="";for(let p=0;p<a.length;++p)t+=Gr(a[p]);return t}function J3(e){let a=new Buffer(e),t=[];for(let p=0;p<a.length;++p)a[p]!==37?t.push(a[p]):a[p]===37&&We(a[p+1])&&We(a[p+2])?(t.push(parseInt(a.slice(p+1,p+3).toString(),16)),p+=2):t.push(a[p]);return new Buffer(t).toString()}function It(e){return e<=31||e>126}var e5=new Set([32,34,35,60,62,63,96,123,125]);function zr(e){return It(e)||e5.has(e)}var a5=new Set([47,58,59,61,64,91,92,93,94,124]);function T2(e){return zr(e)||a5.has(e)}function V1(e,a){let t=String.fromCodePoint(e);return a(e)?Q3(t):t}function t5(e){let a=10;return e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"?(e=e.substring(2),a=16):e.length>=2&&e.charAt(0)==="0"&&(e=e.substring(1),a=8),e===""?0:(a===10?/[^0-9]/:a===16?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?q:parseInt(e,a)}function p5(e){let a=e.split(".");if(a[a.length-1]===""&&a.length>1&&a.pop(),a.length>4)return e;let t=[];for(let i of a){if(i==="")return e;let r=t5(i);if(r===q)return e;t.push(r)}for(let i=0;i<t.length-1;++i)if(t[i]>255)return q;if(t[t.length-1]>=Math.pow(256,5-t.length))return q;let p=t.pop(),d=0;for(let i of t)p+=i*Math.pow(256,3-d),++d;return p}function d5(e){let a="",t=e;for(let p=1;p<=4;++p)a=String(t%256)+a,p!==4&&(a="."+a),t=Math.floor(t/256);return a}function i5(e){let a=[0,0,0,0,0,0,0,0],t=0,p=null,d=0;if(e=K1.ucs2.decode(e),e[d]===58){if(e[d+1]!==58)return q;d+=2,++t,p=t}for(;d<e.length;){if(t===8)return q;if(e[d]===58){if(p!==null)return q;++d,++t,p=t;continue}let i=0,r=0;for(;r<4&&We(e[d]);)i=i*16+parseInt(Ur(e,d),16),++d,++r;if(e[d]===46){if(r===0||(d-=r,t>6))return q;let s=0;for(;e[d]!==void 0;){let n=null;if(s>0)if(e[d]===46&&s<4)++d;else return q;if(!xa(e[d]))return q;for(;xa(e[d]);){let o=parseInt(Ur(e,d));if(n===null)n=o;else{if(n===0)return q;n=n*10+o}if(n>255)return q;++d}a[t]=a[t]*256+n,++s,(s===2||s===4)&&++t}if(s!==4)return q;break}else if(e[d]===58){if(++d,e[d]===void 0)return q}else if(e[d]!==void 0)return q;a[t]=i,++t}if(p!==null){let i=t-p;for(t=7;t!==0&&i>0;){let r=a[p+i-1];a[p+i-1]=a[t],a[t]=r,--t,--i}}else if(p===null&&t!==8)return q;return a}function r5(e){let a="",p=s5(e).idx,d=!1;for(let i=0;i<=7;++i)if(!(d&&e[i]===0)){if(d&&(d=!1),p===i){a+=i===0?"::":":",d=!0;continue}a+=e[i].toString(16),i!==7&&(a+=":")}return a}function b2(e,a){if(e[0]==="[")return e[e.length-1]!=="]"?q:i5(e.substring(1,e.length-1));if(!a)return n5(e);let t=J3(e),p=Br.toASCII(t,!1,Br.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(p===null||Z3(p))return q;let d=p5(p);return typeof d=="number"||d===q?d:p}function n5(e){if(K3(e))return q;let a="",t=K1.ucs2.decode(e);for(let p=0;p<t.length;++p)a+=V1(t[p],It);return a}function s5(e){let a=null,t=1,p=null,d=0;for(let i=0;i<e.length;++i)e[i]!==0?(d>t&&(a=p,t=d),p=null,d=0):(p===null&&(p=i),++d);return d>t&&(a=p,t=d),{idx:a,len:t}}function D2(e){return typeof e=="number"?d5(e):e instanceof Array?"["+r5(e)+"]":e}function l5(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function o5(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function Wr(e){let a=e.path;a.length!==0&&(e.scheme==="file"&&a.length===1&&u5(a[0])||a.pop())}function Xr(e){return e.username!==""||e.password!==""}function m5(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function u5(e){return/^[A-Za-z]:$/.test(e)}function ee(e,a,t,p,d){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=t||"utf-8",this.stateOverride=d,this.url=p,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let r=l5(this.input);r!==this.input&&(this.parseError=!0),this.input=r}let i=o5(this.input);for(i!==this.input&&(this.parseError=!0),this.input=i,this.state=d||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=K1.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let r=this.input[this.pointer],s=isNaN(r)?void 0:String.fromCodePoint(r),n=this["parse "+this.state](r,s);if(n){if(n===q){this.failure=!0;break}}else break}}ee.prototype["parse scheme start"]=function(a,t){if(Ca(a))this.buffer+=t.toLowerCase(),this.state="scheme";else if(!this.stateOverride)this.state="no scheme",--this.pointer;else return this.parseError=!0,q;return!0};ee.prototype["parse scheme"]=function(a,t){if(G3(a)||a===43||a===45||a===46)this.buffer+=t.toLowerCase();else if(a===58){if(this.stateOverride&&(ne(this.url)&&!_2(this.buffer)||!ne(this.url)&&_2(this.buffer)||(Xr(this.url)||this.url.port!==null)&&this.buffer==="file"||this.url.scheme==="file"&&(this.url.host===""||this.url.host===null))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;this.url.scheme==="file"?((this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47)&&(this.parseError=!0),this.state="file"):ne(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme?this.state="special relative or authority":ne(this.url)?this.state="special authority slashes":this.input[this.pointer+1]===47?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else if(!this.stateOverride)this.buffer="",this.state="no scheme",this.pointer=-1;else return this.parseError=!0,q;return!0};ee.prototype["parse no scheme"]=function(a){return this.base===null||this.base.cannotBeABaseURL&&a!==35?q:(this.base.cannotBeABaseURL&&a===35?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):this.base.scheme==="file"?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)};ee.prototype["parse special relative or authority"]=function(a){return a===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0};ee.prototype["parse path or authority"]=function(a){return a===47?this.state="authority":(this.state="path",--this.pointer),!0};ee.prototype["parse relative"]=function(a){return this.url.scheme=this.base.scheme,isNaN(a)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):a===47?this.state="relative slash":a===63?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):a===35?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):ne(this.url)&&a===92?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0};ee.prototype["parse relative slash"]=function(a){return ne(this.url)&&(a===47||a===92)?(a===92&&(this.parseError=!0),this.state="special authority ignore slashes"):a===47?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0};ee.prototype["parse special authority slashes"]=function(a){return a===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0};ee.prototype["parse special authority ignore slashes"]=function(a){return a!==47&&a!==92?(this.state="authority",--this.pointer):this.parseError=!0,!0};ee.prototype["parse authority"]=function(a,t){if(a===64){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let p=kr(this.buffer);for(let d=0;d<p;++d){let i=this.buffer.codePointAt(d);if(i===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let r=V1(i,T2);this.passwordTokenSeenFlag?this.url.password+=r:this.url.username+=r}this.buffer=""}else if(isNaN(a)||a===47||a===63||a===35||ne(this.url)&&a===92){if(this.atFlag&&this.buffer==="")return this.parseError=!0,q;this.pointer-=kr(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0};ee.prototype["parse hostname"]=ee.prototype["parse host"]=function(a,t){if(this.stateOverride&&this.url.scheme==="file")--this.pointer,this.state="file host";else if(a===58&&!this.arrFlag){if(this.buffer==="")return this.parseError=!0,q;let p=b2(this.buffer,ne(this.url));if(p===q)return q;if(this.url.host=p,this.buffer="",this.state="port",this.stateOverride==="hostname")return!1}else if(isNaN(a)||a===47||a===63||a===35||ne(this.url)&&a===92){if(--this.pointer,ne(this.url)&&this.buffer==="")return this.parseError=!0,q;if(this.stateOverride&&this.buffer===""&&(Xr(this.url)||this.url.port!==null))return this.parseError=!0,!1;let p=b2(this.buffer,ne(this.url));if(p===q)return q;if(this.url.host=p,this.buffer="",this.state="path start",this.stateOverride)return!1}else a===91?this.arrFlag=!0:a===93&&(this.arrFlag=!1),this.buffer+=t;return!0};ee.prototype["parse port"]=function(a,t){if(xa(a))this.buffer+=t;else if(isNaN(a)||a===47||a===63||a===35||ne(this.url)&&a===92||this.stateOverride){if(this.buffer!==""){let p=parseInt(this.buffer);if(p>Math.pow(2,16)-1)return this.parseError=!0,q;this.url.port=p===Y3(this.url.scheme)?null:p,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}else return this.parseError=!0,q;return!0};var c5=new Set([47,92,63,35]);ee.prototype["parse file"]=function(a){return this.url.scheme="file",a===47||a===92?(a===92&&(this.parseError=!0),this.state="file slash"):this.base!==null&&this.base.scheme==="file"?isNaN(a)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):a===63?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):a===35?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1===0||!W3(a,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!c5.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),Wr(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0};ee.prototype["parse file slash"]=function(a){return a===47||a===92?(a===92&&(this.parseError=!0),this.state="file host"):(this.base!==null&&this.base.scheme==="file"&&(X3(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0};ee.prototype["parse file host"]=function(a,t){if(isNaN(a)||a===47||a===92||a===63||a===35)if(--this.pointer,!this.stateOverride&&jr(this.buffer))this.parseError=!0,this.state="path";else if(this.buffer===""){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let p=b2(this.buffer,ne(this.url));if(p===q)return q;if(p==="localhost"&&(p=""),this.url.host=p,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0};ee.prototype["parse path start"]=function(a){return ne(this.url)?(a===92&&(this.parseError=!0),this.state="path",a!==47&&a!==92&&--this.pointer):!this.stateOverride&&a===63?(this.url.query="",this.state="query"):!this.stateOverride&&a===35?(this.url.fragment="",this.state="fragment"):a!==void 0&&(this.state="path",a!==47&&--this.pointer),!0};ee.prototype["parse path"]=function(a){if(isNaN(a)||a===47||ne(this.url)&&a===92||!this.stateOverride&&(a===63||a===35)){if(ne(this.url)&&a===92&&(this.parseError=!0),z3(this.buffer)?(Wr(this.url),a!==47&&!(ne(this.url)&&a===92)&&this.url.path.push("")):Hr(this.buffer)&&a!==47&&!(ne(this.url)&&a===92)?this.url.path.push(""):Hr(this.buffer)||(this.url.scheme==="file"&&this.url.path.length===0&&jr(this.buffer)&&(this.url.host!==""&&this.url.host!==null&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="",this.url.scheme==="file"&&(a===void 0||a===63||a===35))for(;this.url.path.length>1&&this.url.path[0]==="";)this.parseError=!0,this.url.path.shift();a===63&&(this.url.query="",this.state="query"),a===35&&(this.url.fragment="",this.state="fragment")}else a===37&&(!We(this.input[this.pointer+1])||!We(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=V1(a,zr);return!0};ee.prototype["parse cannot-be-a-base-URL path"]=function(a){return a===63?(this.url.query="",this.state="query"):a===35?(this.url.fragment="",this.state="fragment"):(!isNaN(a)&&a!==37&&(this.parseError=!0),a===37&&(!We(this.input[this.pointer+1])||!We(this.input[this.pointer+2]))&&(this.parseError=!0),isNaN(a)||(this.url.path[0]=this.url.path[0]+V1(a,It))),!0};ee.prototype["parse query"]=function(a,t){if(isNaN(a)||!this.stateOverride&&a===35){(!ne(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss")&&(this.encodingOverride="utf-8");let p=new Buffer(this.buffer);for(let d=0;d<p.length;++d)p[d]<33||p[d]>126||p[d]===34||p[d]===35||p[d]===60||p[d]===62?this.url.query+=Gr(p[d]):this.url.query+=String.fromCodePoint(p[d]);this.buffer="",a===35&&(this.url.fragment="",this.state="fragment")}else a===37&&(!We(this.input[this.pointer+1])||!We(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=t;return!0};ee.prototype["parse fragment"]=function(a){return isNaN(a)||(a===0?this.parseError=!0:(a===37&&(!We(this.input[this.pointer+1])||!We(this.input[this.pointer+2]))&&(this.parseError=!0),this.url.fragment+=V1(a,It))),!0};function f5(e,a){let t=e.scheme+":";if(e.host!==null?(t+="//",(e.username!==""||e.password!=="")&&(t+=e.username,e.password!==""&&(t+=":"+e.password),t+="@"),t+=D2(e.host),e.port!==null&&(t+=":"+e.port)):e.host===null&&e.scheme==="file"&&(t+="//"),e.cannotBeABaseURL)t+=e.path[0];else for(let p of e.path)t+="/"+p;return e.query!==null&&(t+="?"+e.query),!a&&e.fragment!==null&&(t+="#"+e.fragment),t}function h5(e){let a=e.scheme+"://";return a+=D2(e.host),e.port!==null&&(a+=":"+e.port),a}Pe.exports.serializeURL=f5;Pe.exports.serializeURLOrigin=function(e){switch(e.scheme){case"blob":try{return Pe.exports.serializeURLOrigin(Pe.exports.parseURL(e.path[0]))}catch{return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return h5({scheme:e.scheme,host:e.host,port:e.port});case"file":return"file://";default:return"null"}};Pe.exports.basicURLParse=function(e,a){a===void 0&&(a={});let t=new ee(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return t.failure?"failure":t.url};Pe.exports.setTheUsername=function(e,a){e.username="";let t=K1.ucs2.decode(a);for(let p=0;p<t.length;++p)e.username+=V1(t[p],T2)};Pe.exports.setThePassword=function(e,a){e.password="";let t=K1.ucs2.decode(a);for(let p=0;p<t.length;++p)e.password+=V1(t[p],T2)};Pe.exports.serializeHost=D2;Pe.exports.cannotHaveAUsernamePasswordPort=m5;Pe.exports.serializeInteger=function(e){return String(e)};Pe.exports.parseURL=function(e,a){return a===void 0&&(a={}),Pe.exports.basicURLParse(e,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}});var Kr=y(Zr=>{"use strict";var ae=e1();Zr.implementation=class{constructor(a){let t=a[0],p=a[1],d=null;if(p!==void 0&&(d=ae.basicURLParse(p),d==="failure"))throw new TypeError("Invalid base URL");let i=ae.basicURLParse(t,{baseURL:d});if(i==="failure")throw new TypeError("Invalid URL");this._url=i}get href(){return ae.serializeURL(this._url)}set href(a){let t=ae.basicURLParse(a);if(t==="failure")throw new TypeError("Invalid URL");this._url=t}get origin(){return ae.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(a){ae.basicURLParse(a+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(a){ae.cannotHaveAUsernamePasswordPort(this._url)||ae.setTheUsername(this._url,a)}get password(){return this._url.password}set password(a){ae.cannotHaveAUsernamePasswordPort(this._url)||ae.setThePassword(this._url,a)}get host(){let a=this._url;return a.host===null?"":a.port===null?ae.serializeHost(a.host):ae.serializeHost(a.host)+":"+ae.serializeInteger(a.port)}set host(a){this._url.cannotBeABaseURL||ae.basicURLParse(a,{url:this._url,stateOverride:"host"})}get hostname(){return this._url.host===null?"":ae.serializeHost(this._url.host)}set hostname(a){this._url.cannotBeABaseURL||ae.basicURLParse(a,{url:this._url,stateOverride:"hostname"})}get port(){return this._url.port===null?"":ae.serializeInteger(this._url.port)}set port(a){ae.cannotHaveAUsernamePasswordPort(this._url)||(a===""?this._url.port=null:ae.basicURLParse(a,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:this._url.path.length===0?"":"/"+this._url.path.join("/")}set pathname(a){this._url.cannotBeABaseURL||(this._url.path=[],ae.basicURLParse(a,{url:this._url,stateOverride:"path start"}))}get search(){return this._url.query===null||this._url.query===""?"":"?"+this._url.query}set search(a){let t=this._url;if(a===""){t.query=null;return}let p=a[0]==="?"?a.substring(1):a;t.query="",ae.basicURLParse(p,{url:t,stateOverride:"query"})}get hash(){return this._url.fragment===null||this._url.fragment===""?"":"#"+this._url.fragment}set hash(a){if(a===""){this._url.fragment=null;return}let t=a[0]==="#"?a.substring(1):a;this._url.fragment="",ae.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}});var Jr=y((rh,Ia)=>{"use strict";var ke=Ir(),Qr=Rr(),Yr=Kr(),G=Qr.implSymbol;function oe(e){if(!this||this[G]||!(this instanceof oe))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let a=[];for(let t=0;t<arguments.length&&t<2;++t)a[t]=arguments[t];a[0]=ke.USVString(a[0]),a[1]!==void 0&&(a[1]=ke.USVString(a[1])),Ia.exports.setup(this,a)}oe.prototype.toJSON=function(){if(!this||!Ia.exports.is(this))throw new TypeError("Illegal invocation");let a=[];for(let t=0;t<arguments.length&&t<0;++t)a[t]=arguments[t];return this[G].toJSON.apply(this[G],a)};Object.defineProperty(oe.prototype,"href",{get(){return this[G].href},set(e){e=ke.USVString(e),this[G].href=e},enumerable:!0,configurable:!0});oe.prototype.toString=function(){if(!this||!Ia.exports.is(this))throw new TypeError("Illegal invocation");return this.href};Object.defineProperty(oe.prototype,"origin",{get(){return this[G].origin},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"protocol",{get(){return this[G].protocol},set(e){e=ke.USVString(e),this[G].protocol=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"username",{get(){return this[G].username},set(e){e=ke.USVString(e),this[G].username=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"password",{get(){return this[G].password},set(e){e=ke.USVString(e),this[G].password=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"host",{get(){return this[G].host},set(e){e=ke.USVString(e),this[G].host=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"hostname",{get(){return this[G].hostname},set(e){e=ke.USVString(e),this[G].hostname=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"port",{get(){return this[G].port},set(e){e=ke.USVString(e),this[G].port=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"pathname",{get(){return this[G].pathname},set(e){e=ke.USVString(e),this[G].pathname=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"search",{get(){return this[G].search},set(e){e=ke.USVString(e),this[G].search=e},enumerable:!0,configurable:!0});Object.defineProperty(oe.prototype,"hash",{get(){return this[G].hash},set(e){e=ke.USVString(e),this[G].hash=e},enumerable:!0,configurable:!0});Ia.exports={is(e){return!!e&&e[G]instanceof Yr.implementation},create(e,a){let t=Object.create(oe.prototype);return this.setup(t,e,a),t},setup(e,a,t){t||(t={}),t.wrapper=e,e[G]=new Yr.implementation(a,t),e[G][Qr.wrapperSymbol]=e},interface:oe,expose:{Window:{URL:oe},Worker:{URL:oe}}}});var e0=y(a1=>{"use strict";a1.URL=Jr().interface;a1.serializeURL=e1().serializeURL;a1.serializeURLOrigin=e1().serializeURLOrigin;a1.basicURLParse=e1().basicURLParse;a1.setTheUsername=e1().setTheUsername;a1.setThePassword=e1().setThePassword;a1.serializeHost=e1().serializeHost;a1.serializeInteger=e1().serializeInteger;a1.parseURL=e1().parseURL});var o0={};Ti(o0,{FetchError:()=>he,Headers:()=>He,Request:()=>_1,Response:()=>Xe,default:()=>C5});function he(e,a,t){Error.call(this,e),this.message=e,this.type=a,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}function me(e){var a=this,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},p=t.size;let d=p===void 0?0:p;var i=t.timeout;let r=i===void 0?0:i;e==null?e=null:i0(e)?e=Buffer.from(e.toString()):Pa(e)||Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof Ue.default||(e=Buffer.from(String(e)))),this[n1]={body:e,disturbed:!1,error:null},this.size=d,this.timeout=r,e instanceof Ue.default&&e.on("error",function(s){let n=s.name==="AbortError"?s:new he(`Invalid response body while trying to fetch ${a.url}: ${s.message}`,"system",s);a[n1].error=n})}function Y1(){var e=this;if(this[n1].disturbed)return me.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[n1].disturbed=!0,this[n1].error)return me.Promise.reject(this[n1].error);let a=this.body;if(a===null)return me.Promise.resolve(Buffer.alloc(0));if(Pa(a)&&(a=a.stream()),Buffer.isBuffer(a))return me.Promise.resolve(a);if(!(a instanceof Ue.default))return me.Promise.resolve(Buffer.alloc(0));let t=[],p=0,d=!1;return new me.Promise(function(i,r){let s;e.timeout&&(s=setTimeout(function(){d=!0,r(new he(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(n){n.name==="AbortError"?(d=!0,r(n)):r(new he(`Invalid response body while trying to fetch ${e.url}: ${n.message}`,"system",n))}),a.on("data",function(n){if(!(d||n===null)){if(e.size&&p+n.length>e.size){d=!0,r(new he(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}p+=n.length,t.push(n)}}),a.on("end",function(){if(!d){clearTimeout(s);try{i(Buffer.concat(t,p))}catch(n){r(new he(`Could not create Buffer from response body for ${e.url}: ${n.message}`,"system",n))}}})})}function g5(e,a){if(typeof I2!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");let t=a.get("content-type"),p="utf-8",d,i;return t&&(d=/charset=([^;]*)/i.exec(t)),i=e.slice(0,1024).toString(),!d&&i&&(d=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!d&&i&&(d=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),d||(d=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),d&&d.pop()),d&&(d=/charset=(.*)/i.exec(d.pop()))),!d&&i&&(d=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),d&&(p=d.pop(),(p==="gb2312"||p==="gbk")&&(p="gb18030")),I2(e,"UTF-8",p).toString()}function i0(e){return typeof e!="object"||typeof e.append!="function"||typeof e.delete!="function"||typeof e.get!="function"||typeof e.getAll!="function"||typeof e.has!="function"||typeof e.set!="function"?!1:e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort=="function"}function Pa(e){return typeof e=="object"&&typeof e.arrayBuffer=="function"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function r0(e){let a,t,p=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return p instanceof Ue.default&&typeof p.getBoundary!="function"&&(a=new a0,t=new a0,p.pipe(a),p.pipe(t),e[n1].body=a,p=t),p}function n0(e){return e===null?null:typeof e=="string"?"text/plain;charset=UTF-8":i0(e)?"application/x-www-form-urlencoded;charset=UTF-8":Pa(e)?e.type||null:Buffer.isBuffer(e)||Object.prototype.toString.call(e)==="[object ArrayBuffer]"||ArrayBuffer.isView(e)?null:typeof e.getBoundary=="function"?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof Ue.default?null:"text/plain;charset=UTF-8"}function s0(e){let a=e.body;return a===null?0:Pa(a)?a.size:Buffer.isBuffer(a)?a.length:a&&typeof a.getLengthSync=="function"&&(a._lengthRetrievers&&a._lengthRetrievers.length==0||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}function w5(e,a){let t=a.body;t===null?e.end():Pa(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}function Ra(e){if(e=`${e}`,l0.test(e)||e==="")throw new TypeError(`${e} is not a legal HTTP header name`)}function t0(e){if(e=`${e}`,R2.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function Q1(e,a){a=a.toLowerCase();for(let t in e)if(t.toLowerCase()===a)return t}function O2(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";return Object.keys(e[te]).sort().map(a==="key"?function(p){return p.toLowerCase()}:a==="value"?function(p){return e[te][p].join(", ")}:function(p){return[p.toLowerCase(),e[te][p].join(", ")]})}function x2(e,a){let t=Object.create(F2);return t[L2]={target:e,kind:a,index:0},t}function y5(e){let a=Object.assign({__proto__:null},e[te]),t=Q1(e[te],"Host");return t!==void 0&&(a[t]=a[t][0]),a}function E5(e){let a=new He;for(let t of Object.keys(e))if(!l0.test(t))if(Array.isArray(e[t]))for(let p of e[t])R2.test(p)||(a[te][t]===void 0?a[te][t]=[p]:a[te][t].push(p));else R2.test(e[t])||(a[te][t]=[e[t]]);return a}function C2(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new N5(e).toString()),_5(e)}function Rt(e){return typeof e=="object"&&typeof e[r1]=="object"}function D5(e){let a=e&&typeof e=="object"&&Object.getPrototypeOf(e);return!!(a&&a.constructor.name==="AbortSignal")}function A5(e){let a=e[r1].parsedURL,t=new He(e[r1].headers);if(t.has("Accept")||t.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof Ue.default.Readable&&!T5)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let p=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)&&(p="0"),e.body!=null){let i=s0(e);typeof i=="number"&&(p=String(i))}p&&t.set("Content-Length",p),t.has("User-Agent")||t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!t.has("Accept-Encoding")&&t.set("Accept-Encoding","gzip,deflate");let d=e.agent;return typeof d=="function"&&(d=d(a)),!t.has("Connection")&&!d&&t.set("Connection","close"),Object.assign({},a,{method:e.method,headers:y5(t),agent:d})}function La(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}function N1(e,a){if(!N1.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return me.Promise=N1.Promise,new N1.Promise(function(t,p){let d=new _1(e,a),i=A5(d),r=(i.protocol==="https:"?d0.default:P2.default).request,s=d.signal,n=null,o=function(){let h=new La("The user aborted a request.");p(h),d.body&&d.body instanceof Ue.default.Readable&&d.body.destroy(h),!(!n||!n.body)&&n.body.emit("error",h)};if(s&&s.aborted){o();return}let l=function(){o(),c()},u=r(i),f;s&&s.addEventListener("abort",l);function c(){u.abort(),s&&s.removeEventListener("abort",l),clearTimeout(f)}d.timeout&&u.once("socket",function(m){f=setTimeout(function(){p(new he(`network timeout at: ${d.url}`,"request-timeout")),c()},d.timeout)}),u.on("error",function(m){p(new he(`request to ${d.url} failed, reason: ${m.message}`,"system",m)),c()}),u.on("response",function(m){clearTimeout(f);let h=E5(m.headers);if(N1.isRedirect(m.statusCode)){let b=h.get("Location"),T=null;try{T=b===null?null:new V2(b,d.url).toString()}catch{if(d.redirect!=="manual"){p(new he(`uri requested responds with an invalid redirect URL: ${b}`,"invalid-redirect")),c();return}}switch(d.redirect){case"error":p(new he(`uri requested responds with a redirect, redirect mode is set to error: ${d.url}`,"no-redirect")),c();return;case"manual":if(T!==null)try{h.set("Location",T)}catch(x){p(x)}break;case"follow":if(T===null)break;if(d.counter>=d.follow){p(new he(`maximum redirect reached at: ${d.url}`,"max-redirect")),c();return}let R={headers:new He(d.headers),follow:d.follow,counter:d.counter+1,agent:d.agent,compress:d.compress,method:d.method,body:d.body,signal:d.signal,timeout:d.timeout,size:d.size};if(!x5(d.url,T))for(let x of["authorization","www-authenticate","cookie","cookie2"])R.headers.delete(x);if(m.statusCode!==303&&d.body&&s0(d)===null){p(new he("Cannot follow redirect with body being a readable stream","unsupported-redirect")),c();return}(m.statusCode===303||(m.statusCode===301||m.statusCode===302)&&d.method==="POST")&&(R.method="GET",R.body=void 0,R.headers.delete("content-length")),t(N1(new _1(T,R))),c();return}}m.once("end",function(){s&&s.removeEventListener("abort",l)});let g=m.pipe(new p0),v={url:d.url,status:m.statusCode,statusText:m.statusMessage,headers:h,size:d.size,timeout:d.timeout,counter:d.counter},w=h.get("Content-Encoding");if(!d.compress||d.method==="HEAD"||w===null||m.statusCode===204||m.statusCode===304){n=new Xe(g,v),t(n);return}let _={flush:S1.default.Z_SYNC_FLUSH,finishFlush:S1.default.Z_SYNC_FLUSH};if(w=="gzip"||w=="x-gzip"){g=g.pipe(S1.default.createGunzip(_)),n=new Xe(g,v),t(n);return}if(w=="deflate"||w=="x-deflate"){m.pipe(new p0).once("data",function(T){(T[0]&15)===8?g=g.pipe(S1.default.createInflate()):g=g.pipe(S1.default.createInflateRaw()),n=new Xe(g,v),t(n)});return}if(w=="br"&&typeof S1.default.createBrotliDecompress=="function"){g=g.pipe(S1.default.createBrotliDecompress()),n=new Xe(g,v),t(n);return}n=new Xe(g,v),t(n)}),w5(u,d)})}var Ue,P2,Va,$2,d0,S1,v5,i1,A2,Oa,I2,n1,a0,l0,R2,te,He,L2,F2,E1,S5,Xe,r1,N5,_5,b5,T5,_1,V2,p0,x5,C5,m0=m3(()=>{Ue=Ge(require("stream"),1),P2=Ge(require("http"),1),Va=Ge(require("url"),1),$2=Ge(e0(),1),d0=Ge(require("https"),1),S1=Ge(require("zlib"),1),v5=Ue.default.Readable,i1=Symbol("buffer"),A2=Symbol("type"),Oa=class e{constructor(){this[A2]="";let a=arguments[0],t=arguments[1],p=[],d=0;if(a){let r=a,s=Number(r.length);for(let n=0;n<s;n++){let o=r[n],l;o instanceof Buffer?l=o:ArrayBuffer.isView(o)?l=Buffer.from(o.buffer,o.byteOffset,o.byteLength):o instanceof ArrayBuffer?l=Buffer.from(o):o instanceof e?l=o[i1]:l=Buffer.from(typeof o=="string"?o:String(o)),d+=l.length,p.push(l)}}this[i1]=Buffer.concat(p);let i=t&&t.type!==void 0&&String(t.type).toLowerCase();i&&!/[^\u0020-\u007E]/.test(i)&&(this[A2]=i)}get size(){return this[i1].length}get type(){return this[A2]}text(){return Promise.resolve(this[i1].toString())}arrayBuffer(){let a=this[i1],t=a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength);return Promise.resolve(t)}stream(){let a=new v5;return a._read=function(){},a.push(this[i1]),a.push(null),a}toString(){return"[object Blob]"}slice(){let a=this.size,t=arguments[0],p=arguments[1],d,i;t===void 0?d=0:t<0?d=Math.max(a+t,0):d=Math.min(t,a),p===void 0?i=a:p<0?i=Math.max(a+p,0):i=Math.min(p,a);let r=Math.max(i-d,0),n=this[i1].slice(d,d+r),o=new e([],{type:arguments[2]});return o[i1]=n,o}};Object.defineProperties(Oa.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}});Object.defineProperty(Oa.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});he.prototype=Object.create(Error.prototype);he.prototype.constructor=he;he.prototype.name="FetchError";try{I2=require("encoding").convert}catch{}n1=Symbol("Body internals"),a0=Ue.default.PassThrough;me.prototype={get body(){return this[n1].body},get bodyUsed(){return this[n1].disturbed},arrayBuffer(){return Y1.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return Y1.call(this).then(function(a){return Object.assign(new Oa([],{type:e.toLowerCase()}),{[i1]:a})})},json(){var e=this;return Y1.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(t){return me.Promise.reject(new he(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return Y1.call(this).then(function(e){return e.toString()})},buffer(){return Y1.call(this)},textConverted(){var e=this;return Y1.call(this).then(function(a){return g5(a,e.headers)})}};Object.defineProperties(me.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}});me.mixIn=function(e){for(let a of Object.getOwnPropertyNames(me.prototype))if(!(a in e)){let t=Object.getOwnPropertyDescriptor(me.prototype,a);Object.defineProperty(e,a,t)}};me.Promise=global.Promise;l0=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,R2=/[^\t\x20-\x7e\x80-\xff]/;te=Symbol("map"),He=class e{constructor(){let a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[te]=Object.create(null),a instanceof e){let t=a.raw(),p=Object.keys(t);for(let d of p)for(let i of t[d])this.append(d,i);return}if(a!=null)if(typeof a=="object"){let t=a[Symbol.iterator];if(t!=null){if(typeof t!="function")throw new TypeError("Header pairs must be iterable");let p=[];for(let d of a){if(typeof d!="object"||typeof d[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");p.push(Array.from(d))}for(let d of p){if(d.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(d[0],d[1])}}else for(let p of Object.keys(a)){let d=a[p];this.append(p,d)}}else throw new TypeError("Provided initializer must be an object")}get(a){a=`${a}`,Ra(a);let t=Q1(this[te],a);return t===void 0?null:this[te][t].join(", ")}forEach(a){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,p=O2(this),d=0;for(;d<p.length;){var i=p[d];let r=i[0],s=i[1];a.call(t,s,r,this),p=O2(this),d++}}set(a,t){a=`${a}`,t=`${t}`,Ra(a),t0(t);let p=Q1(this[te],a);this[te][p!==void 0?p:a]=[t]}append(a,t){a=`${a}`,t=`${t}`,Ra(a),t0(t);let p=Q1(this[te],a);p!==void 0?this[te][p].push(t):this[te][a]=[t]}has(a){return a=`${a}`,Ra(a),Q1(this[te],a)!==void 0}delete(a){a=`${a}`,Ra(a);let t=Q1(this[te],a);t!==void 0&&delete this[te][t]}raw(){return this[te]}keys(){return x2(this,"key")}values(){return x2(this,"value")}[Symbol.iterator](){return x2(this,"key+value")}};He.prototype.entries=He.prototype[Symbol.iterator];Object.defineProperty(He.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(He.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});L2=Symbol("internal");F2=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==F2)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[L2];let a=e.target,t=e.kind,p=e.index,d=O2(a,t),i=d.length;return p>=i?{value:void 0,done:!0}:(this[L2].index=p+1,{value:d[p],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(F2,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});E1=Symbol("Response internals"),S5=P2.default.STATUS_CODES,Xe=class e{constructor(){let a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};me.call(this,a,t);let p=t.status||200,d=new He(t.headers);if(a!=null&&!d.has("Content-Type")){let i=n0(a);i&&d.append("Content-Type",i)}this[E1]={url:t.url,status:p,statusText:t.statusText||S5[p],headers:d,counter:t.counter}}get url(){return this[E1].url||""}get status(){return this[E1].status}get ok(){return this[E1].status>=200&&this[E1].status<300}get redirected(){return this[E1].counter>0}get statusText(){return this[E1].statusText}get headers(){return this[E1].headers}clone(){return new e(r0(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};me.mixIn(Xe.prototype);Object.defineProperties(Xe.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}});Object.defineProperty(Xe.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});r1=Symbol("Request internals"),N5=Va.default.URL||$2.default.URL,_5=Va.default.parse,b5=Va.default.format;T5="destroy"in Ue.default.Readable.prototype;_1=class e{constructor(a){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},p;Rt(a)?p=C2(a.url):(a&&a.href?p=C2(a.href):p=C2(`${a}`),a={});let d=t.method||a.method||"GET";if(d=d.toUpperCase(),(t.body!=null||Rt(a)&&a.body!==null)&&(d==="GET"||d==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let i=t.body!=null?t.body:Rt(a)&&a.body!==null?r0(a):null;me.call(this,i,{timeout:t.timeout||a.timeout||0,size:t.size||a.size||0});let r=new He(t.headers||a.headers||{});if(i!=null&&!r.has("Content-Type")){let n=n0(i);n&&r.append("Content-Type",n)}let s=Rt(a)?a.signal:null;if("signal"in t&&(s=t.signal),s!=null&&!D5(s))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[r1]={method:d,redirect:t.redirect||a.redirect||"follow",headers:r,parsedURL:p,signal:s},this.follow=t.follow!==void 0?t.follow:a.follow!==void 0?a.follow:20,this.compress=t.compress!==void 0?t.compress:a.compress!==void 0?a.compress:!0,this.counter=t.counter||a.counter||0,this.agent=t.agent||a.agent}get method(){return this[r1].method}get url(){return b5(this[r1].parsedURL)}get headers(){return this[r1].headers}get redirect(){return this[r1].redirect}get signal(){return this[r1].signal}clone(){return new e(this)}};me.mixIn(_1.prototype);Object.defineProperty(_1.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(_1.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});La.prototype=Object.create(Error.prototype);La.prototype.constructor=La;La.prototype.name="AbortError";V2=Va.default.URL||$2.default.URL,p0=Ue.default.PassThrough,x5=function(a,t){let p=new V2(t).hostname,d=new V2(a).hostname;return p===d||p[p.length-d.length-1]==="."&&p.endsWith(d)};N1.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};N1.Promise=global.Promise;C5=N1});var $a=y((sh,v0)=>{"use strict";var I5=require("path"),t1="\\\\/",u0=`[^${t1}]`,s1="\\.",R5="\\+",O5="\\?",Ot="\\/",L5="(?=.)",c0="[^/]",q2=`(?:${Ot}|$)`,f0=`(?:^|${Ot})`,B2=`${s1}{1,2}${q2}`,V5=`(?!${s1})`,P5=`(?!${f0}${B2})`,$5=`(?!${s1}{0,1}${q2})`,F5=`(?!${B2})`,q5=`[^.${Ot}]`,B5=`${c0}*?`,h0={DOT_LITERAL:s1,PLUS_LITERAL:R5,QMARK_LITERAL:O5,SLASH_LITERAL:Ot,ONE_CHAR:L5,QMARK:c0,END_ANCHOR:q2,DOTS_SLASH:B2,NO_DOT:V5,NO_DOTS:P5,NO_DOT_SLASH:$5,NO_DOTS_SLASH:F5,QMARK_NO_DOT:q5,STAR:B5,START_ANCHOR:f0},k5={...h0,SLASH_LITERAL:`[${t1}]`,QMARK:u0,STAR:`${u0}*?`,DOTS_SLASH:`${s1}{1,2}(?:[${t1}]|$)`,NO_DOT:`(?!${s1})`,NO_DOTS:`(?!(?:^|[${t1}])${s1}{1,2}(?:[${t1}]|$))`,NO_DOT_SLASH:`(?!${s1}{0,1}(?:[${t1}]|$))`,NO_DOTS_SLASH:`(?!${s1}{1,2}(?:[${t1}]|$))`,QMARK_NO_DOT:`[^.${t1}]`,START_ANCHOR:`(?:^|[${t1}])`,END_ANCHOR:`(?:[${t1}]|$)`},U5={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};v0.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:U5,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:I5.sep,extglobChars(e){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${e.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(e){return e===!0?k5:h0}}});var Lt=y(xe=>{"use strict";var H5=require("path"),M5=process.platform==="win32",{REGEX_BACKSLASH:j5,REGEX_REMOVE_BACKSLASH:G5,REGEX_SPECIAL_CHARS:z5,REGEX_SPECIAL_CHARS_GLOBAL:W5}=$a();xe.isObject=e=>e!==null&&typeof e=="object"&&!Array.isArray(e);xe.hasRegexChars=e=>z5.test(e);xe.isRegexChar=e=>e.length===1&&xe.hasRegexChars(e);xe.escapeRegex=e=>e.replace(W5,"\\$1");xe.toPosixSlashes=e=>e.replace(j5,"/");xe.removeBackslashes=e=>e.replace(G5,a=>a==="\\"?"":a);xe.supportsLookbehinds=()=>{let e=process.version.slice(1).split(".").map(Number);return e.length===3&&e[0]>=9||e[0]===8&&e[1]>=10};xe.isWindows=e=>e&&typeof e.windows=="boolean"?e.windows:M5===!0||H5.sep==="\\";xe.escapeLast=(e,a,t)=>{let p=e.lastIndexOf(a,t);return p===-1?e:e[p-1]==="\\"?xe.escapeLast(e,a,p-1):`${e.slice(0,p)}\\${e.slice(p)}`};xe.removePrefix=(e,a={})=>{let t=e;return t.startsWith("./")&&(t=t.slice(2),a.prefix="./"),t};xe.wrapOutput=(e,a={},t={})=>{let p=t.contains?"":"^",d=t.contains?"":"$",i=`${p}(?:${e})${d}`;return a.negated===!0&&(i=`(?:^(?!${i}).*$)`),i}});var b0=y((oh,_0)=>{"use strict";var g0=Lt(),{CHAR_ASTERISK:k2,CHAR_AT:X5,CHAR_BACKWARD_SLASH:Fa,CHAR_COMMA:Z5,CHAR_DOT:U2,CHAR_EXCLAMATION_MARK:H2,CHAR_FORWARD_SLASH:N0,CHAR_LEFT_CURLY_BRACE:M2,CHAR_LEFT_PARENTHESES:j2,CHAR_LEFT_SQUARE_BRACKET:K5,CHAR_PLUS:Y5,CHAR_QUESTION_MARK:w0,CHAR_RIGHT_CURLY_BRACE:Q5,CHAR_RIGHT_PARENTHESES:y0,CHAR_RIGHT_SQUARE_BRACKET:J5}=$a(),E0=e=>e===N0||e===Fa,S0=e=>{e.isPrefix!==!0&&(e.depth=e.isGlobstar?1/0:1)},e8=(e,a)=>{let t=a||{},p=e.length-1,d=t.parts===!0||t.scanToEnd===!0,i=[],r=[],s=[],n=e,o=-1,l=0,u=0,f=!1,c=!1,m=!1,h=!1,g=!1,v=!1,w=!1,_=!1,b=!1,T=!1,R=0,x,D,C={value:"",depth:0,isGlob:!1},U=()=>o>=p,N=()=>n.charCodeAt(o+1),H=()=>(x=D,n.charCodeAt(++o));for(;o<p;){D=H();let ce;if(D===Fa){w=C.backslashes=!0,D=H(),D===M2&&(v=!0);continue}if(v===!0||D===M2){for(R++;U()!==!0&&(D=H());){if(D===Fa){w=C.backslashes=!0,H();continue}if(D===M2){R++;continue}if(v!==!0&&D===U2&&(D=H())===U2){if(f=C.isBrace=!0,m=C.isGlob=!0,T=!0,d===!0)continue;break}if(v!==!0&&D===Z5){if(f=C.isBrace=!0,m=C.isGlob=!0,T=!0,d===!0)continue;break}if(D===Q5&&(R--,R===0)){v=!1,f=C.isBrace=!0,T=!0;break}}if(d===!0)continue;break}if(D===N0){if(i.push(o),r.push(C),C={value:"",depth:0,isGlob:!1},T===!0)continue;if(x===U2&&o===l+1){l+=2;continue}u=o+1;continue}if(t.noext!==!0&&(D===Y5||D===X5||D===k2||D===w0||D===H2)===!0&&N()===j2){if(m=C.isGlob=!0,h=C.isExtglob=!0,T=!0,D===H2&&o===l&&(b=!0),d===!0){for(;U()!==!0&&(D=H());){if(D===Fa){w=C.backslashes=!0,D=H();continue}if(D===y0){m=C.isGlob=!0,T=!0;break}}continue}break}if(D===k2){if(x===k2&&(g=C.isGlobstar=!0),m=C.isGlob=!0,T=!0,d===!0)continue;break}if(D===w0){if(m=C.isGlob=!0,T=!0,d===!0)continue;break}if(D===K5){for(;U()!==!0&&(ce=H());){if(ce===Fa){w=C.backslashes=!0,H();continue}if(ce===J5){c=C.isBracket=!0,m=C.isGlob=!0,T=!0;break}}if(d===!0)continue;break}if(t.nonegate!==!0&&D===H2&&o===l){_=C.negated=!0,l++;continue}if(t.noparen!==!0&&D===j2){if(m=C.isGlob=!0,d===!0){for(;U()!==!0&&(D=H());){if(D===j2){w=C.backslashes=!0,D=H();continue}if(D===y0){T=!0;break}}continue}break}if(m===!0){if(T=!0,d===!0)continue;break}}t.noext===!0&&(h=!1,m=!1);let $=n,Qe="",E="";l>0&&(Qe=n.slice(0,l),n=n.slice(l),u-=l),$&&m===!0&&u>0?($=n.slice(0,u),E=n.slice(u)):m===!0?($="",E=n):$=n,$&&$!==""&&$!=="/"&&$!==n&&E0($.charCodeAt($.length-1))&&($=$.slice(0,-1)),t.unescape===!0&&(E&&(E=g0.removeBackslashes(E)),$&&w===!0&&($=g0.removeBackslashes($)));let S={prefix:Qe,input:e,start:l,base:$,glob:E,isBrace:f,isBracket:c,isGlob:m,isExtglob:h,isGlobstar:g,negated:_,negatedExtglob:b};if(t.tokens===!0&&(S.maxDepth=0,E0(D)||r.push(C),S.tokens=r),t.parts===!0||t.tokens===!0){let ce;for(let k=0;k<i.length;k++){let Ae=ce?ce+1:l,Le=i[k],we=e.slice(Ae,Le);t.tokens&&(k===0&&l!==0?(r[k].isPrefix=!0,r[k].value=Qe):r[k].value=we,S0(r[k]),S.maxDepth+=r[k].depth),(k!==0||we!=="")&&s.push(we),ce=Le}if(ce&&ce+1<e.length){let k=e.slice(ce+1);s.push(k),t.tokens&&(r[r.length-1].value=k,S0(r[r.length-1]),S.maxDepth+=r[r.length-1].depth)}S.slashes=i,S.parts=s}return S};_0.exports=e8});var A0=y((mh,D0)=>{"use strict";var Vt=$a(),$e=Lt(),{MAX_LENGTH:Pt,POSIX_REGEX_SOURCE:a8,REGEX_NON_SPECIAL_CHARS:t8,REGEX_SPECIAL_CHARS_BACKREF:p8,REPLACEMENTS:T0}=Vt,d8=(e,a)=>{if(typeof a.expandRange=="function")return a.expandRange(...e,a);e.sort();let t=`[${e.join("-")}]`;try{new RegExp(t)}catch{return e.map(d=>$e.escapeRegex(d)).join("..")}return t},J1=(e,a)=>`Missing ${e}: "${a}" - use "\\\\${a}" to match literal characters`,G2=(e,a)=>{if(typeof e!="string")throw new TypeError("Expected a string");e=T0[e]||e;let t={...a},p=typeof t.maxLength=="number"?Math.min(Pt,t.maxLength):Pt,d=e.length;if(d>p)throw new SyntaxError(`Input length: ${d}, exceeds maximum allowed length: ${p}`);let i={type:"bos",value:"",output:t.prepend||""},r=[i],s=t.capture?"":"?:",n=$e.isWindows(a),o=Vt.globChars(n),l=Vt.extglobChars(o),{DOT_LITERAL:u,PLUS_LITERAL:f,SLASH_LITERAL:c,ONE_CHAR:m,DOTS_SLASH:h,NO_DOT:g,NO_DOT_SLASH:v,NO_DOTS_SLASH:w,QMARK:_,QMARK_NO_DOT:b,STAR:T,START_ANCHOR:R}=o,x=I=>`(${s}(?:(?!${R}${I.dot?h:u}).)*?)`,D=t.dot?"":g,C=t.dot?_:b,U=t.bash===!0?x(t):T;t.capture&&(U=`(${U})`),typeof t.noext=="boolean"&&(t.noextglob=t.noext);let N={input:e,index:-1,start:0,dot:t.dot===!0,consumed:"",output:"",prefix:"",backtrack:!1,negated:!1,brackets:0,braces:0,parens:0,quotes:0,globstar:!1,tokens:r};e=$e.removePrefix(e,N),d=e.length;let H=[],$=[],Qe=[],E=i,S,ce=()=>N.index===d-1,k=N.peek=(I=1)=>e[N.index+I],Ae=N.advance=()=>e[++N.index]||"",Le=()=>e.slice(N.index+1),we=(I="",W=0)=>{N.consumed+=I,N.index+=W},f1=I=>{N.output+=I.output!=null?I.output:I.value,we(I.value)},d3=()=>{let I=1;for(;k()==="!"&&(k(2)!=="("||k(3)==="?");)Ae(),N.start++,I++;return I%2===0?!1:(N.negated=!0,N.start++,!0)},lt=I=>{N[I]++,Qe.push(I)},O1=I=>{N[I]--,Qe.pop()},B=I=>{if(E.type==="globstar"){let W=N.braces>0&&(I.type==="comma"||I.type==="brace"),A=I.extglob===!0||H.length&&(I.type==="pipe"||I.type==="paren");I.type!=="slash"&&I.type!=="paren"&&!W&&!A&&(N.output=N.output.slice(0,-E.output.length),E.type="star",E.value="*",E.output=U,N.output+=E.output)}if(H.length&&I.type!=="paren"&&(H[H.length-1].inner+=I.value),(I.value||I.output)&&f1(I),E&&E.type==="text"&&I.type==="text"){E.value+=I.value,E.output=(E.output||"")+I.value;return}I.prev=E,r.push(I),E=I},ot=(I,W)=>{let A={...l[W],conditions:1,inner:""};A.prev=E,A.parens=N.parens,A.output=N.output;let F=(t.capture?"(":"")+A.open;lt("parens"),B({type:I,value:W,output:N.output?"":m}),B({type:"paren",extglob:!0,value:Ae(),output:F}),H.push(A)},i3=I=>{let W=I.close+(t.capture?")":""),A;if(I.type==="negate"){let F=U;if(I.inner&&I.inner.length>1&&I.inner.includes("/")&&(F=x(t)),(F!==U||ce()||/^\)+$/.test(Le()))&&(W=I.close=`)$))${F}`),I.inner.includes("*")&&(A=Le())&&/^\.[^\\/.]+$/.test(A)){let K=G2(A,{...a,fastpaths:!1}).output;W=I.close=`)${K})${F})`}I.prev.type==="bos"&&(N.negatedExtglob=!0)}B({type:"paren",extglob:!0,value:S,output:W}),O1("parens")};if(t.fastpaths!==!1&&!/(^[*!]|[/()[\]{}"])/.test(e)){let I=!1,W=e.replace(p8,(A,F,K,Se,ie,s2)=>Se==="\\"?(I=!0,A):Se==="?"?F?F+Se+(ie?_.repeat(ie.length):""):s2===0?C+(ie?_.repeat(ie.length):""):_.repeat(K.length):Se==="."?u.repeat(K.length):Se==="*"?F?F+Se+(ie?U:""):U:F?A:`\\${A}`);return I===!0&&(t.unescape===!0?W=W.replace(/\\/g,""):W=W.replace(/\\+/g,A=>A.length%2===0?"\\\\":A?"\\":"")),W===e&&t.contains===!0?(N.output=e,N):(N.output=$e.wrapOutput(W,N,a),N)}for(;!ce();){if(S=Ae(),S==="\0")continue;if(S==="\\"){let A=k();if(A==="/"&&t.bash!==!0||A==="."||A===";")continue;if(!A){S+="\\",B({type:"text",value:S});continue}let F=/^\\+/.exec(Le()),K=0;if(F&&F[0].length>2&&(K=F[0].length,N.index+=K,K%2!==0&&(S+="\\")),t.unescape===!0?S=Ae():S+=Ae(),N.brackets===0){B({type:"text",value:S});continue}}if(N.brackets>0&&(S!=="]"||E.value==="["||E.value==="[^")){if(t.posix!==!1&&S===":"){let A=E.value.slice(1);if(A.includes("[")&&(E.posix=!0,A.includes(":"))){let F=E.value.lastIndexOf("["),K=E.value.slice(0,F),Se=E.value.slice(F+2),ie=a8[Se];if(ie){E.value=K+ie,N.backtrack=!0,Ae(),!i.output&&r.indexOf(E)===1&&(i.output=m);continue}}}(S==="["&&k()!==":"||S==="-"&&k()==="]")&&(S=`\\${S}`),S==="]"&&(E.value==="["||E.value==="[^")&&(S=`\\${S}`),t.posix===!0&&S==="!"&&E.value==="["&&(S="^"),E.value+=S,f1({value:S});continue}if(N.quotes===1&&S!=='"'){S=$e.escapeRegex(S),E.value+=S,f1({value:S});continue}if(S==='"'){N.quotes=N.quotes===1?0:1,t.keepQuotes===!0&&B({type:"text",value:S});continue}if(S==="("){lt("parens"),B({type:"paren",value:S});continue}if(S===")"){if(N.parens===0&&t.strictBrackets===!0)throw new SyntaxError(J1("opening","("));let A=H[H.length-1];if(A&&N.parens===A.parens+1){i3(H.pop());continue}B({type:"paren",value:S,output:N.parens?")":"\\)"}),O1("parens");continue}if(S==="["){if(t.nobracket===!0||!Le().includes("]")){if(t.nobracket!==!0&&t.strictBrackets===!0)throw new SyntaxError(J1("closing","]"));S=`\\${S}`}else lt("brackets");B({type:"bracket",value:S});continue}if(S==="]"){if(t.nobracket===!0||E&&E.type==="bracket"&&E.value.length===1){B({type:"text",value:S,output:`\\${S}`});continue}if(N.brackets===0){if(t.strictBrackets===!0)throw new SyntaxError(J1("opening","["));B({type:"text",value:S,output:`\\${S}`});continue}O1("brackets");let A=E.value.slice(1);if(E.posix!==!0&&A[0]==="^"&&!A.includes("/")&&(S=`/${S}`),E.value+=S,f1({value:S}),t.literalBrackets===!1||$e.hasRegexChars(A))continue;let F=$e.escapeRegex(E.value);if(N.output=N.output.slice(0,-E.value.length),t.literalBrackets===!0){N.output+=F,E.value=F;continue}E.value=`(${s}${F}|${E.value})`,N.output+=E.value;continue}if(S==="{"&&t.nobrace!==!0){lt("braces");let A={type:"brace",value:S,output:"(",outputIndex:N.output.length,tokensIndex:N.tokens.length};$.push(A),B(A);continue}if(S==="}"){let A=$[$.length-1];if(t.nobrace===!0||!A){B({type:"text",value:S,output:S});continue}let F=")";if(A.dots===!0){let K=r.slice(),Se=[];for(let ie=K.length-1;ie>=0&&(r.pop(),K[ie].type!=="brace");ie--)K[ie].type!=="dots"&&Se.unshift(K[ie].value);F=d8(Se,t),N.backtrack=!0}if(A.comma!==!0&&A.dots!==!0){let K=N.output.slice(0,A.outputIndex),Se=N.tokens.slice(A.tokensIndex);A.value=A.output="\\{",S=F="\\}",N.output=K;for(let ie of Se)N.output+=ie.output||ie.value}B({type:"brace",value:S,output:F}),O1("braces"),$.pop();continue}if(S==="|"){H.length>0&&H[H.length-1].conditions++,B({type:"text",value:S});continue}if(S===","){let A=S,F=$[$.length-1];F&&Qe[Qe.length-1]==="braces"&&(F.comma=!0,A="|"),B({type:"comma",value:S,output:A});continue}if(S==="/"){if(E.type==="dot"&&N.index===N.start+1){N.start=N.index+1,N.consumed="",N.output="",r.pop(),E=i;continue}B({type:"slash",value:S,output:c});continue}if(S==="."){if(N.braces>0&&E.type==="dot"){E.value==="."&&(E.output=u);let A=$[$.length-1];E.type="dots",E.output+=S,E.value+=S,A.dots=!0;continue}if(N.braces+N.parens===0&&E.type!=="bos"&&E.type!=="slash"){B({type:"text",value:S,output:u});continue}B({type:"dot",value:S,output:u});continue}if(S==="?"){if(!(E&&E.value==="(")&&t.noextglob!==!0&&k()==="("&&k(2)!=="?"){ot("qmark",S);continue}if(E&&E.type==="paren"){let F=k(),K=S;if(F==="<"&&!$e.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");(E.value==="("&&!/[!=<:]/.test(F)||F==="<"&&!/<([!=]|\w+>)/.test(Le()))&&(K=`\\${S}`),B({type:"text",value:S,output:K});continue}if(t.dot!==!0&&(E.type==="slash"||E.type==="bos")){B({type:"qmark",value:S,output:b});continue}B({type:"qmark",value:S,output:_});continue}if(S==="!"){if(t.noextglob!==!0&&k()==="("&&(k(2)!=="?"||!/[!=<:]/.test(k(3)))){ot("negate",S);continue}if(t.nonegate!==!0&&N.index===0){d3();continue}}if(S==="+"){if(t.noextglob!==!0&&k()==="("&&k(2)!=="?"){ot("plus",S);continue}if(E&&E.value==="("||t.regex===!1){B({type:"plus",value:S,output:f});continue}if(E&&(E.type==="bracket"||E.type==="paren"||E.type==="brace")||N.parens>0){B({type:"plus",value:S});continue}B({type:"plus",value:f});continue}if(S==="@"){if(t.noextglob!==!0&&k()==="("&&k(2)!=="?"){B({type:"at",extglob:!0,value:S,output:""});continue}B({type:"text",value:S});continue}if(S!=="*"){(S==="$"||S==="^")&&(S=`\\${S}`);let A=t8.exec(Le());A&&(S+=A[0],N.index+=A[0].length),B({type:"text",value:S});continue}if(E&&(E.type==="globstar"||E.star===!0)){E.type="star",E.star=!0,E.value+=S,E.output=U,N.backtrack=!0,N.globstar=!0,we(S);continue}let I=Le();if(t.noextglob!==!0&&/^\([^?]/.test(I)){ot("star",S);continue}if(E.type==="star"){if(t.noglobstar===!0){we(S);continue}let A=E.prev,F=A.prev,K=A.type==="slash"||A.type==="bos",Se=F&&(F.type==="star"||F.type==="globstar");if(t.bash===!0&&(!K||I[0]&&I[0]!=="/")){B({type:"star",value:S,output:""});continue}let ie=N.braces>0&&(A.type==="comma"||A.type==="brace"),s2=H.length&&(A.type==="pipe"||A.type==="paren");if(!K&&A.type!=="paren"&&!ie&&!s2){B({type:"star",value:S,output:""});continue}for(;I.slice(0,3)==="/**";){let mt=e[N.index+4];if(mt&&mt!=="/")break;I=I.slice(3),we("/**",3)}if(A.type==="bos"&&ce()){E.type="globstar",E.value+=S,E.output=x(t),N.output=E.output,N.globstar=!0,we(S);continue}if(A.type==="slash"&&A.prev.type!=="bos"&&!Se&&ce()){N.output=N.output.slice(0,-(A.output+E.output).length),A.output=`(?:${A.output}`,E.type="globstar",E.output=x(t)+(t.strictSlashes?")":"|$)"),E.value+=S,N.globstar=!0,N.output+=A.output+E.output,we(S);continue}if(A.type==="slash"&&A.prev.type!=="bos"&&I[0]==="/"){let mt=I[1]!==void 0?"|$":"";N.output=N.output.slice(0,-(A.output+E.output).length),A.output=`(?:${A.output}`,E.type="globstar",E.output=`${x(t)}${c}|${c}${mt})`,E.value+=S,N.output+=A.output+E.output,N.globstar=!0,we(S+Ae()),B({type:"slash",value:"/",output:""});continue}if(A.type==="bos"&&I[0]==="/"){E.type="globstar",E.value+=S,E.output=`(?:^|${c}|${x(t)}${c})`,N.output=E.output,N.globstar=!0,we(S+Ae()),B({type:"slash",value:"/",output:""});continue}N.output=N.output.slice(0,-E.output.length),E.type="globstar",E.output=x(t),E.value+=S,N.output+=E.output,N.globstar=!0,we(S);continue}let W={type:"star",value:S,output:U};if(t.bash===!0){W.output=".*?",(E.type==="bos"||E.type==="slash")&&(W.output=D+W.output),B(W);continue}if(E&&(E.type==="bracket"||E.type==="paren")&&t.regex===!0){W.output=S,B(W);continue}(N.index===N.start||E.type==="slash"||E.type==="dot")&&(E.type==="dot"?(N.output+=v,E.output+=v):t.dot===!0?(N.output+=w,E.output+=w):(N.output+=D,E.output+=D),k()!=="*"&&(N.output+=m,E.output+=m)),B(W)}for(;N.brackets>0;){if(t.strictBrackets===!0)throw new SyntaxError(J1("closing","]"));N.output=$e.escapeLast(N.output,"["),O1("brackets")}for(;N.parens>0;){if(t.strictBrackets===!0)throw new SyntaxError(J1("closing",")"));N.output=$e.escapeLast(N.output,"("),O1("parens")}for(;N.braces>0;){if(t.strictBrackets===!0)throw new SyntaxError(J1("closing","}"));N.output=$e.escapeLast(N.output,"{"),O1("braces")}if(t.strictSlashes!==!0&&(E.type==="star"||E.type==="bracket")&&B({type:"maybe_slash",value:"",output:`${c}?`}),N.backtrack===!0){N.output="";for(let I of N.tokens)N.output+=I.output!=null?I.output:I.value,I.suffix&&(N.output+=I.suffix)}return N};G2.fastpaths=(e,a)=>{let t={...a},p=typeof t.maxLength=="number"?Math.min(Pt,t.maxLength):Pt,d=e.length;if(d>p)throw new SyntaxError(`Input length: ${d}, exceeds maximum allowed length: ${p}`);e=T0[e]||e;let i=$e.isWindows(a),{DOT_LITERAL:r,SLASH_LITERAL:s,ONE_CHAR:n,DOTS_SLASH:o,NO_DOT:l,NO_DOTS:u,NO_DOTS_SLASH:f,STAR:c,START_ANCHOR:m}=Vt.globChars(i),h=t.dot?u:l,g=t.dot?f:l,v=t.capture?"":"?:",w={negated:!1,prefix:""},_=t.bash===!0?".*?":c;t.capture&&(_=`(${_})`);let b=D=>D.noglobstar===!0?_:`(${v}(?:(?!${m}${D.dot?o:r}).)*?)`,T=D=>{switch(D){case"*":return`${h}${n}${_}`;case".*":return`${r}${n}${_}`;case"*.*":return`${h}${_}${r}${n}${_}`;case"*/*":return`${h}${_}${s}${n}${g}${_}`;case"**":return h+b(t);case"**/*":return`(?:${h}${b(t)}${s})?${g}${n}${_}`;case"**/*.*":return`(?:${h}${b(t)}${s})?${g}${_}${r}${n}${_}`;case"**/.*":return`(?:${h}${b(t)}${s})?${r}${n}${_}`;default:{let C=/^(.*?)\.(\w+)$/.exec(D);if(!C)return;let U=T(C[1]);return U?U+r+C[2]:void 0}}},R=$e.removePrefix(e,w),x=T(R);return x&&t.strictSlashes!==!0&&(x+=`${s}?`),x};D0.exports=G2});var C0=y((uh,x0)=>{"use strict";var i8=require("path"),r8=b0(),z2=A0(),W2=Lt(),n8=$a(),s8=e=>e&&typeof e=="object"&&!Array.isArray(e),pe=(e,a,t=!1)=>{if(Array.isArray(e)){let l=e.map(f=>pe(f,a,t));return f=>{for(let c of l){let m=c(f);if(m)return m}return!1}}let p=s8(e)&&e.tokens&&e.input;if(e===""||typeof e!="string"&&!p)throw new TypeError("Expected pattern to be a non-empty string");let d=a||{},i=W2.isWindows(a),r=p?pe.compileRe(e,a):pe.makeRe(e,a,!1,!0),s=r.state;delete r.state;let n=()=>!1;if(d.ignore){let l={...a,ignore:null,onMatch:null,onResult:null};n=pe(d.ignore,l,t)}let o=(l,u=!1)=>{let{isMatch:f,match:c,output:m}=pe.test(l,r,a,{glob:e,posix:i}),h={glob:e,state:s,regex:r,posix:i,input:l,output:m,match:c,isMatch:f};return typeof d.onResult=="function"&&d.onResult(h),f===!1?(h.isMatch=!1,u?h:!1):n(l)?(typeof d.onIgnore=="function"&&d.onIgnore(h),h.isMatch=!1,u?h:!1):(typeof d.onMatch=="function"&&d.onMatch(h),u?h:!0)};return t&&(o.state=s),o};pe.test=(e,a,t,{glob:p,posix:d}={})=>{if(typeof e!="string")throw new TypeError("Expected input to be a string");if(e==="")return{isMatch:!1,output:""};let i=t||{},r=i.format||(d?W2.toPosixSlashes:null),s=e===p,n=s&&r?r(e):e;return s===!1&&(n=r?r(e):e,s=n===p),(s===!1||i.capture===!0)&&(i.matchBase===!0||i.basename===!0?s=pe.matchBase(e,a,t,d):s=a.exec(n)),{isMatch:!!s,match:s,output:n}};pe.matchBase=(e,a,t,p=W2.isWindows(t))=>(a instanceof RegExp?a:pe.makeRe(a,t)).test(i8.basename(e));pe.isMatch=(e,a,t)=>pe(a,t)(e);pe.parse=(e,a)=>Array.isArray(e)?e.map(t=>pe.parse(t,a)):z2(e,{...a,fastpaths:!1});pe.scan=(e,a)=>r8(e,a);pe.compileRe=(e,a,t=!1,p=!1)=>{if(t===!0)return e.output;let d=a||{},i=d.contains?"":"^",r=d.contains?"":"$",s=`${i}(?:${e.output})${r}`;e&&e.negated===!0&&(s=`^(?!${s}).*$`);let n=pe.toRegex(s,a);return p===!0&&(n.state=e),n};pe.makeRe=(e,a={},t=!1,p=!1)=>{if(!e||typeof e!="string")throw new TypeError("Expected a non-empty string");let d={negated:!1,fastpaths:!0};return a.fastpaths!==!1&&(e[0]==="."||e[0]==="*")&&(d.output=z2.fastpaths(e,a)),d.output||(d=z2(e,a)),pe.compileRe(d,a,t,p)};pe.toRegex=(e,a)=>{try{let t=a||{};return new RegExp(e,t.flags||(t.nocase?"i":""))}catch(t){if(a&&a.debug===!0)throw t;return/$^/}};pe.constants=n8;x0.exports=pe});var R0=y((ch,I0)=>{"use strict";I0.exports=C0()});var B0=y((fh,q0)=>{"use strict";var Ba=require("fs"),{Readable:l8}=require("stream"),qa=require("path"),{promisify:Bt}=require("util"),X2=R0(),o8=Bt(Ba.readdir),m8=Bt(Ba.stat),O0=Bt(Ba.lstat),u8=Bt(Ba.realpath),c8="!",$0="READDIRP_RECURSIVE_ERROR",f8=new Set(["ENOENT","EPERM","EACCES","ELOOP",$0]),Z2="files",F0="directories",Ft="files_directories",$t="all",L0=[Z2,F0,Ft,$t],h8=e=>f8.has(e.code),[V0,v8]=process.versions.node.split(".").slice(0,2).map(e=>Number.parseInt(e,10)),g8=process.platform==="win32"&&(V0>10||V0===10&&v8>=5),P0=e=>{if(e!==void 0){if(typeof e=="function")return e;if(typeof e=="string"){let a=X2(e.trim());return t=>a(t.basename)}if(Array.isArray(e)){let a=[],t=[];for(let p of e){let d=p.trim();d.charAt(0)===c8?t.push(X2(d.slice(1))):a.push(X2(d))}return t.length>0?a.length>0?p=>a.some(d=>d(p.basename))&&!t.some(d=>d(p.basename)):p=>!t.some(d=>d(p.basename)):p=>a.some(d=>d(p.basename))}}},qt=class e extends l8{static get defaultOptions(){return{root:".",fileFilter:a=>!0,directoryFilter:a=>!0,type:Z2,lstat:!1,depth:2147483648,alwaysStat:!1}}constructor(a={}){super({objectMode:!0,autoDestroy:!0,highWaterMark:a.highWaterMark||4096});let t={...e.defaultOptions,...a},{root:p,type:d}=t;this._fileFilter=P0(t.fileFilter),this._directoryFilter=P0(t.directoryFilter);let i=t.lstat?O0:m8;g8?this._stat=r=>i(r,{bigint:!0}):this._stat=i,this._maxDepth=t.depth,this._wantsDir=[F0,Ft,$t].includes(d),this._wantsFile=[Z2,Ft,$t].includes(d),this._wantsEverything=d===$t,this._root=qa.resolve(p),this._isDirent="Dirent"in Ba&&!t.alwaysStat,this._statsProp=this._isDirent?"dirent":"stats",this._rdOptions={encoding:"utf8",withFileTypes:this._isDirent},this.parents=[this._exploreDir(p,1)],this.reading=!1,this.parent=void 0}async _read(a){if(!this.reading){this.reading=!0;try{for(;!this.destroyed&&a>0;){let{path:t,depth:p,files:d=[]}=this.parent||{};if(d.length>0){let i=d.splice(0,a).map(r=>this._formatEntry(r,t));for(let r of await Promise.all(i)){if(this.destroyed)return;let s=await this._getEntryType(r);s==="directory"&&this._directoryFilter(r)?(p<=this._maxDepth&&this.parents.push(this._exploreDir(r.fullPath,p+1)),this._wantsDir&&(this.push(r),a--)):(s==="file"||this._includeAsFile(r))&&this._fileFilter(r)&&this._wantsFile&&(this.push(r),a--)}}else{let i=this.parents.pop();if(!i){this.push(null);break}if(this.parent=await i,this.destroyed)return}}}catch(t){this.destroy(t)}finally{this.reading=!1}}}async _exploreDir(a,t){let p;try{p=await o8(a,this._rdOptions)}catch(d){this._onError(d)}return{files:p,depth:t,path:a}}async _formatEntry(a,t){let p;try{let d=this._isDirent?a.name:a,i=qa.resolve(qa.join(t,d));p={path:qa.relative(this._root,i),fullPath:i,basename:d},p[this._statsProp]=this._isDirent?a:await this._stat(i)}catch(d){this._onError(d)}return p}_onError(a){h8(a)&&!this.destroyed?this.emit("warn",a):this.destroy(a)}async _getEntryType(a){let t=a&&a[this._statsProp];if(t){if(t.isFile())return"file";if(t.isDirectory())return"directory";if(t&&t.isSymbolicLink()){let p=a.fullPath;try{let d=await u8(p),i=await O0(d);if(i.isFile())return"file";if(i.isDirectory()){let r=d.length;if(p.startsWith(d)&&p.substr(r,1)===qa.sep){let s=new Error(`Circular symlink detected: "${p}" points to "${d}"`);return s.code=$0,this._onError(s)}return"directory"}}catch(d){this._onError(d)}}}}_includeAsFile(a){let t=a&&a[this._statsProp];return t&&this._wantsEverything&&!t.isDirectory()}},ea=(e,a={})=>{let t=a.entryType||a.type;if(t==="both"&&(t=Ft),t&&(a.type=t),e){if(typeof e!="string")throw new TypeError("readdirp: root argument must be a string. Usage: readdirp(root, options)");if(t&&!L0.includes(t))throw new Error(`readdirp: Invalid type passed. Use one of ${L0.join(", ")}`)}else throw new Error("readdirp: root argument is required. Usage: readdirp(root, options)");return a.root=e,new qt(a)},w8=(e,a={})=>new Promise((t,p)=>{let d=[];ea(e,a).on("data",i=>d.push(i)).on("end",()=>t(d)).on("error",i=>p(i))});ea.promise=w8;ea.ReaddirpStream=qt;ea.default=ea;q0.exports=ea});var k0=y(K2=>{var P1=require("path"),T1=process.platform==="win32",b1=require("fs"),y8=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);function E8(){var e;if(y8){var a=new Error;e=t}else e=p;return e;function t(d){d&&(a.message=d.message,d=a,p(d))}function p(d){if(d){if(process.throwDeprecation)throw d;if(!process.noDeprecation){var i="fs: missing callback "+(d.stack||d.message);process.traceDeprecation?console.trace(i):console.error(i)}}}}function S8(e){return typeof e=="function"?e:E8()}var hh=P1.normalize;T1?l1=/(.*?)(?:[\/\\]+|$)/g:l1=/(.*?)(?:[\/]+|$)/g;var l1;T1?ka=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/:ka=/^[\/]*/;var ka;K2.realpathSync=function(a,t){if(a=P1.resolve(a),t&&Object.prototype.hasOwnProperty.call(t,a))return t[a];var p=a,d={},i={},r,s,n,o;l();function l(){var g=ka.exec(a);r=g[0].length,s=g[0],n=g[0],o="",T1&&!i[n]&&(b1.lstatSync(n),i[n]=!0)}for(;r<a.length;){l1.lastIndex=r;var u=l1.exec(a);if(o=s,s+=u[0],n=o+u[1],r=l1.lastIndex,!(i[n]||t&&t[n]===n)){var f;if(t&&Object.prototype.hasOwnProperty.call(t,n))f=t[n];else{var c=b1.lstatSync(n);if(!c.isSymbolicLink()){i[n]=!0,t&&(t[n]=n);continue}var m=null;if(!T1){var h=c.dev.toString(32)+":"+c.ino.toString(32);d.hasOwnProperty(h)&&(m=d[h])}m===null&&(b1.statSync(n),m=b1.readlinkSync(n)),f=P1.resolve(o,m),t&&(t[n]=f),T1||(d[h]=m)}a=P1.resolve(f,a.slice(r)),l()}}return t&&(t[p]=a),a};K2.realpath=function(a,t,p){if(typeof p!="function"&&(p=S8(t),t=null),a=P1.resolve(a),t&&Object.prototype.hasOwnProperty.call(t,a))return process.nextTick(p.bind(null,null,t[a]));var d=a,i={},r={},s,n,o,l;u();function u(){var g=ka.exec(a);s=g[0].length,n=g[0],o=g[0],l="",T1&&!r[o]?b1.lstat(o,function(v){if(v)return p(v);r[o]=!0,f()}):process.nextTick(f)}function f(){if(s>=a.length)return t&&(t[d]=a),p(null,a);l1.lastIndex=s;var g=l1.exec(a);return l=n,n+=g[0],o=l+g[1],s=l1.lastIndex,r[o]||t&&t[o]===o?process.nextTick(f):t&&Object.prototype.hasOwnProperty.call(t,o)?h(t[o]):b1.lstat(o,c)}function c(g,v){if(g)return p(g);if(!v.isSymbolicLink())return r[o]=!0,t&&(t[o]=o),process.nextTick(f);if(!T1){var w=v.dev.toString(32)+":"+v.ino.toString(32);if(i.hasOwnProperty(w))return m(null,i[w],o)}b1.stat(o,function(_){if(_)return p(_);b1.readlink(o,function(b,T){T1||(i[w]=T),m(b,T)})})}function m(g,v,w){if(g)return p(g);var _=P1.resolve(l,v);t&&(t[w]=_),h(_)}function h(g){a=P1.resolve(g,a.slice(s)),u()}}});var ed=y((gh,j0)=>{j0.exports=D1;D1.realpath=D1;D1.sync=J2;D1.realpathSync=J2;D1.monkeypatch=_8;D1.unmonkeypatch=b8;var aa=require("fs"),Y2=aa.realpath,Q2=aa.realpathSync,N8=process.version,U0=/^v[0-5]\./.test(N8),H0=k0();function M0(e){return e&&e.syscall==="realpath"&&(e.code==="ELOOP"||e.code==="ENOMEM"||e.code==="ENAMETOOLONG")}function D1(e,a,t){if(U0)return Y2(e,a,t);typeof a=="function"&&(t=a,a=null),Y2(e,a,function(p,d){M0(p)?H0.realpath(e,a,t):t(p,d)})}function J2(e,a){if(U0)return Q2(e,a);try{return Q2(e,a)}catch(t){if(M0(t))return H0.realpathSync(e,a);throw t}}function _8(){aa.realpath=D1,aa.realpathSync=J2}function b8(){aa.realpath=Y2,aa.realpathSync=Q2}});var z0=y((wh,G0)=>{G0.exports=function(e,a){for(var t=[],p=0;p<e.length;p++){var d=a(e[p],p);T8(d)?t.push.apply(t,d):t.push(d)}return t};var T8=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"}});var ad=y((yh,K0)=>{"use strict";K0.exports=X0;function X0(e,a,t){e instanceof RegExp&&(e=W0(e,t)),a instanceof RegExp&&(a=W0(a,t));var p=Z0(e,a,t);return p&&{start:p[0],end:p[1],pre:t.slice(0,p[0]),body:t.slice(p[0]+e.length,p[1]),post:t.slice(p[1]+a.length)}}function W0(e,a){var t=a.match(e);return t?t[0]:null}X0.range=Z0;function Z0(e,a,t){var p,d,i,r,s,n=t.indexOf(e),o=t.indexOf(a,n+1),l=n;if(n>=0&&o>0){if(e===a)return[n,o];for(p=[],i=t.length;l>=0&&!s;)l==n?(p.push(l),n=t.indexOf(e,l+1)):p.length==1?s=[p.pop(),o]:(d=p.pop(),d<i&&(i=d,r=o),o=t.indexOf(a,l+1)),l=n<o&&n>=0?n:o;p.length&&(s=[i,r])}return s}});var d6=y((Eh,p6)=>{var D8=z0(),Y0=ad();p6.exports=C8;var Q0="\0SLASH"+Math.random()+"\0",J0="\0OPEN"+Math.random()+"\0",pd="\0CLOSE"+Math.random()+"\0",e6="\0COMMA"+Math.random()+"\0",a6="\0PERIOD"+Math.random()+"\0";function td(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function A8(e){return e.split("\\\\").join(Q0).split("\\{").join(J0).split("\\}").join(pd).split("\\,").join(e6).split("\\.").join(a6)}function x8(e){return e.split(Q0).join("\\").split(J0).join("{").split(pd).join("}").split(e6).join(",").split(a6).join(".")}function t6(e){if(!e)return[""];var a=[],t=Y0("{","}",e);if(!t)return e.split(",");var p=t.pre,d=t.body,i=t.post,r=p.split(",");r[r.length-1]+="{"+d+"}";var s=t6(i);return i.length&&(r[r.length-1]+=s.shift(),r.push.apply(r,s)),a.push.apply(a,r),a}function C8(e){return e?(e.substr(0,2)==="{}"&&(e="\\{\\}"+e.substr(2)),ta(A8(e),!0).map(x8)):[]}function I8(e){return"{"+e+"}"}function R8(e){return/^-?0\d/.test(e)}function O8(e,a){return e<=a}function L8(e,a){return e>=a}function ta(e,a){var t=[],p=Y0("{","}",e);if(!p||/\$$/.test(p.pre))return[e];var d=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(p.body),i=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(p.body),r=d||i,s=p.body.indexOf(",")>=0;if(!r&&!s)return p.post.match(/,.*\}/)?(e=p.pre+"{"+p.body+pd+p.post,ta(e)):[e];var n;if(r)n=p.body.split(/\.\./);else if(n=t6(p.body),n.length===1&&(n=ta(n[0],!1).map(I8),n.length===1)){var l=p.post.length?ta(p.post,!1):[""];return l.map(function(N){return p.pre+n[0]+N})}var o=p.pre,l=p.post.length?ta(p.post,!1):[""],u;if(r){var f=td(n[0]),c=td(n[1]),m=Math.max(n[0].length,n[1].length),h=n.length==3?Math.abs(td(n[2])):1,g=O8,v=c<f;v&&(h*=-1,g=L8);var w=n.some(R8);u=[];for(var _=f;g(_,c);_+=h){var b;if(i)b=String.fromCharCode(_),b==="\\"&&(b="");else if(b=String(_),w){var T=m-b.length;if(T>0){var R=new Array(T+1).join("0");_<0?b="-"+R+b.slice(1):b=R+b}}u.push(b)}}else u=D8(n,function(U){return ta(U,!1)});for(var x=0;x<u.length;x++)for(var D=0;D<l.length;D++){var C=o+u[x]+l[D];(!a||r||C)&&t.push(C)}return t}});var Ht=y((Sh,l6)=>{l6.exports=Fe;Fe.Minimatch=ve;var Ua=function(){try{return require("path")}catch{}}()||{sep:"/"};Fe.sep=Ua.sep;var rd=Fe.GLOBSTAR=ve.GLOBSTAR={},V8=d6(),i6={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},dd="[^/]",id=dd+"*?",P8="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",$8="(?:(?!(?:\\/|^)\\.).)*?",r6=F8("().*{}+?[]^$\\!");function F8(e){return e.split("").reduce(function(a,t){return a[t]=!0,a},{})}var n6=/\/+/;Fe.filter=q8;function q8(e,a){return a=a||{},function(t,p,d){return Fe(t,e,a)}}function A1(e,a){a=a||{};var t={};return Object.keys(e).forEach(function(p){t[p]=e[p]}),Object.keys(a).forEach(function(p){t[p]=a[p]}),t}Fe.defaults=function(e){if(!e||typeof e!="object"||!Object.keys(e).length)return Fe;var a=Fe,t=function(d,i,r){return a(d,i,A1(e,r))};return t.Minimatch=function(d,i){return new a.Minimatch(d,A1(e,i))},t.Minimatch.defaults=function(d){return a.defaults(A1(e,d)).Minimatch},t.filter=function(d,i){return a.filter(d,A1(e,i))},t.defaults=function(d){return a.defaults(A1(e,d))},t.makeRe=function(d,i){return a.makeRe(d,A1(e,i))},t.braceExpand=function(d,i){return a.braceExpand(d,A1(e,i))},t.match=function(p,d,i){return a.match(p,d,A1(e,i))},t};ve.defaults=function(e){return Fe.defaults(e).Minimatch};function Fe(e,a,t){return Ut(a),t||(t={}),!t.nocomment&&a.charAt(0)==="#"?!1:new ve(a,t).match(e)}function ve(e,a){if(!(this instanceof ve))return new ve(e,a);Ut(e),a||(a={}),e=e.trim(),!a.allowWindowsEscape&&Ua.sep!=="/"&&(e=e.split(Ua.sep).join("/")),this.options=a,this.set=[],this.pattern=e,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.partial=!!a.partial,this.make()}ve.prototype.debug=function(){};ve.prototype.make=B8;function B8(){var e=this.pattern,a=this.options;if(!a.nocomment&&e.charAt(0)==="#"){this.comment=!0;return}if(!e){this.empty=!0;return}this.parseNegate();var t=this.globSet=this.braceExpand();a.debug&&(this.debug=function(){console.error.apply(console,arguments)}),this.debug(this.pattern,t),t=this.globParts=t.map(function(p){return p.split(n6)}),this.debug(this.pattern,t),t=t.map(function(p,d,i){return p.map(this.parse,this)},this),this.debug(this.pattern,t),t=t.filter(function(p){return p.indexOf(!1)===-1}),this.debug(this.pattern,t),this.set=t}ve.prototype.parseNegate=k8;function k8(){var e=this.pattern,a=!1,t=this.options,p=0;if(!t.nonegate){for(var d=0,i=e.length;d<i&&e.charAt(d)==="!";d++)a=!a,p++;p&&(this.pattern=e.substr(p)),this.negate=a}}Fe.braceExpand=function(e,a){return s6(e,a)};ve.prototype.braceExpand=s6;function s6(e,a){return a||(this instanceof ve?a=this.options:a={}),e=typeof e>"u"?this.pattern:e,Ut(e),a.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:V8(e)}var U8=1024*64,Ut=function(e){if(typeof e!="string")throw new TypeError("invalid pattern");if(e.length>U8)throw new TypeError("pattern is too long")};ve.prototype.parse=H8;var kt={};function H8(e,a){Ut(e);var t=this.options;if(e==="**")if(t.noglobstar)e="*";else return rd;if(e==="")return"";var p="",d=!!t.nocase,i=!1,r=[],s=[],n,o=!1,l=-1,u=-1,f=e.charAt(0)==="."?"":t.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",c=this;function m(){if(n){switch(n){case"*":p+=id,d=!0;break;case"?":p+=dd,d=!0;break;default:p+="\\"+n;break}c.debug("clearStateChar %j %j",n,p),n=!1}}for(var h=0,g=e.length,v;h<g&&(v=e.charAt(h));h++){if(this.debug("%s	%s %s %j",e,h,p,v),i&&r6[v]){p+="\\"+v,i=!1;continue}switch(v){case"/":return!1;case"\\":m(),i=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s	%s %s %j <-- stateChar",e,h,p,v),o){this.debug("  in class"),v==="!"&&h===u+1&&(v="^"),p+=v;continue}c.debug("call clearStateChar %j",n),m(),n=v,t.noext&&m();continue;case"(":if(o){p+="(";continue}if(!n){p+="\\(";continue}r.push({type:n,start:h-1,reStart:p.length,open:i6[n].open,close:i6[n].close}),p+=n==="!"?"(?:(?!(?:":"(?:",this.debug("plType %j %j",n,p),n=!1;continue;case")":if(o||!r.length){p+="\\)";continue}m(),d=!0;var w=r.pop();p+=w.close,w.type==="!"&&s.push(w),w.reEnd=p.length;continue;case"|":if(o||!r.length||i){p+="\\|",i=!1;continue}m(),p+="|";continue;case"[":if(m(),o){p+="\\"+v;continue}o=!0,u=h,l=p.length,p+=v;continue;case"]":if(h===u+1||!o){p+="\\"+v,i=!1;continue}var _=e.substring(u+1,h);try{RegExp("["+_+"]")}catch{var b=this.parse(_,kt);p=p.substr(0,l)+"\\["+b[0]+"\\]",d=d||b[1],o=!1;continue}d=!0,o=!1,p+=v;continue;default:m(),i?i=!1:r6[v]&&!(v==="^"&&o)&&(p+="\\"),p+=v}}for(o&&(_=e.substr(u+1),b=this.parse(_,kt),p=p.substr(0,l)+"\\["+b[0],d=d||b[1]),w=r.pop();w;w=r.pop()){var T=p.slice(w.reStart+w.open.length);this.debug("setting tail",p,w),T=T.replace(/((?:\\{2}){0,64})(\\?)\|/g,function(Le,we,f1){return f1||(f1="\\"),we+we+f1+"|"}),this.debug(`tail=%j
   %s`,T,T,w,p);var R=w.type==="*"?id:w.type==="?"?dd:"\\"+w.type;d=!0,p=p.slice(0,w.reStart)+R+"\\("+T}m(),i&&(p+="\\\\");var x=!1;switch(p.charAt(0)){case"[":case".":case"(":x=!0}for(var D=s.length-1;D>-1;D--){var C=s[D],U=p.slice(0,C.reStart),N=p.slice(C.reStart,C.reEnd-8),H=p.slice(C.reEnd-8,C.reEnd),$=p.slice(C.reEnd);H+=$;var Qe=U.split("(").length-1,E=$;for(h=0;h<Qe;h++)E=E.replace(/\)[+*?]?/,"");$=E;var S="";$===""&&a!==kt&&(S="$");var ce=U+N+$+S+H;p=ce}if(p!==""&&d&&(p="(?=.)"+p),x&&(p=f+p),a===kt)return[p,d];if(!d)return j8(e);var k=t.nocase?"i":"";try{var Ae=new RegExp("^"+p+"$",k)}catch{return new RegExp("$.")}return Ae._glob=e,Ae._src=p,Ae}Fe.makeRe=function(e,a){return new ve(e,a||{}).makeRe()};ve.prototype.makeRe=M8;function M8(){if(this.regexp||this.regexp===!1)return this.regexp;var e=this.set;if(!e.length)return this.regexp=!1,this.regexp;var a=this.options,t=a.noglobstar?id:a.dot?P8:$8,p=a.nocase?"i":"",d=e.map(function(i){return i.map(function(r){return r===rd?t:typeof r=="string"?G8(r):r._src}).join("\\/")}).join("|");d="^(?:"+d+")$",this.negate&&(d="^(?!"+d+").*$");try{this.regexp=new RegExp(d,p)}catch{this.regexp=!1}return this.regexp}Fe.match=function(e,a,t){t=t||{};var p=new ve(a,t);return e=e.filter(function(d){return p.match(d)}),p.options.nonull&&!e.length&&e.push(a),e};ve.prototype.match=function(a,t){if(typeof t>"u"&&(t=this.partial),this.debug("match",a,this.pattern),this.comment)return!1;if(this.empty)return a==="";if(a==="/"&&t)return!0;var p=this.options;Ua.sep!=="/"&&(a=a.split(Ua.sep).join("/")),a=a.split(n6),this.debug(this.pattern,"split",a);var d=this.set;this.debug(this.pattern,"set",d);var i,r;for(r=a.length-1;r>=0&&(i=a[r],!i);r--);for(r=0;r<d.length;r++){var s=d[r],n=a;p.matchBase&&s.length===1&&(n=[i]);var o=this.matchOne(n,s,t);if(o)return p.flipNegate?!0:!this.negate}return p.flipNegate?!1:this.negate};ve.prototype.matchOne=function(e,a,t){var p=this.options;this.debug("matchOne",{this:this,file:e,pattern:a}),this.debug("matchOne",e.length,a.length);for(var d=0,i=0,r=e.length,s=a.length;d<r&&i<s;d++,i++){this.debug("matchOne loop");var n=a[i],o=e[d];if(this.debug(a,n,o),n===!1)return!1;if(n===rd){this.debug("GLOBSTAR",[a,n,o]);var l=d,u=i+1;if(u===s){for(this.debug("** at the end");d<r;d++)if(e[d]==="."||e[d]===".."||!p.dot&&e[d].charAt(0)===".")return!1;return!0}for(;l<r;){var f=e[l];if(this.debug(`
globstar while`,e,l,a,u,f),this.matchOne(e.slice(l),a.slice(u),t))return this.debug("globstar found match!",l,r,f),!0;if(f==="."||f===".."||!p.dot&&f.charAt(0)==="."){this.debug("dot detected!",e,l,a,u);break}this.debug("globstar swallow a segment, and continue"),l++}return!!(t&&(this.debug(`
>>> no match, partial?`,e,l,a,u),l===r))}var c;if(typeof n=="string"?(c=o===n,this.debug("string match",n,o,c)):(c=o.match(n),this.debug("pattern match",n,o,c)),!c)return!1}if(d===r&&i===s)return!0;if(d===r)return t;if(i===s)return d===r-1&&e[d]==="";throw new Error("wtf?")};function j8(e){return e.replace(/\\(.)/g,"$1")}function G8(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}});var o6=y((Nh,nd)=>{typeof Object.create=="function"?nd.exports=function(a,t){t&&(a.super_=t,a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}))}:nd.exports=function(a,t){if(t){a.super_=t;var p=function(){};p.prototype=t.prototype,a.prototype=new p,a.prototype.constructor=a}}});var m6=y((_h,ld)=>{try{if(sd=require("util"),typeof sd.inherits!="function")throw"";ld.exports=sd.inherits}catch{ld.exports=o6()}var sd});var jt=y((bh,Mt)=>{"use strict";function u6(e){return e.charAt(0)==="/"}function c6(e){var a=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,t=a.exec(e),p=t[1]||"",d=!!(p&&p.charAt(1)!==":");return!!(t[2]||d)}Mt.exports=process.platform==="win32"?c6:u6;Mt.exports.posix=u6;Mt.exports.win32=c6});var md=y(x1=>{x1.setopts=Y8;x1.ownProp=f6;x1.makeAbs=Ha;x1.finish=Q8;x1.mark=J8;x1.isIgnored=v6;x1.childrenIgnored=el;function f6(e,a){return Object.prototype.hasOwnProperty.call(e,a)}var z8=require("fs"),pa=require("path"),W8=Ht(),h6=jt(),od=W8.Minimatch;function X8(e,a){return e.localeCompare(a,"en")}function Z8(e,a){e.ignore=a.ignore||[],Array.isArray(e.ignore)||(e.ignore=[e.ignore]),e.ignore.length&&(e.ignore=e.ignore.map(K8))}function K8(e){var a=null;if(e.slice(-3)==="/**"){var t=e.replace(/(\/\*\*)+$/,"");a=new od(t,{dot:!0})}return{matcher:new od(e,{dot:!0}),gmatcher:a}}function Y8(e,a,t){if(t||(t={}),t.matchBase&&a.indexOf("/")===-1){if(t.noglobstar)throw new Error("base matching requires globstar");a="**/"+a}e.silent=!!t.silent,e.pattern=a,e.strict=t.strict!==!1,e.realpath=!!t.realpath,e.realpathCache=t.realpathCache||Object.create(null),e.follow=!!t.follow,e.dot=!!t.dot,e.mark=!!t.mark,e.nodir=!!t.nodir,e.nodir&&(e.mark=!0),e.sync=!!t.sync,e.nounique=!!t.nounique,e.nonull=!!t.nonull,e.nosort=!!t.nosort,e.nocase=!!t.nocase,e.stat=!!t.stat,e.noprocess=!!t.noprocess,e.absolute=!!t.absolute,e.fs=t.fs||z8,e.maxLength=t.maxLength||1/0,e.cache=t.cache||Object.create(null),e.statCache=t.statCache||Object.create(null),e.symlinks=t.symlinks||Object.create(null),Z8(e,t),e.changedCwd=!1;var p=process.cwd();f6(t,"cwd")?(e.cwd=pa.resolve(t.cwd),e.changedCwd=e.cwd!==p):e.cwd=p,e.root=t.root||pa.resolve(e.cwd,"/"),e.root=pa.resolve(e.root),process.platform==="win32"&&(e.root=e.root.replace(/\\/g,"/")),e.cwdAbs=h6(e.cwd)?e.cwd:Ha(e,e.cwd),process.platform==="win32"&&(e.cwdAbs=e.cwdAbs.replace(/\\/g,"/")),e.nomount=!!t.nomount,t.nonegate=!0,t.nocomment=!0,t.allowWindowsEscape=!1,e.minimatch=new od(a,t),e.options=e.minimatch.options}function Q8(e){for(var a=e.nounique,t=a?[]:Object.create(null),p=0,d=e.matches.length;p<d;p++){var i=e.matches[p];if(!i||Object.keys(i).length===0){if(e.nonull){var r=e.minimatch.globSet[p];a?t.push(r):t[r]=!0}}else{var s=Object.keys(i);a?t.push.apply(t,s):s.forEach(function(n){t[n]=!0})}}if(a||(t=Object.keys(t)),e.nosort||(t=t.sort(X8)),e.mark){for(var p=0;p<t.length;p++)t[p]=e._mark(t[p]);e.nodir&&(t=t.filter(function(n){var o=!/\/$/.test(n),l=e.cache[n]||e.cache[Ha(e,n)];return o&&l&&(o=l!=="DIR"&&!Array.isArray(l)),o}))}e.ignore.length&&(t=t.filter(function(n){return!v6(e,n)})),e.found=t}function J8(e,a){var t=Ha(e,a),p=e.cache[t],d=a;if(p){var i=p==="DIR"||Array.isArray(p),r=a.slice(-1)==="/";if(i&&!r?d+="/":!i&&r&&(d=d.slice(0,-1)),d!==a){var s=Ha(e,d);e.statCache[s]=e.statCache[t],e.cache[s]=e.cache[t]}}return d}function Ha(e,a){var t=a;return a.charAt(0)==="/"?t=pa.join(e.root,a):h6(a)||a===""?t=a:e.changedCwd?t=pa.resolve(e.cwd,a):t=pa.resolve(a),process.platform==="win32"&&(t=t.replace(/\\/g,"/")),t}function v6(e,a){return e.ignore.length?e.ignore.some(function(t){return t.matcher.match(a)||!!(t.gmatcher&&t.gmatcher.match(a))}):!1}function el(e,a){return e.ignore.length?e.ignore.some(function(t){return!!(t.gmatcher&&t.gmatcher.match(a))}):!1}});var S6=y((Ch,E6)=>{E6.exports=y6;y6.GlobSync=se;var al=ed(),g6=Ht(),Dh=g6.Minimatch,Ah=fd().Glob,xh=require("util"),ud=require("path"),w6=require("assert"),Gt=jt(),$1=md(),tl=$1.setopts,cd=$1.ownProp,pl=$1.childrenIgnored,dl=$1.isIgnored;function y6(e,a){if(typeof a=="function"||arguments.length===3)throw new TypeError(`callback provided to sync glob
See: https://github.com/isaacs/node-glob/issues/167`);return new se(e,a).found}function se(e,a){if(!e)throw new Error("must provide pattern");if(typeof a=="function"||arguments.length===3)throw new TypeError(`callback provided to sync glob
See: https://github.com/isaacs/node-glob/issues/167`);if(!(this instanceof se))return new se(e,a);if(tl(this,e,a),this.noprocess)return this;var t=this.minimatch.set.length;this.matches=new Array(t);for(var p=0;p<t;p++)this._process(this.minimatch.set[p],p,!1);this._finish()}se.prototype._finish=function(){if(w6.ok(this instanceof se),this.realpath){var e=this;this.matches.forEach(function(a,t){var p=e.matches[t]=Object.create(null);for(var d in a)try{d=e._makeAbs(d);var i=al.realpathSync(d,e.realpathCache);p[i]=!0}catch(r){if(r.syscall==="stat")p[e._makeAbs(d)]=!0;else throw r}})}$1.finish(this)};se.prototype._process=function(e,a,t){w6.ok(this instanceof se);for(var p=0;typeof e[p]=="string";)p++;var d;switch(p){case e.length:this._processSimple(e.join("/"),a);return;case 0:d=null;break;default:d=e.slice(0,p).join("/");break}var i=e.slice(p),r;d===null?r=".":((Gt(d)||Gt(e.map(function(o){return typeof o=="string"?o:"[*]"}).join("/")))&&(!d||!Gt(d))&&(d="/"+d),r=d);var s=this._makeAbs(r);if(!pl(this,r)){var n=i[0]===g6.GLOBSTAR;n?this._processGlobStar(d,r,s,i,a,t):this._processReaddir(d,r,s,i,a,t)}};se.prototype._processReaddir=function(e,a,t,p,d,i){var r=this._readdir(t,i);if(r){for(var s=p[0],n=!!this.minimatch.negate,o=s._glob,l=this.dot||o.charAt(0)===".",u=[],f=0;f<r.length;f++){var c=r[f];if(c.charAt(0)!=="."||l){var m;n&&!e?m=!c.match(s):m=c.match(s),m&&u.push(c)}}var h=u.length;if(h!==0){if(p.length===1&&!this.mark&&!this.stat){this.matches[d]||(this.matches[d]=Object.create(null));for(var f=0;f<h;f++){var c=u[f];e&&(e.slice(-1)!=="/"?c=e+"/"+c:c=e+c),c.charAt(0)==="/"&&!this.nomount&&(c=ud.join(this.root,c)),this._emitMatch(d,c)}return}p.shift();for(var f=0;f<h;f++){var c=u[f],g;e?g=[e,c]:g=[c],this._process(g.concat(p),d,i)}}}};se.prototype._emitMatch=function(e,a){if(!dl(this,a)){var t=this._makeAbs(a);if(this.mark&&(a=this._mark(a)),this.absolute&&(a=t),!this.matches[e][a]){if(this.nodir){var p=this.cache[t];if(p==="DIR"||Array.isArray(p))return}this.matches[e][a]=!0,this.stat&&this._stat(a)}}};se.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,!1);var a,t,p;try{t=this.fs.lstatSync(e)}catch(i){if(i.code==="ENOENT")return null}var d=t&&t.isSymbolicLink();return this.symlinks[e]=d,!d&&t&&!t.isDirectory()?this.cache[e]="FILE":a=this._readdir(e,!1),a};se.prototype._readdir=function(e,a){var t;if(a&&!cd(this.symlinks,e))return this._readdirInGlobStar(e);if(cd(this.cache,e)){var p=this.cache[e];if(!p||p==="FILE")return null;if(Array.isArray(p))return p}try{return this._readdirEntries(e,this.fs.readdirSync(e))}catch(d){return this._readdirError(e,d),null}};se.prototype._readdirEntries=function(e,a){if(!this.mark&&!this.stat)for(var t=0;t<a.length;t++){var p=a[t];e==="/"?p=e+p:p=e+"/"+p,this.cache[p]=!0}return this.cache[e]=a,a};se.prototype._readdirError=function(e,a){switch(a.code){case"ENOTSUP":case"ENOTDIR":var t=this._makeAbs(e);if(this.cache[t]="FILE",t===this.cwdAbs){var p=new Error(a.code+" invalid cwd "+this.cwd);throw p.path=this.cwd,p.code=a.code,p}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:if(this.cache[this._makeAbs(e)]=!1,this.strict)throw a;this.silent||console.error("glob error",a);break}};se.prototype._processGlobStar=function(e,a,t,p,d,i){var r=this._readdir(t,i);if(r){var s=p.slice(1),n=e?[e]:[],o=n.concat(s);this._process(o,d,!1);var l=r.length,u=this.symlinks[t];if(!(u&&i))for(var f=0;f<l;f++){var c=r[f];if(!(c.charAt(0)==="."&&!this.dot)){var m=n.concat(r[f],s);this._process(m,d,!0);var h=n.concat(r[f],p);this._process(h,d,!0)}}}};se.prototype._processSimple=function(e,a){var t=this._stat(e);if(this.matches[a]||(this.matches[a]=Object.create(null)),!!t){if(e&&Gt(e)&&!this.nomount){var p=/[\/\\]$/.test(e);e.charAt(0)==="/"?e=ud.join(this.root,e):(e=ud.resolve(this.root,e),p&&(e+="/"))}process.platform==="win32"&&(e=e.replace(/\\/g,"/")),this._emitMatch(a,e)}};se.prototype._stat=function(e){var a=this._makeAbs(e),t=e.slice(-1)==="/";if(e.length>this.maxLength)return!1;if(!this.stat&&cd(this.cache,a)){var r=this.cache[a];if(Array.isArray(r)&&(r="DIR"),!t||r==="DIR")return r;if(t&&r==="FILE")return!1}var p,d=this.statCache[a];if(!d){var i;try{i=this.fs.lstatSync(a)}catch(s){if(s&&(s.code==="ENOENT"||s.code==="ENOTDIR"))return this.statCache[a]=!1,!1}if(i&&i.isSymbolicLink())try{d=this.fs.statSync(a)}catch{d=i}else d=i}this.statCache[a]=d;var r=!0;return d&&(r=d.isDirectory()?"DIR":"FILE"),this.cache[a]=this.cache[a]||r,t&&r==="FILE"?!1:r};se.prototype._mark=function(e){return $1.mark(this,e)};se.prototype._makeAbs=function(e){return $1.makeAbs(this,e)}});var hd=y((Ih,_6)=>{_6.exports=N6;function N6(e,a){if(e&&a)return N6(e)(a);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(p){t[p]=e[p]}),t;function t(){for(var p=new Array(arguments.length),d=0;d<p.length;d++)p[d]=arguments[d];var i=e.apply(this,p),r=p[p.length-1];return typeof i=="function"&&i!==r&&Object.keys(r).forEach(function(s){i[s]=r[s]}),i}}});var gd=y((Rh,vd)=>{var b6=hd();vd.exports=b6(zt);vd.exports.strict=b6(T6);zt.proto=zt(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return zt(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return T6(this)},configurable:!0})});function zt(e){var a=function(){return a.called?a.value:(a.called=!0,a.value=e.apply(this,arguments))};return a.called=!1,a}function T6(e){var a=function(){if(a.called)throw new Error(a.onceError);return a.called=!0,a.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return a.onceError=t+" shouldn't be called more than once",a.called=!1,a}});var A6=y((Oh,D6)=>{var il=hd(),Ma=Object.create(null),rl=gd();D6.exports=il(nl);function nl(e,a){return Ma[e]?(Ma[e].push(a),null):(Ma[e]=[a],sl(e))}function sl(e){return rl(function a(){var t=Ma[e],p=t.length,d=ll(arguments);try{for(var i=0;i<p;i++)t[i].apply(null,d)}finally{t.length>p?(t.splice(0,p),process.nextTick(function(){a.apply(null,d)})):delete Ma[e]}})}function ll(e){for(var a=e.length,t=[],p=0;p<a;p++)t[p]=e[p];return t}});var fd=y((Ph,C6)=>{C6.exports=F1;var ol=ed(),x6=Ht(),Lh=x6.Minimatch,ml=m6(),ul=require("events").EventEmitter,wd=require("path"),yd=require("assert"),ja=jt(),Sd=S6(),q1=md(),cl=q1.setopts,Ed=q1.ownProp,Nd=A6(),Vh=require("util"),fl=q1.childrenIgnored,hl=q1.isIgnored,vl=gd();function F1(e,a,t){if(typeof a=="function"&&(t=a,a={}),a||(a={}),a.sync){if(t)throw new TypeError("callback provided to sync glob");return Sd(e,a)}return new j(e,a,t)}F1.sync=Sd;var gl=F1.GlobSync=Sd.GlobSync;F1.glob=F1;function wl(e,a){if(a===null||typeof a!="object")return e;for(var t=Object.keys(a),p=t.length;p--;)e[t[p]]=a[t[p]];return e}F1.hasMagic=function(e,a){var t=wl({},a);t.noprocess=!0;var p=new j(e,t),d=p.minimatch.set;if(!e)return!1;if(d.length>1)return!0;for(var i=0;i<d[0].length;i++)if(typeof d[0][i]!="string")return!0;return!1};F1.Glob=j;ml(j,ul);function j(e,a,t){if(typeof a=="function"&&(t=a,a=null),a&&a.sync){if(t)throw new TypeError("callback provided to sync glob");return new gl(e,a)}if(!(this instanceof j))return new j(e,a,t);cl(this,e,a),this._didRealPath=!1;var p=this.minimatch.set.length;this.matches=new Array(p),typeof t=="function"&&(t=vl(t),this.on("error",t),this.on("end",function(n){t(null,n)}));var d=this;if(this._processing=0,this._emitQueue=[],this._processQueue=[],this.paused=!1,this.noprocess)return this;if(p===0)return s();for(var i=!0,r=0;r<p;r++)this._process(this.minimatch.set[r],r,!1,s);i=!1;function s(){--d._processing,d._processing<=0&&(i?process.nextTick(function(){d._finish()}):d._finish())}}j.prototype._finish=function(){if(yd(this instanceof j),!this.aborted){if(this.realpath&&!this._didRealpath)return this._realpath();q1.finish(this),this.emit("end",this.found)}};j.prototype._realpath=function(){if(this._didRealpath)return;this._didRealpath=!0;var e=this.matches.length;if(e===0)return this._finish();for(var a=this,t=0;t<this.matches.length;t++)this._realpathSet(t,p);function p(){--e===0&&a._finish()}};j.prototype._realpathSet=function(e,a){var t=this.matches[e];if(!t)return a();var p=Object.keys(t),d=this,i=p.length;if(i===0)return a();var r=this.matches[e]=Object.create(null);p.forEach(function(s,n){s=d._makeAbs(s),ol.realpath(s,d.realpathCache,function(o,l){o?o.syscall==="stat"?r[s]=!0:d.emit("error",o):r[l]=!0,--i===0&&(d.matches[e]=r,a())})})};j.prototype._mark=function(e){return q1.mark(this,e)};j.prototype._makeAbs=function(e){return q1.makeAbs(this,e)};j.prototype.abort=function(){this.aborted=!0,this.emit("abort")};j.prototype.pause=function(){this.paused||(this.paused=!0,this.emit("pause"))};j.prototype.resume=function(){if(this.paused){if(this.emit("resume"),this.paused=!1,this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var a=0;a<e.length;a++){var t=e[a];this._emitMatch(t[0],t[1])}}if(this._processQueue.length){var p=this._processQueue.slice(0);this._processQueue.length=0;for(var a=0;a<p.length;a++){var d=p[a];this._processing--,this._process(d[0],d[1],d[2],d[3])}}}};j.prototype._process=function(e,a,t,p){if(yd(this instanceof j),yd(typeof p=="function"),!this.aborted){if(this._processing++,this.paused){this._processQueue.push([e,a,t,p]);return}for(var d=0;typeof e[d]=="string";)d++;var i;switch(d){case e.length:this._processSimple(e.join("/"),a,p);return;case 0:i=null;break;default:i=e.slice(0,d).join("/");break}var r=e.slice(d),s;i===null?s=".":((ja(i)||ja(e.map(function(l){return typeof l=="string"?l:"[*]"}).join("/")))&&(!i||!ja(i))&&(i="/"+i),s=i);var n=this._makeAbs(s);if(fl(this,s))return p();var o=r[0]===x6.GLOBSTAR;o?this._processGlobStar(i,s,n,r,a,t,p):this._processReaddir(i,s,n,r,a,t,p)}};j.prototype._processReaddir=function(e,a,t,p,d,i,r){var s=this;this._readdir(t,i,function(n,o){return s._processReaddir2(e,a,t,p,d,i,o,r)})};j.prototype._processReaddir2=function(e,a,t,p,d,i,r,s){if(!r)return s();for(var n=p[0],o=!!this.minimatch.negate,l=n._glob,u=this.dot||l.charAt(0)===".",f=[],c=0;c<r.length;c++){var m=r[c];if(m.charAt(0)!=="."||u){var h;o&&!e?h=!m.match(n):h=m.match(n),h&&f.push(m)}}var g=f.length;if(g===0)return s();if(p.length===1&&!this.mark&&!this.stat){this.matches[d]||(this.matches[d]=Object.create(null));for(var c=0;c<g;c++){var m=f[c];e&&(e!=="/"?m=e+"/"+m:m=e+m),m.charAt(0)==="/"&&!this.nomount&&(m=wd.join(this.root,m)),this._emitMatch(d,m)}return s()}p.shift();for(var c=0;c<g;c++){var m=f[c],v;e&&(e!=="/"?m=e+"/"+m:m=e+m),this._process([m].concat(p),d,i,s)}s()};j.prototype._emitMatch=function(e,a){if(!this.aborted&&!hl(this,a)){if(this.paused){this._emitQueue.push([e,a]);return}var t=ja(a)?a:this._makeAbs(a);if(this.mark&&(a=this._mark(a)),this.absolute&&(a=t),!this.matches[e][a]){if(this.nodir){var p=this.cache[t];if(p==="DIR"||Array.isArray(p))return}this.matches[e][a]=!0;var d=this.statCache[t];d&&this.emit("stat",a,d),this.emit("match",a)}}};j.prototype._readdirInGlobStar=function(e,a){if(this.aborted)return;if(this.follow)return this._readdir(e,!1,a);var t="lstat\0"+e,p=this,d=Nd(t,i);d&&p.fs.lstat(e,d);function i(r,s){if(r&&r.code==="ENOENT")return a();var n=s&&s.isSymbolicLink();p.symlinks[e]=n,!n&&s&&!s.isDirectory()?(p.cache[e]="FILE",a()):p._readdir(e,!1,a)}};j.prototype._readdir=function(e,a,t){if(!this.aborted&&(t=Nd("readdir\0"+e+"\0"+a,t),!!t)){if(a&&!Ed(this.symlinks,e))return this._readdirInGlobStar(e,t);if(Ed(this.cache,e)){var p=this.cache[e];if(!p||p==="FILE")return t();if(Array.isArray(p))return t(null,p)}var d=this;d.fs.readdir(e,yl(this,e,t))}};function yl(e,a,t){return function(p,d){p?e._readdirError(a,p,t):e._readdirEntries(a,d,t)}}j.prototype._readdirEntries=function(e,a,t){if(!this.aborted){if(!this.mark&&!this.stat)for(var p=0;p<a.length;p++){var d=a[p];e==="/"?d=e+d:d=e+"/"+d,this.cache[d]=!0}return this.cache[e]=a,t(null,a)}};j.prototype._readdirError=function(e,a,t){if(!this.aborted){switch(a.code){case"ENOTSUP":case"ENOTDIR":var p=this._makeAbs(e);if(this.cache[p]="FILE",p===this.cwdAbs){var d=new Error(a.code+" invalid cwd "+this.cwd);d.path=this.cwd,d.code=a.code,this.emit("error",d),this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:this.cache[this._makeAbs(e)]=!1,this.strict&&(this.emit("error",a),this.abort()),this.silent||console.error("glob error",a);break}return t()}};j.prototype._processGlobStar=function(e,a,t,p,d,i,r){var s=this;this._readdir(t,i,function(n,o){s._processGlobStar2(e,a,t,p,d,i,o,r)})};j.prototype._processGlobStar2=function(e,a,t,p,d,i,r,s){if(!r)return s();var n=p.slice(1),o=e?[e]:[],l=o.concat(n);this._process(l,d,!1,s);var u=this.symlinks[t],f=r.length;if(u&&i)return s();for(var c=0;c<f;c++){var m=r[c];if(!(m.charAt(0)==="."&&!this.dot)){var h=o.concat(r[c],n);this._process(h,d,!0,s);var g=o.concat(r[c],p);this._process(g,d,!0,s)}}s()};j.prototype._processSimple=function(e,a,t){var p=this;this._stat(e,function(d,i){p._processSimple2(e,a,d,i,t)})};j.prototype._processSimple2=function(e,a,t,p,d){if(this.matches[a]||(this.matches[a]=Object.create(null)),!p)return d();if(e&&ja(e)&&!this.nomount){var i=/[\/\\]$/.test(e);e.charAt(0)==="/"?e=wd.join(this.root,e):(e=wd.resolve(this.root,e),i&&(e+="/"))}process.platform==="win32"&&(e=e.replace(/\\/g,"/")),this._emitMatch(a,e),d()};j.prototype._stat=function(e,a){var t=this._makeAbs(e),p=e.slice(-1)==="/";if(e.length>this.maxLength)return a();if(!this.stat&&Ed(this.cache,t)){var d=this.cache[t];if(Array.isArray(d)&&(d="DIR"),!p||d==="DIR")return a(null,d);if(p&&d==="FILE")return a()}var i,r=this.statCache[t];if(r!==void 0){if(r===!1)return a(null,r);var s=r.isDirectory()?"DIR":"FILE";return p&&s==="FILE"?a():a(null,s,r)}var n=this,o=Nd("stat\0"+t,l);o&&n.fs.lstat(t,o);function l(u,f){if(f&&f.isSymbolicLink())return n.fs.stat(t,function(c,m){c?n._stat2(e,t,null,f,a):n._stat2(e,t,c,m,a)});n._stat2(e,t,u,f,a)}};j.prototype._stat2=function(e,a,t,p,d){if(t&&(t.code==="ENOENT"||t.code==="ENOTDIR"))return this.statCache[a]=!1,d();var i=e.slice(-1)==="/";if(this.statCache[a]=p,a.slice(-1)==="/"&&p&&!p.isDirectory())return d(null,!1,p);var r=!0;return p&&(r=p.isDirectory()?"DIR":"FILE"),this.cache[a]=this.cache[a]||r,i&&r==="FILE"?d():d(null,r,p)}});var F6=y(($h,$6)=>{var z=require("assert"),L6=require("path"),I6=require("fs"),da;try{da=fd()}catch{}var El={nosort:!0,silent:!0},_d=0,Ga=process.platform==="win32",V6=e=>{if(["unlink","chmod","stat","lstat","rmdir","readdir"].forEach(t=>{e[t]=e[t]||I6[t],t=t+"Sync",e[t]=e[t]||I6[t]}),e.maxBusyTries=e.maxBusyTries||3,e.emfileWait=e.emfileWait||1e3,e.glob===!1&&(e.disableGlob=!0),e.disableGlob!==!0&&da===void 0)throw Error("glob dependency not found, set `options.disableGlob = true` if intentional");e.disableGlob=e.disableGlob||!1,e.glob=e.glob||El},Td=(e,a,t)=>{typeof a=="function"&&(t=a,a={}),z(e,"rimraf: missing path"),z.equal(typeof e,"string","rimraf: path should be a string"),z.equal(typeof t,"function","rimraf: callback function required"),z(a,"rimraf: invalid options argument provided"),z.equal(typeof a,"object","rimraf: options should be object"),V6(a);let p=0,d=null,i=0,r=n=>{d=d||n,--i===0&&t(d)},s=(n,o)=>{if(n)return t(n);if(i=o.length,i===0)return t();o.forEach(l=>{let u=f=>{if(f){if((f.code==="EBUSY"||f.code==="ENOTEMPTY"||f.code==="EPERM")&&p<a.maxBusyTries)return p++,setTimeout(()=>bd(l,a,u),p*100);if(f.code==="EMFILE"&&_d<a.emfileWait)return setTimeout(()=>bd(l,a,u),_d++);f.code==="ENOENT"&&(f=null)}_d=0,r(f)};bd(l,a,u)})};if(a.disableGlob||!da.hasMagic(e))return s(null,[e]);a.lstat(e,(n,o)=>{if(!n)return s(null,[e]);da(e,a.glob,s)})},bd=(e,a,t)=>{z(e),z(a),z(typeof t=="function"),a.lstat(e,(p,d)=>{if(p&&p.code==="ENOENT")return t(null);if(p&&p.code==="EPERM"&&Ga&&R6(e,a,p,t),d&&d.isDirectory())return Wt(e,a,p,t);a.unlink(e,i=>{if(i){if(i.code==="ENOENT")return t(null);if(i.code==="EPERM")return Ga?R6(e,a,i,t):Wt(e,a,i,t);if(i.code==="EISDIR")return Wt(e,a,i,t)}return t(i)})})},R6=(e,a,t,p)=>{z(e),z(a),z(typeof p=="function"),a.chmod(e,438,d=>{d?p(d.code==="ENOENT"?null:t):a.stat(e,(i,r)=>{i?p(i.code==="ENOENT"?null:t):r.isDirectory()?Wt(e,a,t,p):a.unlink(e,p)})})},O6=(e,a,t)=>{z(e),z(a);try{a.chmodSync(e,438)}catch(d){if(d.code==="ENOENT")return;throw t}let p;try{p=a.statSync(e)}catch(d){if(d.code==="ENOENT")return;throw t}p.isDirectory()?Xt(e,a,t):a.unlinkSync(e)},Wt=(e,a,t,p)=>{z(e),z(a),z(typeof p=="function"),a.rmdir(e,d=>{d&&(d.code==="ENOTEMPTY"||d.code==="EEXIST"||d.code==="EPERM")?Sl(e,a,p):d&&d.code==="ENOTDIR"?p(t):p(d)})},Sl=(e,a,t)=>{z(e),z(a),z(typeof t=="function"),a.readdir(e,(p,d)=>{if(p)return t(p);let i=d.length;if(i===0)return a.rmdir(e,t);let r;d.forEach(s=>{Td(L6.join(e,s),a,n=>{if(!r){if(n)return t(r=n);--i===0&&a.rmdir(e,t)}})})})},P6=(e,a)=>{a=a||{},V6(a),z(e,"rimraf: missing path"),z.equal(typeof e,"string","rimraf: path should be a string"),z(a,"rimraf: missing options"),z.equal(typeof a,"object","rimraf: options should be object");let t;if(a.disableGlob||!da.hasMagic(e))t=[e];else try{a.lstatSync(e),t=[e]}catch{t=da.sync(e,a.glob)}if(t.length)for(let p=0;p<t.length;p++){let d=t[p],i;try{i=a.lstatSync(d)}catch(r){if(r.code==="ENOENT")return;r.code==="EPERM"&&Ga&&O6(d,a,r)}try{i&&i.isDirectory()?Xt(d,a,null):a.unlinkSync(d)}catch(r){if(r.code==="ENOENT")return;if(r.code==="EPERM")return Ga?O6(d,a,r):Xt(d,a,r);if(r.code!=="EISDIR")throw r;Xt(d,a,r)}}},Xt=(e,a,t)=>{z(e),z(a);try{a.rmdirSync(e)}catch(p){if(p.code==="ENOENT")return;if(p.code==="ENOTDIR")throw t;(p.code==="ENOTEMPTY"||p.code==="EEXIST"||p.code==="EPERM")&&Nl(e,a)}},Nl=(e,a)=>{z(e),z(a),a.readdirSync(e).forEach(d=>P6(L6.join(e,d),a));let t=Ga?100:1,p=0;do{let d=!0;try{let i=a.rmdirSync(e,a);return d=!1,i}finally{if(++p<t&&d)continue}}while(!0)};$6.exports=Td;Td.sync=P6});var za=y((Fh,q6)=>{var _l="2.0.0",bl=Number.MAX_SAFE_INTEGER||9007199254740991,Tl=16,Dl=250,Al=["major","premajor","minor","preminor","patch","prepatch","prerelease"];q6.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:Tl,MAX_SAFE_BUILD_LENGTH:Dl,MAX_SAFE_INTEGER:bl,RELEASE_TYPES:Al,SEMVER_SPEC_VERSION:_l,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}});var Wa=y((qh,B6)=>{var xl=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};B6.exports=xl});var ia=y((o1,k6)=>{var{MAX_SAFE_COMPONENT_LENGTH:Dd,MAX_SAFE_BUILD_LENGTH:Cl,MAX_LENGTH:Il}=za(),Rl=Wa();o1=k6.exports={};var Ol=o1.re=[],Ll=o1.safeRe=[],L=o1.src=[],V=o1.t={},Vl=0,Ad="[a-zA-Z0-9-]",Pl=[["\\s",1],["\\d",Il],[Ad,Cl]],$l=e=>{for(let[a,t]of Pl)e=e.split(`${a}*`).join(`${a}{0,${t}}`).split(`${a}+`).join(`${a}{1,${t}}`);return e},P=(e,a,t)=>{let p=$l(a),d=Vl++;Rl(e,d,a),V[e]=d,L[d]=a,Ol[d]=new RegExp(a,t?"g":void 0),Ll[d]=new RegExp(p,t?"g":void 0)};P("NUMERICIDENTIFIER","0|[1-9]\\d*");P("NUMERICIDENTIFIERLOOSE","\\d+");P("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${Ad}*`);P("MAINVERSION",`(${L[V.NUMERICIDENTIFIER]})\\.(${L[V.NUMERICIDENTIFIER]})\\.(${L[V.NUMERICIDENTIFIER]})`);P("MAINVERSIONLOOSE",`(${L[V.NUMERICIDENTIFIERLOOSE]})\\.(${L[V.NUMERICIDENTIFIERLOOSE]})\\.(${L[V.NUMERICIDENTIFIERLOOSE]})`);P("PRERELEASEIDENTIFIER",`(?:${L[V.NUMERICIDENTIFIER]}|${L[V.NONNUMERICIDENTIFIER]})`);P("PRERELEASEIDENTIFIERLOOSE",`(?:${L[V.NUMERICIDENTIFIERLOOSE]}|${L[V.NONNUMERICIDENTIFIER]})`);P("PRERELEASE",`(?:-(${L[V.PRERELEASEIDENTIFIER]}(?:\\.${L[V.PRERELEASEIDENTIFIER]})*))`);P("PRERELEASELOOSE",`(?:-?(${L[V.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${L[V.PRERELEASEIDENTIFIERLOOSE]})*))`);P("BUILDIDENTIFIER",`${Ad}+`);P("BUILD",`(?:\\+(${L[V.BUILDIDENTIFIER]}(?:\\.${L[V.BUILDIDENTIFIER]})*))`);P("FULLPLAIN",`v?${L[V.MAINVERSION]}${L[V.PRERELEASE]}?${L[V.BUILD]}?`);P("FULL",`^${L[V.FULLPLAIN]}$`);P("LOOSEPLAIN",`[v=\\s]*${L[V.MAINVERSIONLOOSE]}${L[V.PRERELEASELOOSE]}?${L[V.BUILD]}?`);P("LOOSE",`^${L[V.LOOSEPLAIN]}$`);P("GTLT","((?:<|>)?=?)");P("XRANGEIDENTIFIERLOOSE",`${L[V.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);P("XRANGEIDENTIFIER",`${L[V.NUMERICIDENTIFIER]}|x|X|\\*`);P("XRANGEPLAIN",`[v=\\s]*(${L[V.XRANGEIDENTIFIER]})(?:\\.(${L[V.XRANGEIDENTIFIER]})(?:\\.(${L[V.XRANGEIDENTIFIER]})(?:${L[V.PRERELEASE]})?${L[V.BUILD]}?)?)?`);P("XRANGEPLAINLOOSE",`[v=\\s]*(${L[V.XRANGEIDENTIFIERLOOSE]})(?:\\.(${L[V.XRANGEIDENTIFIERLOOSE]})(?:\\.(${L[V.XRANGEIDENTIFIERLOOSE]})(?:${L[V.PRERELEASELOOSE]})?${L[V.BUILD]}?)?)?`);P("XRANGE",`^${L[V.GTLT]}\\s*${L[V.XRANGEPLAIN]}$`);P("XRANGELOOSE",`^${L[V.GTLT]}\\s*${L[V.XRANGEPLAINLOOSE]}$`);P("COERCE",`(^|[^\\d])(\\d{1,${Dd}})(?:\\.(\\d{1,${Dd}}))?(?:\\.(\\d{1,${Dd}}))?(?:$|[^\\d])`);P("COERCERTL",L[V.COERCE],!0);P("LONETILDE","(?:~>?)");P("TILDETRIM",`(\\s*)${L[V.LONETILDE]}\\s+`,!0);o1.tildeTrimReplace="$1~";P("TILDE",`^${L[V.LONETILDE]}${L[V.XRANGEPLAIN]}$`);P("TILDELOOSE",`^${L[V.LONETILDE]}${L[V.XRANGEPLAINLOOSE]}$`);P("LONECARET","(?:\\^)");P("CARETTRIM",`(\\s*)${L[V.LONECARET]}\\s+`,!0);o1.caretTrimReplace="$1^";P("CARET",`^${L[V.LONECARET]}${L[V.XRANGEPLAIN]}$`);P("CARETLOOSE",`^${L[V.LONECARET]}${L[V.XRANGEPLAINLOOSE]}$`);P("COMPARATORLOOSE",`^${L[V.GTLT]}\\s*(${L[V.LOOSEPLAIN]})$|^$`);P("COMPARATOR",`^${L[V.GTLT]}\\s*(${L[V.FULLPLAIN]})$|^$`);P("COMPARATORTRIM",`(\\s*)${L[V.GTLT]}\\s*(${L[V.LOOSEPLAIN]}|${L[V.XRANGEPLAIN]})`,!0);o1.comparatorTrimReplace="$1$2$3";P("HYPHENRANGE",`^\\s*(${L[V.XRANGEPLAIN]})\\s+-\\s+(${L[V.XRANGEPLAIN]})\\s*$`);P("HYPHENRANGELOOSE",`^\\s*(${L[V.XRANGEPLAINLOOSE]})\\s+-\\s+(${L[V.XRANGEPLAINLOOSE]})\\s*$`);P("STAR","(<|>)?=?\\s*\\*");P("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$");P("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")});var Zt=y((Bh,U6)=>{var Fl=Object.freeze({loose:!0}),ql=Object.freeze({}),Bl=e=>e?typeof e!="object"?Fl:e:ql;U6.exports=Bl});var xd=y((kh,j6)=>{var H6=/^[0-9]+$/,M6=(e,a)=>{let t=H6.test(e),p=H6.test(a);return t&&p&&(e=+e,a=+a),e===a?0:t&&!p?-1:p&&!t?1:e<a?-1:1},kl=(e,a)=>M6(a,e);j6.exports={compareIdentifiers:M6,rcompareIdentifiers:kl}});var Ee=y((Uh,X6)=>{var Kt=Wa(),{MAX_LENGTH:G6,MAX_SAFE_INTEGER:Yt}=za(),{safeRe:z6,t:W6}=ia(),Ul=Zt(),{compareIdentifiers:ra}=xd(),Cd=class e{constructor(a,t){if(t=Ul(t),a instanceof e){if(a.loose===!!t.loose&&a.includePrerelease===!!t.includePrerelease)return a;a=a.version}else if(typeof a!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof a}".`);if(a.length>G6)throw new TypeError(`version is longer than ${G6} characters`);Kt("SemVer",a,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;let p=a.trim().match(t.loose?z6[W6.LOOSE]:z6[W6.FULL]);if(!p)throw new TypeError(`Invalid Version: ${a}`);if(this.raw=a,this.major=+p[1],this.minor=+p[2],this.patch=+p[3],this.major>Yt||this.major<0)throw new TypeError("Invalid major version");if(this.minor>Yt||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>Yt||this.patch<0)throw new TypeError("Invalid patch version");p[4]?this.prerelease=p[4].split(".").map(d=>{if(/^[0-9]+$/.test(d)){let i=+d;if(i>=0&&i<Yt)return i}return d}):this.prerelease=[],this.build=p[5]?p[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(a){if(Kt("SemVer.compare",this.version,this.options,a),!(a instanceof e)){if(typeof a=="string"&&a===this.version)return 0;a=new e(a,this.options)}return a.version===this.version?0:this.compareMain(a)||this.comparePre(a)}compareMain(a){return a instanceof e||(a=new e(a,this.options)),ra(this.major,a.major)||ra(this.minor,a.minor)||ra(this.patch,a.patch)}comparePre(a){if(a instanceof e||(a=new e(a,this.options)),this.prerelease.length&&!a.prerelease.length)return-1;if(!this.prerelease.length&&a.prerelease.length)return 1;if(!this.prerelease.length&&!a.prerelease.length)return 0;let t=0;do{let p=this.prerelease[t],d=a.prerelease[t];if(Kt("prerelease compare",t,p,d),p===void 0&&d===void 0)return 0;if(d===void 0)return 1;if(p===void 0)return-1;if(p===d)continue;return ra(p,d)}while(++t)}compareBuild(a){a instanceof e||(a=new e(a,this.options));let t=0;do{let p=this.build[t],d=a.build[t];if(Kt("prerelease compare",t,p,d),p===void 0&&d===void 0)return 0;if(d===void 0)return 1;if(p===void 0)return-1;if(p===d)continue;return ra(p,d)}while(++t)}inc(a,t,p){switch(a){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,p);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,p);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,p),this.inc("pre",t,p);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",t,p),this.inc("pre",t,p);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{let d=Number(p)?1:0;if(!t&&p===!1)throw new Error("invalid increment argument: identifier is empty");if(this.prerelease.length===0)this.prerelease=[d];else{let i=this.prerelease.length;for(;--i>=0;)typeof this.prerelease[i]=="number"&&(this.prerelease[i]++,i=-2);if(i===-1){if(t===this.prerelease.join(".")&&p===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(d)}}if(t){let i=[t,d];p===!1&&(i=[t]),ra(this.prerelease[0],t)===0?isNaN(this.prerelease[1])&&(this.prerelease=i):this.prerelease=i}break}default:throw new Error(`invalid increment argument: ${a}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};X6.exports=Cd});var B1=y((Hh,K6)=>{var Z6=Ee(),Hl=(e,a,t=!1)=>{if(e instanceof Z6)return e;try{return new Z6(e,a)}catch(p){if(!t)return null;throw p}};K6.exports=Hl});var Q6=y((Mh,Y6)=>{var Ml=B1(),jl=(e,a)=>{let t=Ml(e,a);return t?t.version:null};Y6.exports=jl});var e4=y((jh,J6)=>{var Gl=B1(),zl=(e,a)=>{let t=Gl(e.trim().replace(/^[=v]+/,""),a);return t?t.version:null};J6.exports=zl});var p4=y((Gh,t4)=>{var a4=Ee(),Wl=(e,a,t,p,d)=>{typeof t=="string"&&(d=p,p=t,t=void 0);try{return new a4(e instanceof a4?e.version:e,t).inc(a,p,d).version}catch{return null}};t4.exports=Wl});var r4=y((zh,i4)=>{var d4=B1(),Xl=(e,a)=>{let t=d4(e,null,!0),p=d4(a,null,!0),d=t.compare(p);if(d===0)return null;let i=d>0,r=i?t:p,s=i?p:t,n=!!r.prerelease.length;if(!!s.prerelease.length&&!n)return!s.patch&&!s.minor?"major":r.patch?"patch":r.minor?"minor":"major";let l=n?"pre":"";return t.major!==p.major?l+"major":t.minor!==p.minor?l+"minor":t.patch!==p.patch?l+"patch":"prerelease"};i4.exports=Xl});var s4=y((Wh,n4)=>{var Zl=Ee(),Kl=(e,a)=>new Zl(e,a).major;n4.exports=Kl});var o4=y((Xh,l4)=>{var Yl=Ee(),Ql=(e,a)=>new Yl(e,a).minor;l4.exports=Ql});var u4=y((Zh,m4)=>{var Jl=Ee(),eo=(e,a)=>new Jl(e,a).patch;m4.exports=eo});var f4=y((Kh,c4)=>{var ao=B1(),to=(e,a)=>{let t=ao(e,a);return t&&t.prerelease.length?t.prerelease:null};c4.exports=to});var Me=y((Yh,v4)=>{var h4=Ee(),po=(e,a,t)=>new h4(e,t).compare(new h4(a,t));v4.exports=po});var w4=y((Qh,g4)=>{var io=Me(),ro=(e,a,t)=>io(a,e,t);g4.exports=ro});var E4=y((Jh,y4)=>{var no=Me(),so=(e,a)=>no(e,a,!0);y4.exports=so});var Qt=y((ev,N4)=>{var S4=Ee(),lo=(e,a,t)=>{let p=new S4(e,t),d=new S4(a,t);return p.compare(d)||p.compareBuild(d)};N4.exports=lo});var b4=y((av,_4)=>{var oo=Qt(),mo=(e,a)=>e.sort((t,p)=>oo(t,p,a));_4.exports=mo});var D4=y((tv,T4)=>{var uo=Qt(),co=(e,a)=>e.sort((t,p)=>uo(p,t,a));T4.exports=co});var Xa=y((pv,A4)=>{var fo=Me(),ho=(e,a,t)=>fo(e,a,t)>0;A4.exports=ho});var Jt=y((dv,x4)=>{var vo=Me(),go=(e,a,t)=>vo(e,a,t)<0;x4.exports=go});var Id=y((iv,C4)=>{var wo=Me(),yo=(e,a,t)=>wo(e,a,t)===0;C4.exports=yo});var Rd=y((rv,I4)=>{var Eo=Me(),So=(e,a,t)=>Eo(e,a,t)!==0;I4.exports=So});var ep=y((nv,R4)=>{var No=Me(),_o=(e,a,t)=>No(e,a,t)>=0;R4.exports=_o});var ap=y((sv,O4)=>{var bo=Me(),To=(e,a,t)=>bo(e,a,t)<=0;O4.exports=To});var Od=y((lv,L4)=>{var Do=Id(),Ao=Rd(),xo=Xa(),Co=ep(),Io=Jt(),Ro=ap(),Oo=(e,a,t,p)=>{switch(a){case"===":return typeof e=="object"&&(e=e.version),typeof t=="object"&&(t=t.version),e===t;case"!==":return typeof e=="object"&&(e=e.version),typeof t=="object"&&(t=t.version),e!==t;case"":case"=":case"==":return Do(e,t,p);case"!=":return Ao(e,t,p);case">":return xo(e,t,p);case">=":return Co(e,t,p);case"<":return Io(e,t,p);case"<=":return Ro(e,t,p);default:throw new TypeError(`Invalid operator: ${a}`)}};L4.exports=Oo});var P4=y((ov,V4)=>{var Lo=Ee(),Vo=B1(),{safeRe:tp,t:pp}=ia(),Po=(e,a)=>{if(e instanceof Lo)return e;if(typeof e=="number"&&(e=String(e)),typeof e!="string")return null;a=a||{};let t=null;if(!a.rtl)t=e.match(tp[pp.COERCE]);else{let p;for(;(p=tp[pp.COERCERTL].exec(e))&&(!t||t.index+t[0].length!==e.length);)(!t||p.index+p[0].length!==t.index+t[0].length)&&(t=p),tp[pp.COERCERTL].lastIndex=p.index+p[1].length+p[2].length;tp[pp.COERCERTL].lastIndex=-1}return t===null?null:Vo(`${t[2]}.${t[3]||"0"}.${t[4]||"0"}`,a)};V4.exports=Po});var F4=y((mv,$4)=>{"use strict";$4.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let a=this.head;a;a=a.next)yield a.value}}});var B4=y((uv,q4)=>{"use strict";q4.exports=M;M.Node=k1;M.create=M;function M(e){var a=this;if(a instanceof M||(a=new M),a.tail=null,a.head=null,a.length=0,e&&typeof e.forEach=="function")e.forEach(function(d){a.push(d)});else if(arguments.length>0)for(var t=0,p=arguments.length;t<p;t++)a.push(arguments[t]);return a}M.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var a=e.next,t=e.prev;return a&&(a.prev=t),t&&(t.next=a),e===this.head&&(this.head=a),e===this.tail&&(this.tail=t),e.list.length--,e.next=null,e.prev=null,e.list=null,a};M.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var a=this.head;e.list=this,e.next=a,a&&(a.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}};M.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var a=this.tail;e.list=this,e.prev=a,a&&(a.next=e),this.tail=e,this.head||(this.head=e),this.length++}};M.prototype.push=function(){for(var e=0,a=arguments.length;e<a;e++)Fo(this,arguments[e]);return this.length};M.prototype.unshift=function(){for(var e=0,a=arguments.length;e<a;e++)qo(this,arguments[e]);return this.length};M.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}};M.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}};M.prototype.forEach=function(e,a){a=a||this;for(var t=this.head,p=0;t!==null;p++)e.call(a,t.value,p,this),t=t.next};M.prototype.forEachReverse=function(e,a){a=a||this;for(var t=this.tail,p=this.length-1;t!==null;p--)e.call(a,t.value,p,this),t=t.prev};M.prototype.get=function(e){for(var a=0,t=this.head;t!==null&&a<e;a++)t=t.next;if(a===e&&t!==null)return t.value};M.prototype.getReverse=function(e){for(var a=0,t=this.tail;t!==null&&a<e;a++)t=t.prev;if(a===e&&t!==null)return t.value};M.prototype.map=function(e,a){a=a||this;for(var t=new M,p=this.head;p!==null;)t.push(e.call(a,p.value,this)),p=p.next;return t};M.prototype.mapReverse=function(e,a){a=a||this;for(var t=new M,p=this.tail;p!==null;)t.push(e.call(a,p.value,this)),p=p.prev;return t};M.prototype.reduce=function(e,a){var t,p=this.head;if(arguments.length>1)t=a;else if(this.head)p=this.head.next,t=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var d=0;p!==null;d++)t=e(t,p.value,d),p=p.next;return t};M.prototype.reduceReverse=function(e,a){var t,p=this.tail;if(arguments.length>1)t=a;else if(this.tail)p=this.tail.prev,t=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var d=this.length-1;p!==null;d--)t=e(t,p.value,d),p=p.prev;return t};M.prototype.toArray=function(){for(var e=new Array(this.length),a=0,t=this.head;t!==null;a++)e[a]=t.value,t=t.next;return e};M.prototype.toArrayReverse=function(){for(var e=new Array(this.length),a=0,t=this.tail;t!==null;a++)e[a]=t.value,t=t.prev;return e};M.prototype.slice=function(e,a){a=a||this.length,a<0&&(a+=this.length),e=e||0,e<0&&(e+=this.length);var t=new M;if(a<e||a<0)return t;e<0&&(e=0),a>this.length&&(a=this.length);for(var p=0,d=this.head;d!==null&&p<e;p++)d=d.next;for(;d!==null&&p<a;p++,d=d.next)t.push(d.value);return t};M.prototype.sliceReverse=function(e,a){a=a||this.length,a<0&&(a+=this.length),e=e||0,e<0&&(e+=this.length);var t=new M;if(a<e||a<0)return t;e<0&&(e=0),a>this.length&&(a=this.length);for(var p=this.length,d=this.tail;d!==null&&p>a;p--)d=d.prev;for(;d!==null&&p>e;p--,d=d.prev)t.push(d.value);return t};M.prototype.splice=function(e,a,...t){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var p=0,d=this.head;d!==null&&p<e;p++)d=d.next;for(var i=[],p=0;d&&p<a;p++)i.push(d.value),d=this.removeNode(d);d===null&&(d=this.tail),d!==this.head&&d!==this.tail&&(d=d.prev);for(var p=0;p<t.length;p++)d=$o(this,d,t[p]);return i};M.prototype.reverse=function(){for(var e=this.head,a=this.tail,t=e;t!==null;t=t.prev){var p=t.prev;t.prev=t.next,t.next=p}return this.head=a,this.tail=e,this};function $o(e,a,t){var p=a===e.head?new k1(t,null,a,e):new k1(t,a,a.next,e);return p.next===null&&(e.tail=p),p.prev===null&&(e.head=p),e.length++,p}function Fo(e,a){e.tail=new k1(a,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function qo(e,a){e.head=new k1(a,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function k1(e,a,t,p){if(!(this instanceof k1))return new k1(e,a,t,p);this.list=p,this.value=e,a?(a.next=this,this.prev=a):this.prev=null,t?(t.prev=this,this.next=t):this.next=null}try{F4()(M)}catch{}});var j4=y((cv,M4)=>{"use strict";var Bo=B4(),U1=Symbol("max"),u1=Symbol("length"),na=Symbol("lengthCalculator"),Ka=Symbol("allowStale"),H1=Symbol("maxAge"),m1=Symbol("dispose"),k4=Symbol("noDisposeOnSet"),ue=Symbol("lruList"),Ze=Symbol("cache"),H4=Symbol("updateAgeOnGet"),Ld=()=>1,Pd=class{constructor(a){if(typeof a=="number"&&(a={max:a}),a||(a={}),a.max&&(typeof a.max!="number"||a.max<0))throw new TypeError("max must be a non-negative number");let t=this[U1]=a.max||1/0,p=a.length||Ld;if(this[na]=typeof p!="function"?Ld:p,this[Ka]=a.stale||!1,a.maxAge&&typeof a.maxAge!="number")throw new TypeError("maxAge must be a number");this[H1]=a.maxAge||0,this[m1]=a.dispose,this[k4]=a.noDisposeOnSet||!1,this[H4]=a.updateAgeOnGet||!1,this.reset()}set max(a){if(typeof a!="number"||a<0)throw new TypeError("max must be a non-negative number");this[U1]=a||1/0,Za(this)}get max(){return this[U1]}set allowStale(a){this[Ka]=!!a}get allowStale(){return this[Ka]}set maxAge(a){if(typeof a!="number")throw new TypeError("maxAge must be a non-negative number");this[H1]=a,Za(this)}get maxAge(){return this[H1]}set lengthCalculator(a){typeof a!="function"&&(a=Ld),a!==this[na]&&(this[na]=a,this[u1]=0,this[ue].forEach(t=>{t.length=this[na](t.value,t.key),this[u1]+=t.length})),Za(this)}get lengthCalculator(){return this[na]}get length(){return this[u1]}get itemCount(){return this[ue].length}rforEach(a,t){t=t||this;for(let p=this[ue].tail;p!==null;){let d=p.prev;U4(this,a,p,t),p=d}}forEach(a,t){t=t||this;for(let p=this[ue].head;p!==null;){let d=p.next;U4(this,a,p,t),p=d}}keys(){return this[ue].toArray().map(a=>a.key)}values(){return this[ue].toArray().map(a=>a.value)}reset(){this[m1]&&this[ue]&&this[ue].length&&this[ue].forEach(a=>this[m1](a.key,a.value)),this[Ze]=new Map,this[ue]=new Bo,this[u1]=0}dump(){return this[ue].map(a=>dp(this,a)?!1:{k:a.key,v:a.value,e:a.now+(a.maxAge||0)}).toArray().filter(a=>a)}dumpLru(){return this[ue]}set(a,t,p){if(p=p||this[H1],p&&typeof p!="number")throw new TypeError("maxAge must be a number");let d=p?Date.now():0,i=this[na](t,a);if(this[Ze].has(a)){if(i>this[U1])return sa(this,this[Ze].get(a)),!1;let n=this[Ze].get(a).value;return this[m1]&&(this[k4]||this[m1](a,n.value)),n.now=d,n.maxAge=p,n.value=t,this[u1]+=i-n.length,n.length=i,this.get(a),Za(this),!0}let r=new $d(a,t,i,d,p);return r.length>this[U1]?(this[m1]&&this[m1](a,t),!1):(this[u1]+=r.length,this[ue].unshift(r),this[Ze].set(a,this[ue].head),Za(this),!0)}has(a){if(!this[Ze].has(a))return!1;let t=this[Ze].get(a).value;return!dp(this,t)}get(a){return Vd(this,a,!0)}peek(a){return Vd(this,a,!1)}pop(){let a=this[ue].tail;return a?(sa(this,a),a.value):null}del(a){sa(this,this[Ze].get(a))}load(a){this.reset();let t=Date.now();for(let p=a.length-1;p>=0;p--){let d=a[p],i=d.e||0;if(i===0)this.set(d.k,d.v);else{let r=i-t;r>0&&this.set(d.k,d.v,r)}}}prune(){this[Ze].forEach((a,t)=>Vd(this,t,!1))}},Vd=(e,a,t)=>{let p=e[Ze].get(a);if(p){let d=p.value;if(dp(e,d)){if(sa(e,p),!e[Ka])return}else t&&(e[H4]&&(p.value.now=Date.now()),e[ue].unshiftNode(p));return d.value}},dp=(e,a)=>{if(!a||!a.maxAge&&!e[H1])return!1;let t=Date.now()-a.now;return a.maxAge?t>a.maxAge:e[H1]&&t>e[H1]},Za=e=>{if(e[u1]>e[U1])for(let a=e[ue].tail;e[u1]>e[U1]&&a!==null;){let t=a.prev;sa(e,a),a=t}},sa=(e,a)=>{if(a){let t=a.value;e[m1]&&e[m1](t.key,t.value),e[u1]-=t.length,e[Ze].delete(t.key),e[ue].removeNode(a)}},$d=class{constructor(a,t,p,d,i){this.key=a,this.value=t,this.length=p,this.now=d,this.maxAge=i||0}},U4=(e,a,t,p)=>{let d=t.value;dp(e,d)&&(sa(e,t),e[Ka]||(d=void 0)),d&&a.call(p,d.value,d.key,e)};M4.exports=Pd});var je=y((fv,X4)=>{var Fd=class e{constructor(a,t){if(t=Uo(t),a instanceof e)return a.loose===!!t.loose&&a.includePrerelease===!!t.includePrerelease?a:new e(a.raw,t);if(a instanceof qd)return this.raw=a.value,this.set=[[a]],this.format(),this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=a.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map(p=>this.parseRange(p.trim())).filter(p=>p.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){let p=this.set[0];if(this.set=this.set.filter(d=>!z4(d[0])),this.set.length===0)this.set=[p];else if(this.set.length>1){for(let d of this.set)if(d.length===1&&Xo(d[0])){this.set=[d];break}}}this.format()}format(){return this.range=this.set.map(a=>a.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(a){let p=((this.options.includePrerelease&&zo)|(this.options.loose&&Wo))+":"+a,d=G4.get(p);if(d)return d;let i=this.options.loose,r=i?Ce[be.HYPHENRANGELOOSE]:Ce[be.HYPHENRANGE];a=a.replace(r,d7(this.options.includePrerelease)),Z("hyphen replace",a),a=a.replace(Ce[be.COMPARATORTRIM],Mo),Z("comparator trim",a),a=a.replace(Ce[be.TILDETRIM],jo),Z("tilde trim",a),a=a.replace(Ce[be.CARETTRIM],Go),Z("caret trim",a);let s=a.split(" ").map(u=>Zo(u,this.options)).join(" ").split(/\s+/).map(u=>p7(u,this.options));i&&(s=s.filter(u=>(Z("loose invalid filter",u,this.options),!!u.match(Ce[be.COMPARATORLOOSE])))),Z("range list",s);let n=new Map,o=s.map(u=>new qd(u,this.options));for(let u of o){if(z4(u))return[u];n.set(u.value,u)}n.size>1&&n.has("")&&n.delete("");let l=[...n.values()];return G4.set(p,l),l}intersects(a,t){if(!(a instanceof e))throw new TypeError("a Range is required");return this.set.some(p=>W4(p,t)&&a.set.some(d=>W4(d,t)&&p.every(i=>d.every(r=>i.intersects(r,t)))))}test(a){if(!a)return!1;if(typeof a=="string")try{a=new Ho(a,this.options)}catch{return!1}for(let t=0;t<this.set.length;t++)if(i7(this.set[t],a,this.options))return!0;return!1}};X4.exports=Fd;var ko=j4(),G4=new ko({max:1e3}),Uo=Zt(),qd=Ya(),Z=Wa(),Ho=Ee(),{safeRe:Ce,t:be,comparatorTrimReplace:Mo,tildeTrimReplace:jo,caretTrimReplace:Go}=ia(),{FLAG_INCLUDE_PRERELEASE:zo,FLAG_LOOSE:Wo}=za(),z4=e=>e.value==="<0.0.0-0",Xo=e=>e.value==="",W4=(e,a)=>{let t=!0,p=e.slice(),d=p.pop();for(;t&&p.length;)t=p.every(i=>d.intersects(i,a)),d=p.pop();return t},Zo=(e,a)=>(Z("comp",e,a),e=Qo(e,a),Z("caret",e),e=Ko(e,a),Z("tildes",e),e=e7(e,a),Z("xrange",e),e=t7(e,a),Z("stars",e),e),Te=e=>!e||e.toLowerCase()==="x"||e==="*",Ko=(e,a)=>e.trim().split(/\s+/).map(t=>Yo(t,a)).join(" "),Yo=(e,a)=>{let t=a.loose?Ce[be.TILDELOOSE]:Ce[be.TILDE];return e.replace(t,(p,d,i,r,s)=>{Z("tilde",e,p,d,i,r,s);let n;return Te(d)?n="":Te(i)?n=`>=${d}.0.0 <${+d+1}.0.0-0`:Te(r)?n=`>=${d}.${i}.0 <${d}.${+i+1}.0-0`:s?(Z("replaceTilde pr",s),n=`>=${d}.${i}.${r}-${s} <${d}.${+i+1}.0-0`):n=`>=${d}.${i}.${r} <${d}.${+i+1}.0-0`,Z("tilde return",n),n})},Qo=(e,a)=>e.trim().split(/\s+/).map(t=>Jo(t,a)).join(" "),Jo=(e,a)=>{Z("caret",e,a);let t=a.loose?Ce[be.CARETLOOSE]:Ce[be.CARET],p=a.includePrerelease?"-0":"";return e.replace(t,(d,i,r,s,n)=>{Z("caret",e,d,i,r,s,n);let o;return Te(i)?o="":Te(r)?o=`>=${i}.0.0${p} <${+i+1}.0.0-0`:Te(s)?i==="0"?o=`>=${i}.${r}.0${p} <${i}.${+r+1}.0-0`:o=`>=${i}.${r}.0${p} <${+i+1}.0.0-0`:n?(Z("replaceCaret pr",n),i==="0"?r==="0"?o=`>=${i}.${r}.${s}-${n} <${i}.${r}.${+s+1}-0`:o=`>=${i}.${r}.${s}-${n} <${i}.${+r+1}.0-0`:o=`>=${i}.${r}.${s}-${n} <${+i+1}.0.0-0`):(Z("no pr"),i==="0"?r==="0"?o=`>=${i}.${r}.${s}${p} <${i}.${r}.${+s+1}-0`:o=`>=${i}.${r}.${s}${p} <${i}.${+r+1}.0-0`:o=`>=${i}.${r}.${s} <${+i+1}.0.0-0`),Z("caret return",o),o})},e7=(e,a)=>(Z("replaceXRanges",e,a),e.split(/\s+/).map(t=>a7(t,a)).join(" ")),a7=(e,a)=>{e=e.trim();let t=a.loose?Ce[be.XRANGELOOSE]:Ce[be.XRANGE];return e.replace(t,(p,d,i,r,s,n)=>{Z("xRange",e,p,d,i,r,s,n);let o=Te(i),l=o||Te(r),u=l||Te(s),f=u;return d==="="&&f&&(d=""),n=a.includePrerelease?"-0":"",o?d===">"||d==="<"?p="<0.0.0-0":p="*":d&&f?(l&&(r=0),s=0,d===">"?(d=">=",l?(i=+i+1,r=0,s=0):(r=+r+1,s=0)):d==="<="&&(d="<",l?i=+i+1:r=+r+1),d==="<"&&(n="-0"),p=`${d+i}.${r}.${s}${n}`):l?p=`>=${i}.0.0${n} <${+i+1}.0.0-0`:u&&(p=`>=${i}.${r}.0${n} <${i}.${+r+1}.0-0`),Z("xRange return",p),p})},t7=(e,a)=>(Z("replaceStars",e,a),e.trim().replace(Ce[be.STAR],"")),p7=(e,a)=>(Z("replaceGTE0",e,a),e.trim().replace(Ce[a.includePrerelease?be.GTE0PRE:be.GTE0],"")),d7=e=>(a,t,p,d,i,r,s,n,o,l,u,f,c)=>(Te(p)?t="":Te(d)?t=`>=${p}.0.0${e?"-0":""}`:Te(i)?t=`>=${p}.${d}.0${e?"-0":""}`:r?t=`>=${t}`:t=`>=${t}${e?"-0":""}`,Te(o)?n="":Te(l)?n=`<${+o+1}.0.0-0`:Te(u)?n=`<${o}.${+l+1}.0-0`:f?n=`<=${o}.${l}.${u}-${f}`:e?n=`<${o}.${l}.${+u+1}-0`:n=`<=${n}`,`${t} ${n}`.trim()),i7=(e,a,t)=>{for(let p=0;p<e.length;p++)if(!e[p].test(a))return!1;if(a.prerelease.length&&!t.includePrerelease){for(let p=0;p<e.length;p++)if(Z(e[p].semver),e[p].semver!==qd.ANY&&e[p].semver.prerelease.length>0){let d=e[p].semver;if(d.major===a.major&&d.minor===a.minor&&d.patch===a.patch)return!0}return!1}return!0}});var Ya=y((hv,en)=>{var Qa=Symbol("SemVer ANY"),Ud=class e{static get ANY(){return Qa}constructor(a,t){if(t=Z4(t),a instanceof e){if(a.loose===!!t.loose)return a;a=a.value}a=a.trim().split(/\s+/).join(" "),kd("comparator",a,t),this.options=t,this.loose=!!t.loose,this.parse(a),this.semver===Qa?this.value="":this.value=this.operator+this.semver.version,kd("comp",this)}parse(a){let t=this.options.loose?K4[Y4.COMPARATORLOOSE]:K4[Y4.COMPARATOR],p=a.match(t);if(!p)throw new TypeError(`Invalid comparator: ${a}`);this.operator=p[1]!==void 0?p[1]:"",this.operator==="="&&(this.operator=""),p[2]?this.semver=new Q4(p[2],this.options.loose):this.semver=Qa}toString(){return this.value}test(a){if(kd("Comparator.test",a,this.options.loose),this.semver===Qa||a===Qa)return!0;if(typeof a=="string")try{a=new Q4(a,this.options)}catch{return!1}return Bd(a,this.operator,this.semver,this.options)}intersects(a,t){if(!(a instanceof e))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new J4(a.value,t).test(this.value):a.operator===""?a.value===""?!0:new J4(this.value,t).test(a.semver):(t=Z4(t),t.includePrerelease&&(this.value==="<0.0.0-0"||a.value==="<0.0.0-0")||!t.includePrerelease&&(this.value.startsWith("<0.0.0")||a.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&a.operator.startsWith(">")||this.operator.startsWith("<")&&a.operator.startsWith("<")||this.semver.version===a.semver.version&&this.operator.includes("=")&&a.operator.includes("=")||Bd(this.semver,"<",a.semver,t)&&this.operator.startsWith(">")&&a.operator.startsWith("<")||Bd(this.semver,">",a.semver,t)&&this.operator.startsWith("<")&&a.operator.startsWith(">")))}};en.exports=Ud;var Z4=Zt(),{safeRe:K4,t:Y4}=ia(),Bd=Od(),kd=Wa(),Q4=Ee(),J4=je()});var Ja=y((vv,an)=>{var r7=je(),n7=(e,a,t)=>{try{a=new r7(a,t)}catch{return!1}return a.test(e)};an.exports=n7});var pn=y((gv,tn)=>{var s7=je(),l7=(e,a)=>new s7(e,a).set.map(t=>t.map(p=>p.value).join(" ").trim().split(" "));tn.exports=l7});var rn=y((wv,dn)=>{var o7=Ee(),m7=je(),u7=(e,a,t)=>{let p=null,d=null,i=null;try{i=new m7(a,t)}catch{return null}return e.forEach(r=>{i.test(r)&&(!p||d.compare(r)===-1)&&(p=r,d=new o7(p,t))}),p};dn.exports=u7});var sn=y((yv,nn)=>{var c7=Ee(),f7=je(),h7=(e,a,t)=>{let p=null,d=null,i=null;try{i=new f7(a,t)}catch{return null}return e.forEach(r=>{i.test(r)&&(!p||d.compare(r)===1)&&(p=r,d=new c7(p,t))}),p};nn.exports=h7});var mn=y((Ev,on)=>{var Hd=Ee(),v7=je(),ln=Xa(),g7=(e,a)=>{e=new v7(e,a);let t=new Hd("0.0.0");if(e.test(t)||(t=new Hd("0.0.0-0"),e.test(t)))return t;t=null;for(let p=0;p<e.set.length;++p){let d=e.set[p],i=null;d.forEach(r=>{let s=new Hd(r.semver.version);switch(r.operator){case">":s.prerelease.length===0?s.patch++:s.prerelease.push(0),s.raw=s.format();case"":case">=":(!i||ln(s,i))&&(i=s);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${r.operator}`)}}),i&&(!t||ln(t,i))&&(t=i)}return t&&e.test(t)?t:null};on.exports=g7});var cn=y((Sv,un)=>{var w7=je(),y7=(e,a)=>{try{return new w7(e,a).range||"*"}catch{return null}};un.exports=y7});var ip=y((Nv,gn)=>{var E7=Ee(),vn=Ya(),{ANY:S7}=vn,N7=je(),_7=Ja(),fn=Xa(),hn=Jt(),b7=ap(),T7=ep(),D7=(e,a,t,p)=>{e=new E7(e,p),a=new N7(a,p);let d,i,r,s,n;switch(t){case">":d=fn,i=b7,r=hn,s=">",n=">=";break;case"<":d=hn,i=T7,r=fn,s="<",n="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(_7(e,a,p))return!1;for(let o=0;o<a.set.length;++o){let l=a.set[o],u=null,f=null;if(l.forEach(c=>{c.semver===S7&&(c=new vn(">=0.0.0")),u=u||c,f=f||c,d(c.semver,u.semver,p)?u=c:r(c.semver,f.semver,p)&&(f=c)}),u.operator===s||u.operator===n||(!f.operator||f.operator===s)&&i(e,f.semver))return!1;if(f.operator===n&&r(e,f.semver))return!1}return!0};gn.exports=D7});var yn=y((_v,wn)=>{var A7=ip(),x7=(e,a,t)=>A7(e,a,">",t);wn.exports=x7});var Sn=y((bv,En)=>{var C7=ip(),I7=(e,a,t)=>C7(e,a,"<",t);En.exports=I7});var bn=y((Tv,_n)=>{var Nn=je(),R7=(e,a,t)=>(e=new Nn(e,t),a=new Nn(a,t),e.intersects(a,t));_n.exports=R7});var Dn=y((Dv,Tn)=>{var O7=Ja(),L7=Me();Tn.exports=(e,a,t)=>{let p=[],d=null,i=null,r=e.sort((l,u)=>L7(l,u,t));for(let l of r)O7(l,a,t)?(i=l,d||(d=l)):(i&&p.push([d,i]),i=null,d=null);d&&p.push([d,null]);let s=[];for(let[l,u]of p)l===u?s.push(l):!u&&l===r[0]?s.push("*"):u?l===r[0]?s.push(`<=${u}`):s.push(`${l} - ${u}`):s.push(`>=${l}`);let n=s.join(" || "),o=typeof a.raw=="string"?a.raw:String(a);return n.length<o.length?n:a}});var On=y((Av,Rn)=>{var An=je(),jd=Ya(),{ANY:Md}=jd,et=Ja(),Gd=Me(),V7=(e,a,t={})=>{if(e===a)return!0;e=new An(e,t),a=new An(a,t);let p=!1;e:for(let d of e.set){for(let i of a.set){let r=$7(d,i,t);if(p=p||r!==null,r)continue e}if(p)return!1}return!0},P7=[new jd(">=0.0.0-0")],xn=[new jd(">=0.0.0")],$7=(e,a,t)=>{if(e===a)return!0;if(e.length===1&&e[0].semver===Md){if(a.length===1&&a[0].semver===Md)return!0;t.includePrerelease?e=P7:e=xn}if(a.length===1&&a[0].semver===Md){if(t.includePrerelease)return!0;a=xn}let p=new Set,d,i;for(let c of e)c.operator===">"||c.operator===">="?d=Cn(d,c,t):c.operator==="<"||c.operator==="<="?i=In(i,c,t):p.add(c.semver);if(p.size>1)return null;let r;if(d&&i){if(r=Gd(d.semver,i.semver,t),r>0)return null;if(r===0&&(d.operator!==">="||i.operator!=="<="))return null}for(let c of p){if(d&&!et(c,String(d),t)||i&&!et(c,String(i),t))return null;for(let m of a)if(!et(c,String(m),t))return!1;return!0}let s,n,o,l,u=i&&!t.includePrerelease&&i.semver.prerelease.length?i.semver:!1,f=d&&!t.includePrerelease&&d.semver.prerelease.length?d.semver:!1;u&&u.prerelease.length===1&&i.operator==="<"&&u.prerelease[0]===0&&(u=!1);for(let c of a){if(l=l||c.operator===">"||c.operator===">=",o=o||c.operator==="<"||c.operator==="<=",d){if(f&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===f.major&&c.semver.minor===f.minor&&c.semver.patch===f.patch&&(f=!1),c.operator===">"||c.operator===">="){if(s=Cn(d,c,t),s===c&&s!==d)return!1}else if(d.operator===">="&&!et(d.semver,String(c),t))return!1}if(i){if(u&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===u.major&&c.semver.minor===u.minor&&c.semver.patch===u.patch&&(u=!1),c.operator==="<"||c.operator==="<="){if(n=In(i,c,t),n===c&&n!==i)return!1}else if(i.operator==="<="&&!et(i.semver,String(c),t))return!1}if(!c.operator&&(i||d)&&r!==0)return!1}return!(d&&o&&!i&&r!==0||i&&l&&!d&&r!==0||f||u)},Cn=(e,a,t)=>{if(!e)return a;let p=Gd(e.semver,a.semver,t);return p>0?e:p<0||a.operator===">"&&e.operator===">="?a:e},In=(e,a,t)=>{if(!e)return a;let p=Gd(e.semver,a.semver,t);return p<0?e:p>0||a.operator==="<"&&e.operator==="<="?a:e};Rn.exports=V7});var $n=y((xv,Pn)=>{var zd=ia(),Ln=za(),F7=Ee(),Vn=xd(),q7=B1(),B7=Q6(),k7=e4(),U7=p4(),H7=r4(),M7=s4(),j7=o4(),G7=u4(),z7=f4(),W7=Me(),X7=w4(),Z7=E4(),K7=Qt(),Y7=b4(),Q7=D4(),J7=Xa(),em=Jt(),am=Id(),tm=Rd(),pm=ep(),dm=ap(),im=Od(),rm=P4(),nm=Ya(),sm=je(),lm=Ja(),om=pn(),mm=rn(),um=sn(),cm=mn(),fm=cn(),hm=ip(),vm=yn(),gm=Sn(),wm=bn(),ym=Dn(),Em=On();Pn.exports={parse:q7,valid:B7,clean:k7,inc:U7,diff:H7,major:M7,minor:j7,patch:G7,prerelease:z7,compare:W7,rcompare:X7,compareLoose:Z7,compareBuild:K7,sort:Y7,rsort:Q7,gt:J7,lt:em,eq:am,neq:tm,gte:pm,lte:dm,cmp:im,coerce:rm,Comparator:nm,Range:sm,satisfies:lm,toComparators:om,maxSatisfying:mm,minSatisfying:um,minVersion:cm,validRange:fm,outside:hm,gtr:vm,ltr:gm,intersects:wm,simplifyRange:ym,subset:Em,SemVer:F7,re:zd.re,src:zd.src,tokens:zd.t,SEMVER_SPEC_VERSION:Ln.SEMVER_SPEC_VERSION,RELEASE_TYPES:Ln.RELEASE_TYPES,compareIdentifiers:Vn.compareIdentifiers,rcompareIdentifiers:Vn.rcompareIdentifiers}});var Un=y((Cv,kn)=>{kn.exports=Bn;Bn.sync=Nm;var Fn=require("fs");function Sm(e,a){var t=a.pathExt!==void 0?a.pathExt:process.env.PATHEXT;if(!t||(t=t.split(";"),t.indexOf("")!==-1))return!0;for(var p=0;p<t.length;p++){var d=t[p].toLowerCase();if(d&&e.substr(-d.length).toLowerCase()===d)return!0}return!1}function qn(e,a,t){return!e.isSymbolicLink()&&!e.isFile()?!1:Sm(a,t)}function Bn(e,a,t){Fn.stat(e,function(p,d){t(p,p?!1:qn(d,e,a))})}function Nm(e,a){return qn(Fn.statSync(e),e,a)}});var zn=y((Iv,Gn)=>{Gn.exports=Mn;Mn.sync=_m;var Hn=require("fs");function Mn(e,a,t){Hn.stat(e,function(p,d){t(p,p?!1:jn(d,a))})}function _m(e,a){return jn(Hn.statSync(e),a)}function jn(e,a){return e.isFile()&&bm(e,a)}function bm(e,a){var t=e.mode,p=e.uid,d=e.gid,i=a.uid!==void 0?a.uid:process.getuid&&process.getuid(),r=a.gid!==void 0?a.gid:process.getgid&&process.getgid(),s=parseInt("100",8),n=parseInt("010",8),o=parseInt("001",8),l=s|n,u=t&o||t&n&&d===r||t&s&&p===i||t&l&&i===0;return u}});var Xn=y((Ov,Wn)=>{var Rv=require("fs"),rp;process.platform==="win32"||global.TESTING_WINDOWS?rp=Un():rp=zn();Wn.exports=Wd;Wd.sync=Tm;function Wd(e,a,t){if(typeof a=="function"&&(t=a,a={}),!t){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(p,d){Wd(e,a||{},function(i,r){i?d(i):p(r)})})}rp(e,a||{},function(p,d){p&&(p.code==="EACCES"||a&&a.ignoreErrors)&&(p=null,d=!1),t(p,d)})}function Tm(e,a){try{return rp.sync(e,a||{})}catch(t){if(a&&a.ignoreErrors||t.code==="EACCES")return!1;throw t}}});var as=y((Lv,es)=>{var la=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",Zn=require("path"),Dm=la?";":":",Kn=Xn(),Yn=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"}),Qn=(e,a)=>{let t=a.colon||Dm,p=e.match(/\//)||la&&e.match(/\\/)?[""]:[...la?[process.cwd()]:[],...(a.path||process.env.PATH||"").split(t)],d=la?a.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",i=la?d.split(t):[""];return la&&e.indexOf(".")!==-1&&i[0]!==""&&i.unshift(""),{pathEnv:p,pathExt:i,pathExtExe:d}},Jn=(e,a,t)=>{typeof a=="function"&&(t=a,a={}),a||(a={});let{pathEnv:p,pathExt:d,pathExtExe:i}=Qn(e,a),r=[],s=o=>new Promise((l,u)=>{if(o===p.length)return a.all&&r.length?l(r):u(Yn(e));let f=p[o],c=/^".*"$/.test(f)?f.slice(1,-1):f,m=Zn.join(c,e),h=!c&&/^\.[\\\/]/.test(e)?e.slice(0,2)+m:m;l(n(h,o,0))}),n=(o,l,u)=>new Promise((f,c)=>{if(u===d.length)return f(s(l+1));let m=d[u];Kn(o+m,{pathExt:i},(h,g)=>{if(!h&&g)if(a.all)r.push(o+m);else return f(o+m);return f(n(o,l,u+1))})});return t?s(0).then(o=>t(null,o),t):s(0)},Am=(e,a)=>{a=a||{};let{pathEnv:t,pathExt:p,pathExtExe:d}=Qn(e,a),i=[];for(let r=0;r<t.length;r++){let s=t[r],n=/^".*"$/.test(s)?s.slice(1,-1):s,o=Zn.join(n,e),l=!n&&/^\.[\\\/]/.test(e)?e.slice(0,2)+o:o;for(let u=0;u<p.length;u++){let f=l+p[u];try{if(Kn.sync(f,{pathExt:d}))if(a.all)i.push(f);else return f}catch{}}}if(a.all&&i.length)return i;if(a.nothrow)return null;throw Yn(e)};es.exports=Jn;Jn.sync=Am});var ss=y(Ke=>{"use strict";var Ie=Ke&&Ke.__awaiter||function(e,a,t,p){function d(i){return i instanceof t?i:new t(function(r){r(i)})}return new(t||(t=Promise))(function(i,r){function s(l){try{o(p.next(l))}catch(u){r(u)}}function n(l){try{o(p.throw(l))}catch(u){r(u)}}function o(l){l.done?i(l.value):d(l.value).then(s,n)}o((p=p.apply(e,a||[])).next())})},xm=Ke&&Ke.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=e[Symbol.asyncIterator],t;return a?a.call(e):(e=typeof __values=="function"?__values(e):e[Symbol.iterator](),t={},p("next"),p("throw"),p("return"),t[Symbol.asyncIterator]=function(){return this},t);function p(i){t[i]=e[i]&&function(r){return new Promise(function(s,n){r=e[i](r),d(s,n,r.done,r.value)})}}function d(i,r,s,n){Promise.resolve(n).then(function(o){i({value:o,done:s})},r)}};Object.defineProperty(Ke,"__esModule",{value:!0});var ts=Yi(),Cm=Ar(),Im=require("child_process"),M1=require("fs"),ps=(m0(),Ai(o0)),oa=require("os"),c1=require("path"),Rm=B0(),Om=F6(),p1=$n(),Lm=require("stream"),at=require("util"),Vm=as();function Pm(e,a){return Ie(this,void 0,void 0,function*(){let t=e.clangdPath;try{c1.isAbsolute(t)?yield at.promisify(M1.access)(t):t=yield at.promisify(Vm)(t)}catch{return{clangdPath:null,background:Fm(e)}}return{clangdPath:t,background:a?ds(!1,e):Promise.resolve()}})}Ke.prepare=Pm;function $m(e){return Ie(this,void 0,void 0,function*(){let a=new ts.AbortController;try{let t=yield C1.latestRelease(),p=yield C1.chooseAsset(t);e.clangdPath=yield Xd.install(t,p,a,e),e.promptReload(`clangd ${t.name} is now installed.`)}catch(t){if(!a.signal.aborted){console.error("Failed to install clangd: ",t);let p=`Failed to install clangd language server: ${t}
You may want to install it manually.`;e.showHelp(p,is)}}})}Ke.installLatest=$m;function ds(e,a){return Ie(this,void 0,void 0,function*(){try{var t=yield C1.latestRelease();yield C1.chooseAsset(t);var p=yield np.upgrade(t,a.clangdPath)}catch(d){console.log("Failed to check for clangd update: ",d),e&&a.error(`Failed to check for clangd update: ${d}`);return}if(console.log("Checking for clangd update: available=",p.new," installed=",p.old),!p.upgrade){e&&a.info(`clangd is up-to-date (you have ${p.old}, latest is ${p.new})`);return}a.promptUpdate(p.old,p.new)})}Ke.checkUpdates=ds;function Fm(e){return Ie(this,void 0,void 0,function*(){try{let a=yield C1.latestRelease();yield C1.chooseAsset(a),e.promptInstall(a.name)}catch(a){console.error("Auto-install failed: ",a),e.showHelp("The clangd language server is not installed.",is)}})}var is="https://clangd.llvm.org/installation.html",rs="https://api.github.com/repos/clangd/clangd/releases/latest";function qm(e){rs=e}Ke.fakeGitHubReleaseURL=qm;var ns="ldd";function Bm(e){ns=e}Ke.fakeLddCommand=Bm;var C1;(function(e){function a(){return Ie(this,void 0,void 0,function*(){let p=new ts.AbortController,d=setTimeout(()=>{p.abort()},5e3);try{let i=yield ps.default(rs,{signal:p.signal});if(!i.ok)throw console.log(i.url,i.status,i.statusText),new Error(`Can't fetch release: ${i.statusText}`);return yield i.json()}finally{clearTimeout(d)}})}e.latestRelease=a;function t(p){return Ie(this,void 0,void 0,function*(){let i={win32:"windows",linux:"linux",darwin:"mac"}[oa.platform()];if(i=="linux"){let r=new p1.Range("2.18"),s=yield np.oldGlibc(r);if(s)throw new Error(`The clangd release is not compatible with your system (glibc ${s.raw} < ${r.raw}). Try to install it using your package manager instead.`)}if(i&&(oa.arch()=="x64"||i=="windows"||oa.arch()=="arm64"&&i=="mac")){let r="clangd-"+i,s=p.assets.find(n=>n.name.indexOf(r)>=0);if(s)return s}throw new Error(`No clangd ${p.name} binary available for ${oa.platform()}/${oa.arch()}`)})}e.chooseAsset=t})(C1||(C1={}));var Xd;(function(e){function a(i,r,s,n){return Ie(this,void 0,void 0,function*(){let o=yield t(n),l=c1.join(o.install,i.tag_name);if(yield at.promisify(M1.exists)(l)){let h=yield n.shouldReuse(i.name);if(h===void 0)throw s.abort(),new Error(`clangd ${i.name} already installed!`);if(h){let g=(yield Rm.promise(l)).map(v=>v.fullPath);return p(g)}else yield at.promisify(Om)(l)}let u=c1.join(o.download,r.name);yield d(r.browser_download_url,u,s,n);let f=new Cm(u);yield n.slow(`Extracting ${r.name}`,new Promise(h=>{f.extractAllToAsync(l,!0,!1,h)}));let c=p(f.getEntries().map(h=>h.entryName)),m=c1.join(l,c);return yield M1.promises.chmod(m,493),yield M1.promises.unlink(u),m})}e.install=a;function t(i){return Ie(this,void 0,void 0,function*(){let r=c1.join(i.storagePath,"install"),s=c1.join(i.storagePath,"download");for(let n of[r,s])yield M1.promises.mkdir(n,{recursive:!0});return{install:r,download:s}})}function p(i){let r=oa.platform()=="win32"?"clangd.exe":"clangd",s=i.find(n=>c1.posix.basename(n)==r||c1.win32.basename(n)==r);if(s==null)throw new Error("Didn't find a clangd executable!");return s}function d(i,r,s,n){return Ie(this,void 0,void 0,function*(){return console.log("Downloading ",i," to ",r),n.progress(`Downloading ${c1.basename(r)}`,s,o=>Ie(this,void 0,void 0,function*(){let l=yield ps.default(i,{signal:s.signal});if(!l.ok)throw new Error(`Failed to download ${i}`);let u=Number(l.headers.get("content-length")),f=0;l.body.on("data",m=>{f+=m.length,o(f/u)});let c=M1.createWriteStream(r);yield at.promisify(Lm.pipeline)(l.body,c).catch(m=>{throw M1.unlink(r,h=>null),m})}))})}})(Xd||(Xd={}));var np;(function(e){function a(n,o){return Ie(this,void 0,void 0,function*(){let l=d(n),u=yield p(o);return{old:u.raw,new:l.raw,upgrade:s(l,u)}})}e.upgrade=a;let t={loose:!0};function p(n){return Ie(this,void 0,void 0,function*(){let o=yield r(n,["--version"]);console.log(n," --version output: ",o);let l="clangd version ",u=o.indexOf(l);if(u<0)throw new Error(`Couldn't parse clangd --version output: ${o}`);if(u>0&&o.substring(0,u).trim()=="Apple")throw new Error(`Cannot compare vendor's clangd version: ${o}`);let f=o.substr(u+l.length).split(/\s|~/,1)[0];return new p1.Range(f,t)})}function d(n){return!p1.validRange(n.tag_name,t)&&p1.validRange(n.name,t)?new p1.Range(n.name,t):new p1.Range(n.tag_name,t)}function i(n){return Ie(this,void 0,void 0,function*(){let l=(yield r(ns,["--version"])).split(`
`,1)[0],u=l.match(/^ldd .*glibc.* (\d+(?:\.\d+)+)[^ ]*$/i);if(!u||!p1.validRange(u[1],t))return console.error(`Can't glibc version from ldd --version output: ${l}`),null;let f=new p1.Range(u[1],t);return console.log("glibc is",f.raw,"min is",n.raw),s(n,f)?f:null})}e.oldGlibc=i;function r(n,o){var l,u;return Ie(this,void 0,void 0,function*(){let f=Im.spawn(n,o,{stdio:["ignore","pipe","ignore"]}),c="";try{for(var m=xm(f.stdout),h;h=yield m.next(),!h.done;){let g=h.value;c+=g}}catch(g){l={error:g}}finally{try{h&&!h.done&&(u=m.return)&&(yield u.call(m))}finally{if(l)throw l.error}}return c})}function s(n,o){return p1.gtr(p1.minVersion(n),o)}})(np||(np={}))});var os=y((Pv,ls)=>{"use strict";ls.exports=e=>function(){let a=arguments.length,t=new Array(a);for(let p=0;p<a;p+=1)t[p]=arguments[p];return new Promise((p,d)=>{t.push((i,r)=>{i?d(i):p(r)}),e.apply(null,t)})}});var Re=y(($v,ms)=>{"use strict";var sp=require("fs"),km=os(),Um=e=>[typeof sp[e]=="function",!e.match(/Sync$/),!e.match(/^[A-Z]/),!e.match(/^create/),!e.match(/^(un)?watch/)].every(Boolean),Hm=e=>{let a=sp[e];return km(a)},Mm=()=>{let e={};return Object.keys(sp).forEach(a=>{Um(a)?a==="exists"?e.exists=()=>{throw new Error("fs.exists() is deprecated")}:e[a]=Hm(a):e[a]=sp[a]}),e};ms.exports=Mm()});var ge=y((Fv,hs)=>{"use strict";var jm=e=>{let a=t=>["a","e","i","o","u"].indexOf(t[0])!==-1?`an ${t}`:`a ${t}`;return e.map(a).join(" or ")},us=e=>/array of /.test(e),cs=e=>e.split(" of ")[1],fs=e=>us(e)?fs(cs(e)):["string","number","boolean","array","object","buffer","null","undefined","function"].some(a=>a===e),tt=e=>e===null?"null":Array.isArray(e)?"array":Buffer.isBuffer(e)?"buffer":typeof e,Gm=(e,a,t)=>t.indexOf(e)===a,zm=e=>{let a=tt(e),t;return a==="array"&&(t=e.map(p=>tt(p)).filter(Gm),a+=` of ${t.join(", ")}`),a},Wm=(e,a)=>{let t=cs(a);return tt(e)!=="array"?!1:e.every(p=>tt(p)===t)},Zd=(e,a,t,p)=>{if(!p.some(i=>{if(!fs(i))throw new Error(`Unknown type "${i}"`);return us(i)?Wm(t,i):i===tt(t)}))throw new Error(`Argument "${a}" passed to ${e} must be ${jm(p)}. Received ${zm(t)}`)},Xm=(e,a,t,p)=>{t!==void 0&&(Zd(e,a,t,["object"]),Object.keys(t).forEach(d=>{let i=`${a}.${d}`;if(p[d]!==void 0)Zd(e,i,t[d],p[d]);else throw new Error(`Unknown argument "${i}" passed to ${e}`)}))};hs.exports={argument:Zd,options:Xm}});var lp=y(vs=>{"use strict";vs.normalizeFileMode=e=>{let a;return typeof e=="number"?a=e.toString(8):a=e,a.substring(a.length-3)}});var mp=y(op=>{"use strict";var gs=Re(),Zm=ge(),Km=(e,a)=>{let t=`${e}([path])`;Zm.argument(t,"path",a,["string","undefined"])},Ym=e=>{gs.rmSync(e,{recursive:!0,force:!0,maxRetries:3})},Qm=e=>gs.rm(e,{recursive:!0,force:!0,maxRetries:3});op.validateInput=Km;op.sync=Ym;op.async=Qm});var j1=y(ma=>{"use strict";var up=require("path"),d1=Re(),Kd=lp(),ws=ge(),ys=mp(),Jm=(e,a,t)=>{let p=`${e}(path, [criteria])`;ws.argument(p,"path",a,["string"]),ws.options(p,"criteria",t,{empty:["boolean"],mode:["string","number"]})},Es=e=>{let a=e||{};return typeof a.empty!="boolean"&&(a.empty=!1),a.mode!==void 0&&(a.mode=Kd.normalizeFileMode(a.mode)),a},Ss=e=>new Error(`Path ${e} exists but is not a directory. Halting jetpack.dir() call for safety reasons.`),eu=e=>{let a;try{a=d1.statSync(e)}catch(t){if(t.code!=="ENOENT")throw t}if(a&&!a.isDirectory())throw Ss(e);return a},Yd=(e,a)=>{let t=a||{};try{d1.mkdirSync(e,t.mode)}catch(p){if(p.code==="ENOENT")Yd(up.dirname(e),t),d1.mkdirSync(e,t.mode);else if(p.code!=="EEXIST")throw p}},au=(e,a,t)=>{let p=()=>{let i=Kd.normalizeFileMode(a.mode);t.mode!==void 0&&t.mode!==i&&d1.chmodSync(e,t.mode)},d=()=>{t.empty&&d1.readdirSync(e).forEach(r=>{ys.sync(up.resolve(e,r))})};p(),d()},tu=(e,a)=>{let t=Es(a),p=eu(e);p?au(e,p,t):Yd(e,t)},pu=e=>new Promise((a,t)=>{d1.stat(e).then(p=>{p.isDirectory()?a(p):t(Ss(e))}).catch(p=>{p.code==="ENOENT"?a(void 0):t(p)})}),du=e=>new Promise((a,t)=>{d1.readdir(e).then(p=>{let d=i=>{if(i===p.length)a();else{let r=up.resolve(e,p[i]);ys.async(r).then(()=>{d(i+1)})}};d(0)}).catch(t)}),iu=(e,a,t)=>new Promise((p,d)=>{let i=()=>{let s=Kd.normalizeFileMode(a.mode);return t.mode!==void 0&&t.mode!==s?d1.chmod(e,t.mode):Promise.resolve()},r=()=>t.empty?du(e):Promise.resolve();i().then(r).then(p,d)}),Qd=(e,a)=>{let t=a||{};return new Promise((p,d)=>{d1.mkdir(e,t.mode).then(p).catch(i=>{i.code==="ENOENT"?Qd(up.dirname(e),t).then(()=>d1.mkdir(e,t.mode)).then(p).catch(r=>{r.code==="EEXIST"?p():d(r)}):i.code==="EEXIST"?p():d(i)})})},ru=(e,a)=>new Promise((t,p)=>{let d=Es(a);pu(e).then(i=>i!==void 0?iu(e,i,d):Qd(e,d)).then(t,p)});ma.validateInput=Jm;ma.sync=tu;ma.createSync=Yd;ma.async=ru;ma.createAsync=Qd});var pt=y(fp=>{"use strict";var Ns=require("path"),ua=Re(),Jd=ge(),_s=j1(),nu=(e,a,t,p)=>{let d=`${e}(path, data, [options])`;Jd.argument(d,"path",a,["string"]),Jd.argument(d,"data",t,["string","buffer","object","array"]),Jd.options(d,"options",p,{mode:["string","number"],atomic:["boolean"],jsonIndent:["number"]})},cp=".__new__",bs=(e,a)=>{let t=a;return typeof t!="number"&&(t=2),typeof e=="object"&&!Buffer.isBuffer(e)&&e!==null?JSON.stringify(e,null,t):e},Ts=(e,a,t)=>{try{ua.writeFileSync(e,a,t)}catch(p){if(p.code==="ENOENT")_s.createSync(Ns.dirname(e)),ua.writeFileSync(e,a,t);else throw p}},su=(e,a,t)=>{Ts(e+cp,a,t),ua.renameSync(e+cp,e)},lu=(e,a,t)=>{let p=t||{},d=bs(a,p.jsonIndent),i=Ts;p.atomic&&(i=su),i(e,d,{mode:p.mode})},Ds=(e,a,t)=>new Promise((p,d)=>{ua.writeFile(e,a,t).then(p).catch(i=>{i.code==="ENOENT"?_s.createAsync(Ns.dirname(e)).then(()=>ua.writeFile(e,a,t)).then(p,d):d(i)})}),ou=(e,a,t)=>new Promise((p,d)=>{Ds(e+cp,a,t).then(()=>ua.rename(e+cp,e)).then(p,d)}),mu=(e,a,t)=>{let p=t||{},d=bs(a,p.jsonIndent),i=Ds;return p.atomic&&(i=ou),i(e,d,{mode:p.mode})};fp.validateInput=nu;fp.sync=lu;fp.async=mu});var Cs=y(hp=>{"use strict";var As=Re(),xs=pt(),ei=ge(),uu=(e,a,t,p)=>{let d=`${e}(path, data, [options])`;ei.argument(d,"path",a,["string"]),ei.argument(d,"data",t,["string","buffer"]),ei.options(d,"options",p,{mode:["string","number"]})},cu=(e,a,t)=>{try{As.appendFileSync(e,a,t)}catch(p){if(p.code==="ENOENT")xs.sync(e,a,t);else throw p}},fu=(e,a,t)=>new Promise((p,d)=>{As.appendFile(e,a,t).then(p).catch(i=>{i.code==="ENOENT"?xs.async(e,a,t).then(p,d):d(i)})});hp.validateInput=uu;hp.sync=cu;hp.async=fu});var Ls=y(wp=>{"use strict";var vp=Re(),ai=lp(),Is=ge(),gp=pt(),hu=(e,a,t)=>{let p=`${e}(path, [criteria])`;Is.argument(p,"path",a,["string"]),Is.options(p,"criteria",t,{content:["string","buffer","object","array"],jsonIndent:["number"],mode:["string","number"]})},Rs=e=>{let a=e||{};return a.mode!==void 0&&(a.mode=ai.normalizeFileMode(a.mode)),a},Os=e=>new Error(`Path ${e} exists but is not a file. Halting jetpack.file() call for safety reasons.`),vu=e=>{let a;try{a=vp.statSync(e)}catch(t){if(t.code!=="ENOENT")throw t}if(a&&!a.isFile())throw Os(e);return a},gu=(e,a,t)=>{let p=ai.normalizeFileMode(a.mode),d=()=>t.content!==void 0?(gp.sync(e,t.content,{mode:p,jsonIndent:t.jsonIndent}),!0):!1,i=()=>{t.mode!==void 0&&t.mode!==p&&vp.chmodSync(e,t.mode)};d()||i()},wu=(e,a)=>{let t="";a.content!==void 0&&(t=a.content),gp.sync(e,t,{mode:a.mode,jsonIndent:a.jsonIndent})},yu=(e,a)=>{let t=Rs(a),p=vu(e);p!==void 0?gu(e,p,t):wu(e,t)},Eu=e=>new Promise((a,t)=>{vp.stat(e).then(p=>{p.isFile()?a(p):t(Os(e))}).catch(p=>{p.code==="ENOENT"?a(void 0):t(p)})}),Su=(e,a,t)=>{let p=ai.normalizeFileMode(a.mode),d=()=>new Promise((r,s)=>{t.content!==void 0?gp.async(e,t.content,{mode:p,jsonIndent:t.jsonIndent}).then(()=>{r(!0)}).catch(s):r(!1)}),i=()=>{if(t.mode!==void 0&&t.mode!==p)return vp.chmod(e,t.mode)};return d().then(r=>{if(!r)return i()})},Nu=(e,a)=>{let t="";return a.content!==void 0&&(t=a.content),gp.async(e,t,{mode:a.mode,jsonIndent:a.jsonIndent})},_u=(e,a)=>new Promise((t,p)=>{let d=Rs(a);Eu(e).then(i=>i!==void 0?Su(e,i,d):Nu(e,d)).then(t,p)});wp.validateInput=hu;wp.sync=yu;wp.async=_u});var fa=y(ca=>{"use strict";var Ps=require("crypto"),bu=require("path"),I1=Re(),Vs=ge(),ti=["md5","sha1","sha256","sha512"],pi=["report","follow"],Tu=(e,a,t)=>{let p=`${e}(path, [options])`;if(Vs.argument(p,"path",a,["string"]),Vs.options(p,"options",t,{checksum:["string"],mode:["boolean"],times:["boolean"],absolutePath:["boolean"],symlinks:["string"]}),t&&t.checksum!==void 0&&ti.indexOf(t.checksum)===-1)throw new Error(`Argument "options.checksum" passed to ${p} must have one of values: ${ti.join(", ")}`);if(t&&t.symlinks!==void 0&&pi.indexOf(t.symlinks)===-1)throw new Error(`Argument "options.symlinks" passed to ${p} must have one of values: ${pi.join(", ")}`)},$s=(e,a,t)=>{let p={};return p.name=bu.basename(e),t.isFile()?(p.type="file",p.size=t.size):t.isDirectory()?p.type="dir":t.isSymbolicLink()?p.type="symlink":p.type="other",a.mode&&(p.mode=t.mode),a.times&&(p.accessTime=t.atime,p.modifyTime=t.mtime,p.changeTime=t.ctime,p.birthTime=t.birthtime),a.absolutePath&&(p.absolutePath=e),p},Du=(e,a)=>{let t=Ps.createHash(a),p=I1.readFileSync(e);return t.update(p),t.digest("hex")},Au=(e,a,t)=>{a.type==="file"&&t.checksum?a[t.checksum]=Du(e,t.checksum):a.type==="symlink"&&(a.pointsAt=I1.readlinkSync(e))},xu=(e,a)=>{let t=I1.lstatSync,p,d=a||{};d.symlinks==="follow"&&(t=I1.statSync);try{p=t(e)}catch(r){if(r.code==="ENOENT")return;throw r}let i=$s(e,d,p);return Au(e,i,d),i},Cu=(e,a)=>new Promise((t,p)=>{let d=Ps.createHash(a),i=I1.createReadStream(e);i.on("data",r=>{d.update(r)}),i.on("end",()=>{t(d.digest("hex"))}),i.on("error",p)}),Iu=(e,a,t)=>a.type==="file"&&t.checksum?Cu(e,t.checksum).then(p=>(a[t.checksum]=p,a)):a.type==="symlink"?I1.readlink(e).then(p=>(a.pointsAt=p,a)):Promise.resolve(a),Ru=(e,a)=>new Promise((t,p)=>{let d=I1.lstat,i=a||{};i.symlinks==="follow"&&(d=I1.stat),d(e).then(r=>{let s=$s(e,i,r);Iu(e,s,i).then(t,p)}).catch(r=>{r.code==="ENOENT"?t(void 0):p(r)})});ca.supportedChecksumAlgorithms=ti;ca.symlinkOptions=pi;ca.validateInput=Tu;ca.sync=xu;ca.async=Ru});var Ep=y(yp=>{"use strict";var Fs=Re(),Ou=ge(),Lu=(e,a)=>{let t=`${e}(path)`;Ou.argument(t,"path",a,["string","undefined"])},Vu=e=>{try{return Fs.readdirSync(e)}catch(a){if(a.code==="ENOENT")return;throw a}},Pu=e=>new Promise((a,t)=>{Fs.readdir(e).then(p=>{a(p)}).catch(p=>{p.code==="ENOENT"?a(void 0):t(p)})});yp.validateInput=Lu;yp.sync=Vu;yp.async=Pu});var bp=y(di=>{"use strict";var Sp=require("fs"),Np=require("path"),dt=fa(),zv=Ep(),_p=e=>e.isDirectory()?"dir":e.isFile()?"file":e.isSymbolicLink()?"symlink":"other",$u=(e,a,t)=>{a.maxLevelsDeep===void 0&&(a.maxLevelsDeep=1/0);let p=a.inspectOptions!==void 0;a.symlinks&&(a.inspectOptions===void 0?a.inspectOptions={symlinks:a.symlinks}:a.inspectOptions.symlinks=a.symlinks);let d=(r,s)=>{Sp.readdirSync(r,{withFileTypes:!0}).forEach(n=>{let o=typeof n=="string",l;o?l=Np.join(r,n):l=Np.join(r,n.name);let u;if(p)u=dt.sync(l,a.inspectOptions);else if(o){let f=dt.sync(l,a.inspectOptions);u={name:f.name,type:f.type}}else{let f=_p(n);if(f==="symlink"&&a.symlinks==="follow"){let c=Sp.statSync(l);u={name:n.name,type:_p(c)}}else u={name:n.name,type:f}}u!==void 0&&(t(l,u),u.type==="dir"&&s<a.maxLevelsDeep&&d(l,s+1))})},i=dt.sync(e,a.inspectOptions);i?(p?t(e,i):t(e,{name:i.name,type:i.type}),i.type==="dir"&&d(e,1)):t(e,void 0)},Fu=5,qu=(e,a,t,p)=>{a.maxLevelsDeep===void 0&&(a.maxLevelsDeep=1/0);let d=a.inspectOptions!==void 0;a.symlinks&&(a.inspectOptions===void 0?a.inspectOptions={symlinks:a.symlinks}:a.inspectOptions.symlinks=a.symlinks);let i=[],r=0,s=()=>{if(i.length===0&&r===0)p();else if(i.length>0&&r<Fu){let u=i.pop();r+=1,u()}},n=u=>{i.push(u),s()},o=()=>{r-=1,s()},l=(u,f)=>{let c=(m,h)=>{h.type==="dir"&&f<a.maxLevelsDeep&&l(m,f+1)};n(()=>{Sp.readdir(u,{withFileTypes:!0},(m,h)=>{m?p(m):(h.forEach(g=>{let v=typeof g=="string",w;if(v?w=Np.join(u,g):w=Np.join(u,g.name),d||v)n(()=>{dt.async(w,a.inspectOptions).then(_=>{_!==void 0&&(d?t(w,_):t(w,{name:_.name,type:_.type}),c(w,_)),o()}).catch(_=>{p(_)})});else{let _=_p(g);if(_==="symlink"&&a.symlinks==="follow")n(()=>{Sp.stat(w,(b,T)=>{if(b)p(b);else{let R={name:g.name,type:_p(T)};t(w,R),c(w,R),o()}})});else{let b={name:g.name,type:_};t(w,b),c(w,b)}}}),o())})})};dt.async(e,a.inspectOptions).then(u=>{u?(d?t(e,u):t(e,{name:u.name,type:u.type}),u.type==="dir"?l(e,1):p()):(t(e,void 0),p())}).catch(u=>{p(u)})};di.sync=$u;di.async=qu});var Bs=y((Xv,qs)=>{var Bu=typeof process=="object"&&process&&process.platform==="win32";qs.exports=Bu?{sep:"\\"}:{sep:"/"}});var Ws=y((Zv,zs)=>{var ks=ad();zs.exports=Hu;var Us="\0SLASH"+Math.random()+"\0",Hs="\0OPEN"+Math.random()+"\0",ri="\0CLOSE"+Math.random()+"\0",Ms="\0COMMA"+Math.random()+"\0",js="\0PERIOD"+Math.random()+"\0";function ii(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function ku(e){return e.split("\\\\").join(Us).split("\\{").join(Hs).split("\\}").join(ri).split("\\,").join(Ms).split("\\.").join(js)}function Uu(e){return e.split(Us).join("\\").split(Hs).join("{").split(ri).join("}").split(Ms).join(",").split(js).join(".")}function Gs(e){if(!e)return[""];var a=[],t=ks("{","}",e);if(!t)return e.split(",");var p=t.pre,d=t.body,i=t.post,r=p.split(",");r[r.length-1]+="{"+d+"}";var s=Gs(i);return i.length&&(r[r.length-1]+=s.shift(),r.push.apply(r,s)),a.push.apply(a,r),a}function Hu(e){return e?(e.substr(0,2)==="{}"&&(e="\\{\\}"+e.substr(2)),it(ku(e),!0).map(Uu)):[]}function Mu(e){return"{"+e+"}"}function ju(e){return/^-?0\d/.test(e)}function Gu(e,a){return e<=a}function zu(e,a){return e>=a}function it(e,a){var t=[],p=ks("{","}",e);if(!p)return[e];var d=p.pre,i=p.post.length?it(p.post,!1):[""];if(/\$$/.test(p.pre))for(var r=0;r<i.length;r++){var s=d+"{"+p.body+"}"+i[r];t.push(s)}else{var n=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(p.body),o=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(p.body),l=n||o,u=p.body.indexOf(",")>=0;if(!l&&!u)return p.post.match(/,.*\}/)?(e=p.pre+"{"+p.body+ri+p.post,it(e)):[e];var f;if(l)f=p.body.split(/\.\./);else if(f=Gs(p.body),f.length===1&&(f=it(f[0],!1).map(Mu),f.length===1))return i.map(function(U){return p.pre+f[0]+U});var c;if(l){var m=ii(f[0]),h=ii(f[1]),g=Math.max(f[0].length,f[1].length),v=f.length==3?Math.abs(ii(f[2])):1,w=Gu,_=h<m;_&&(v*=-1,w=zu);var b=f.some(ju);c=[];for(var T=m;w(T,h);T+=v){var R;if(o)R=String.fromCharCode(T),R==="\\"&&(R="");else if(R=String(T),b){var x=g-R.length;if(x>0){var D=new Array(x+1).join("0");T<0?R="-"+D+R.slice(1):R=D+R}}c.push(R)}}else{c=[];for(var C=0;C<f.length;C++)c.push.apply(c,it(f[C],!1))}for(var C=0;C<c.length;C++)for(var r=0;r<i.length;r++){var s=d+c[C]+i[r];(!a||l||s)&&t.push(s)}}return t}});var Js=y((Yv,oi)=>{var qe=oi.exports=(e,a,t={})=>(Dp(a),!t.nocomment&&a.charAt(0)==="#"?!1:new ha(a,t).match(e));oi.exports=qe;var si=Bs();qe.sep=si.sep;var Ye=Symbol("globstar **");qe.GLOBSTAR=Ye;var Wu=Ws(),Xs={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},li="[^/]",ni=li+"*?",Xu="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",Zu="(?:(?!(?:\\/|^)\\.).)*?",Ys=e=>e.split("").reduce((a,t)=>(a[t]=!0,a),{}),Zs=Ys("().*{}+?[]^$\\!"),Ku=Ys("[.("),Ks=/\/+/;qe.filter=(e,a={})=>(t,p,d)=>qe(t,e,a);var R1=(e,a={})=>{let t={};return Object.keys(e).forEach(p=>t[p]=e[p]),Object.keys(a).forEach(p=>t[p]=a[p]),t};qe.defaults=e=>{if(!e||typeof e!="object"||!Object.keys(e).length)return qe;let a=qe,t=(p,d,i)=>a(p,d,R1(e,i));return t.Minimatch=class extends a.Minimatch{constructor(d,i){super(d,R1(e,i))}},t.Minimatch.defaults=p=>a.defaults(R1(e,p)).Minimatch,t.filter=(p,d)=>a.filter(p,R1(e,d)),t.defaults=p=>a.defaults(R1(e,p)),t.makeRe=(p,d)=>a.makeRe(p,R1(e,d)),t.braceExpand=(p,d)=>a.braceExpand(p,R1(e,d)),t.match=(p,d,i)=>a.match(p,d,R1(e,i)),t};qe.braceExpand=(e,a)=>Qs(e,a);var Qs=(e,a={})=>(Dp(e),a.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:Wu(e)),Yu=1024*64,Dp=e=>{if(typeof e!="string")throw new TypeError("invalid pattern");if(e.length>Yu)throw new TypeError("pattern is too long")},Tp=Symbol("subparse");qe.makeRe=(e,a)=>new ha(e,a||{}).makeRe();qe.match=(e,a,t={})=>{let p=new ha(a,t);return e=e.filter(d=>p.match(d)),p.options.nonull&&!e.length&&e.push(a),e};var Qu=e=>e.replace(/\\(.)/g,"$1"),Ju=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ha=class{constructor(a,t){Dp(a),t||(t={}),this.options=t,this.set=[],this.pattern=a,this.windowsPathsNoEscape=!!t.windowsPathsNoEscape||t.allowWindowsEscape===!1,this.windowsPathsNoEscape&&(this.pattern=this.pattern.replace(/\\/g,"/")),this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.partial=!!t.partial,this.make()}debug(){}make(){let a=this.pattern,t=this.options;if(!t.nocomment&&a.charAt(0)==="#"){this.comment=!0;return}if(!a){this.empty=!0;return}this.parseNegate();let p=this.globSet=this.braceExpand();t.debug&&(this.debug=(...d)=>console.error(...d)),this.debug(this.pattern,p),p=this.globParts=p.map(d=>d.split(Ks)),this.debug(this.pattern,p),p=p.map((d,i,r)=>d.map(this.parse,this)),this.debug(this.pattern,p),p=p.filter(d=>d.indexOf(!1)===-1),this.debug(this.pattern,p),this.set=p}parseNegate(){if(this.options.nonegate)return;let a=this.pattern,t=!1,p=0;for(let d=0;d<a.length&&a.charAt(d)==="!";d++)t=!t,p++;p&&(this.pattern=a.substr(p)),this.negate=t}matchOne(a,t,p){var d=this.options;this.debug("matchOne",{this:this,file:a,pattern:t}),this.debug("matchOne",a.length,t.length);for(var i=0,r=0,s=a.length,n=t.length;i<s&&r<n;i++,r++){this.debug("matchOne loop");var o=t[r],l=a[i];if(this.debug(t,o,l),o===!1)return!1;if(o===Ye){this.debug("GLOBSTAR",[t,o,l]);var u=i,f=r+1;if(f===n){for(this.debug("** at the end");i<s;i++)if(a[i]==="."||a[i]===".."||!d.dot&&a[i].charAt(0)===".")return!1;return!0}for(;u<s;){var c=a[u];if(this.debug(`
globstar while`,a,u,t,f,c),this.matchOne(a.slice(u),t.slice(f),p))return this.debug("globstar found match!",u,s,c),!0;if(c==="."||c===".."||!d.dot&&c.charAt(0)==="."){this.debug("dot detected!",a,u,t,f);break}this.debug("globstar swallow a segment, and continue"),u++}return!!(p&&(this.debug(`
>>> no match, partial?`,a,u,t,f),u===s))}var m;if(typeof o=="string"?(m=l===o,this.debug("string match",o,l,m)):(m=l.match(o),this.debug("pattern match",o,l,m)),!m)return!1}if(i===s&&r===n)return!0;if(i===s)return p;if(r===n)return i===s-1&&a[i]==="";throw new Error("wtf?")}braceExpand(){return Qs(this.pattern,this.options)}parse(a,t){Dp(a);let p=this.options;if(a==="**")if(p.noglobstar)a="*";else return Ye;if(a==="")return"";let d="",i=!!p.nocase,r=!1,s=[],n=[],o,l=!1,u=-1,f=-1,c,m,h,g=a.charAt(0)==="."?"":p.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",v=()=>{if(o){switch(o){case"*":d+=ni,i=!0;break;case"?":d+=li,i=!0;break;default:d+="\\"+o;break}this.debug("clearStateChar %j %j",o,d),o=!1}};for(let b=0,T;b<a.length&&(T=a.charAt(b));b++){if(this.debug("%s	%s %s %j",a,b,d,T),r){if(T==="/")return!1;Zs[T]&&(d+="\\"),d+=T,r=!1;continue}switch(T){case"/":return!1;case"\\":v(),r=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s	%s %s %j <-- stateChar",a,b,d,T),l){this.debug("  in class"),T==="!"&&b===f+1&&(T="^"),d+=T;continue}this.debug("call clearStateChar %j",o),v(),o=T,p.noext&&v();continue;case"(":if(l){d+="(";continue}if(!o){d+="\\(";continue}s.push({type:o,start:b-1,reStart:d.length,open:Xs[o].open,close:Xs[o].close}),d+=o==="!"?"(?:(?!(?:":"(?:",this.debug("plType %j %j",o,d),o=!1;continue;case")":if(l||!s.length){d+="\\)";continue}v(),i=!0,m=s.pop(),d+=m.close,m.type==="!"&&n.push(m),m.reEnd=d.length;continue;case"|":if(l||!s.length){d+="\\|";continue}v(),d+="|";continue;case"[":if(v(),l){d+="\\"+T;continue}l=!0,f=b,u=d.length,d+=T;continue;case"]":if(b===f+1||!l){d+="\\"+T;continue}c=a.substring(f+1,b);try{RegExp("["+c+"]")}catch{h=this.parse(c,Tp),d=d.substr(0,u)+"\\["+h[0]+"\\]",i=i||h[1],l=!1;continue}i=!0,l=!1,d+=T;continue;default:v(),Zs[T]&&!(T==="^"&&l)&&(d+="\\"),d+=T;break}}for(l&&(c=a.substr(f+1),h=this.parse(c,Tp),d=d.substr(0,u)+"\\["+h[0],i=i||h[1]),m=s.pop();m;m=s.pop()){let b;b=d.slice(m.reStart+m.open.length),this.debug("setting tail",d,m),b=b.replace(/((?:\\{2}){0,64})(\\?)\|/g,(R,x,D)=>(D||(D="\\"),x+x+D+"|")),this.debug(`tail=%j
   %s`,b,b,m,d);let T=m.type==="*"?ni:m.type==="?"?li:"\\"+m.type;i=!0,d=d.slice(0,m.reStart)+T+"\\("+b}v(),r&&(d+="\\\\");let w=Ku[d.charAt(0)];for(let b=n.length-1;b>-1;b--){let T=n[b],R=d.slice(0,T.reStart),x=d.slice(T.reStart,T.reEnd-8),D=d.slice(T.reEnd),C=d.slice(T.reEnd-8,T.reEnd)+D,U=R.split("(").length-1,N=D;for(let $=0;$<U;$++)N=N.replace(/\)[+*?]?/,"");D=N;let H=D===""&&t!==Tp?"$":"";d=R+x+D+H+C}if(d!==""&&i&&(d="(?=.)"+d),w&&(d=g+d),t===Tp)return[d,i];if(!i)return Qu(a);let _=p.nocase?"i":"";try{return Object.assign(new RegExp("^"+d+"$",_),{_glob:a,_src:d})}catch{return new RegExp("$.")}}makeRe(){if(this.regexp||this.regexp===!1)return this.regexp;let a=this.set;if(!a.length)return this.regexp=!1,this.regexp;let t=this.options,p=t.noglobstar?ni:t.dot?Xu:Zu,d=t.nocase?"i":"",i=a.map(r=>(r=r.map(s=>typeof s=="string"?Ju(s):s===Ye?Ye:s._src).reduce((s,n)=>(s[s.length-1]===Ye&&n===Ye||s.push(n),s),[]),r.forEach((s,n)=>{s!==Ye||r[n-1]===Ye||(n===0?r.length>1?r[n+1]="(?:\\/|"+p+"\\/)?"+r[n+1]:r[n]=p:n===r.length-1?r[n-1]+="(?:\\/|"+p+")?":(r[n-1]+="(?:\\/|\\/"+p+"\\/)"+r[n+1],r[n+1]=Ye))}),r.filter(s=>s!==Ye).join("/"))).join("|");i="^(?:"+i+")$",this.negate&&(i="^(?!"+i+").*$");try{this.regexp=new RegExp(i,d)}catch{this.regexp=!1}return this.regexp}match(a,t=this.partial){if(this.debug("match",a,this.pattern),this.comment)return!1;if(this.empty)return a==="";if(a==="/"&&t)return!0;let p=this.options;si.sep!=="/"&&(a=a.split(si.sep).join("/")),a=a.split(Ks),this.debug(this.pattern,"split",a);let d=this.set;this.debug(this.pattern,"set",d);let i;for(let r=a.length-1;r>=0&&(i=a[r],!i);r--);for(let r=0;r<d.length;r++){let s=d[r],n=a;if(p.matchBase&&s.length===1&&(n=[i]),this.matchOne(n,s,t))return p.flipNegate?!0:!this.negate}return p.flipNegate?!1:this.negate}static defaults(a){return qe.defaults(a).Minimatch}};qe.Minimatch=ha});var mi=y(e9=>{"use strict";var ec=Js().Minimatch,ac=(e,a)=>{let t=a.indexOf("/")!==-1,p=/^!?\//.test(a),d=/^!/.test(a),i;if(!p&&t){let r=a.replace(/^!/,"").replace(/^\.\//,"");return/\/$/.test(e)?i="":i="/",d?`!${e}${i}${r}`:`${e}${i}${r}`}return a};e9.create=(e,a,t)=>{let p;typeof a=="string"?p=[a]:p=a;let d=p.map(r=>ac(e,r)).map(r=>new ec(r,{matchBase:!0,nocomment:!0,nocase:t||!1,dot:!0,windowsPathsNoEscape:!0}));return r=>{let s="matching",n=!1,o,l;for(l=0;l<d.length;l+=1){if(o=d[l],o.negate&&(s="negation",l===0&&(n=!0)),s==="negation"&&n&&!o.match(r))return!1;s==="matching"&&!n&&(n=o.match(r))}return n}}});var l9=y(Ap=>{"use strict";var tc=require("path"),t9=bp(),p9=fa(),d9=mi(),a9=ge(),pc=(e,a,t)=>{let p=`${e}([path], options)`;a9.argument(p,"path",a,["string"]),a9.options(p,"options",t,{matching:["string","array of string"],filter:["function"],files:["boolean"],directories:["boolean"],recursive:["boolean"],ignoreCase:["boolean"]})},i9=e=>{let a=e||{};return a.matching===void 0&&(a.matching="*"),a.files===void 0&&(a.files=!0),a.ignoreCase===void 0&&(a.ignoreCase=!1),a.directories===void 0&&(a.directories=!1),a.recursive===void 0&&(a.recursive=!0),a},r9=(e,a)=>e.map(t=>tc.relative(a,t)),n9=e=>{let a=new Error(`Path you want to find stuff in doesn't exist ${e}`);return a.code="ENOENT",a},s9=e=>{let a=new Error(`Path you want to find stuff in must be a directory ${e}`);return a.code="ENOTDIR",a},dc=(e,a)=>{let t=[],p=d9.create(e,a.matching,a.ignoreCase),d=1/0;return a.recursive===!1&&(d=1),t9.sync(e,{maxLevelsDeep:d,symlinks:"follow",inspectOptions:{times:!0,absolutePath:!0}},(i,r)=>{r&&i!==e&&p(i)&&(r.type==="file"&&a.files===!0||r.type==="dir"&&a.directories===!0)&&(a.filter?a.filter(r)&&t.push(i):t.push(i))}),t.sort(),r9(t,a.cwd)},ic=(e,a)=>{let t=p9.sync(e,{symlinks:"follow"});if(t===void 0)throw n9(e);if(t.type!=="dir")throw s9(e);return dc(e,i9(a))},rc=(e,a)=>new Promise((t,p)=>{let d=[],i=d9.create(e,a.matching,a.ignoreCase),r=1/0;a.recursive===!1&&(r=1);let s=0,n=!1,o=()=>{n&&s===0&&(d.sort(),t(r9(d,a.cwd)))};t9.async(e,{maxLevelsDeep:r,symlinks:"follow",inspectOptions:{times:!0,absolutePath:!0}},(l,u)=>{if(u&&l!==e&&i(l)&&(u.type==="file"&&a.files===!0||u.type==="dir"&&a.directories===!0))if(a.filter){let c=a.filter(u);typeof c.then=="function"?(s+=1,c.then(h=>{h&&d.push(l),s-=1,o()}).catch(h=>{p(h)})):c&&d.push(l)}else d.push(l)},l=>{l?p(l):(n=!0,o())})}),nc=(e,a)=>p9.async(e,{symlinks:"follow"}).then(t=>{if(t===void 0)throw n9(e);if(t.type!=="dir")throw s9(e);return rc(e,i9(a))});Ap.validateInput=pc;Ap.sync=ic;Ap.async=nc});var u9=y(Ip=>{"use strict";var sc=require("crypto"),Cp=require("path"),xp=fa(),eg=Ep(),o9=ge(),m9=bp(),lc=(e,a,t)=>{let p=`${e}(path, [options])`;if(o9.argument(p,"path",a,["string"]),o9.options(p,"options",t,{checksum:["string"],relativePath:["boolean"],times:["boolean"],symlinks:["string"]}),t&&t.checksum!==void 0&&xp.supportedChecksumAlgorithms.indexOf(t.checksum)===-1)throw new Error(`Argument "options.checksum" passed to ${p} must have one of values: ${xp.supportedChecksumAlgorithms.join(", ")}`);if(t&&t.symlinks!==void 0&&xp.symlinkOptions.indexOf(t.symlinks)===-1)throw new Error(`Argument "options.symlinks" passed to ${p} must have one of values: ${xp.symlinkOptions.join(", ")}`)},oc=(e,a)=>e===void 0?".":e.relativePath+"/"+a.name,mc=(e,a)=>{let t=sc.createHash(a);return e.forEach(p=>{t.update(p.name+p[a])}),t.digest("hex")},ui=(e,a,t)=>{t.relativePath&&(a.relativePath=oc(e,a)),a.type==="dir"&&(a.children.forEach(p=>{ui(a,p,t)}),a.size=0,a.children.sort((p,d)=>p.type==="dir"&&d.type==="file"?-1:p.type==="file"&&d.type==="dir"?1:p.name.localeCompare(d.name)),a.children.forEach(p=>{a.size+=p.size||0}),t.checksum&&(a[t.checksum]=mc(a.children,t.checksum)))},ci=(e,a,t)=>{let p=a[0];if(a.length>1){let d=e.children.find(i=>i.name===p);return ci(d,a.slice(1),t)}return e},uc=(e,a)=>{let t=a||{},p;return m9.sync(e,{inspectOptions:t},(d,i)=>{if(i){i.type==="dir"&&(i.children=[]);let r=Cp.relative(e,d);r===""?p=i:ci(p,r.split(Cp.sep),i).children.push(i)}}),p&&ui(void 0,p,t),p},cc=(e,a)=>{let t=a||{},p;return new Promise((d,i)=>{m9.async(e,{inspectOptions:t},(r,s)=>{if(s){s.type==="dir"&&(s.children=[]);let n=Cp.relative(e,r);n===""?p=s:ci(p,n.split(Cp.sep),s).children.push(s)}},r=>{r?i(r):(p&&ui(void 0,p,t),d(p))})})};Ip.validateInput=lc;Ip.sync=uc;Ip.async=cc});var Op=y(Rp=>{"use strict";var c9=Re(),fc=ge(),hc=(e,a)=>{let t=`${e}(path)`;fc.argument(t,"path",a,["string"])},vc=e=>{try{let a=c9.statSync(e);return a.isDirectory()?"dir":a.isFile()?"file":"other"}catch(a){if(a.code!=="ENOENT")throw a}return!1},gc=e=>new Promise((a,t)=>{c9.stat(e).then(p=>{p.isDirectory()?a("dir"):p.isFile()?a("file"):a("other")}).catch(p=>{p.code==="ENOENT"?a(!1):t(p)})});Rp.validateInput=hc;Rp.sync=vc;Rp.async=gc});var gi=y($p=>{"use strict";var rt=require("path"),Be=Re(),vi=j1(),Lp=Op(),f9=fa(),wc=pt(),yc=mi(),h9=lp(),v9=bp(),fi=ge(),Ec=(e,a,t,p)=>{let d=`${e}(from, to, [options])`;fi.argument(d,"from",a,["string"]),fi.argument(d,"to",t,["string"]),fi.options(d,"options",p,{overwrite:["boolean","function"],matching:["string","array of string"],ignoreCase:["boolean"]})},g9=(e,a)=>{let t=e||{},p={};return t.ignoreCase===void 0&&(t.ignoreCase=!1),p.overwrite=t.overwrite,t.matching?p.allowedToCopy=yc.create(a,t.matching,t.ignoreCase):p.allowedToCopy=()=>!0,p},w9=e=>{let a=new Error(`Path to copy doesn't exist ${e}`);return a.code="ENOENT",a},Vp=e=>{let a=new Error(`Destination path already exists ${e}`);return a.code="EEXIST",a},Pp={mode:!0,symlinks:"report",times:!0,absolutePath:!0},y9=e=>typeof e.opts.overwrite!="function"&&e.opts.overwrite!==!0,Sc=(e,a,t)=>{if(!Lp.sync(e))throw w9(e);if(Lp.sync(a)&&!t.overwrite)throw Vp(a)},Nc=e=>{if(typeof e.opts.overwrite=="function"){let a=f9.sync(e.destPath,Pp);return e.opts.overwrite(e.srcInspectData,a)}return e.opts.overwrite===!0},_c=(e,a,t,p)=>{let d=Be.readFileSync(e);try{Be.writeFileSync(a,d,{mode:t,flag:"wx"})}catch(i){if(i.code==="ENOENT")wc.sync(a,d,{mode:t});else if(i.code==="EEXIST"){if(Nc(p))Be.writeFileSync(a,d,{mode:t});else if(y9(p))throw Vp(p.destPath)}else throw i}},bc=(e,a)=>{let t=Be.readlinkSync(e);try{Be.symlinkSync(t,a)}catch(p){if(p.code==="EEXIST")Be.unlinkSync(a),Be.symlinkSync(t,a);else throw p}},Tc=(e,a,t,p)=>{let d={srcPath:e,destPath:t,srcInspectData:a,opts:p},i=h9.normalizeFileMode(a.mode);a.type==="dir"?vi.createSync(t,{mode:i}):a.type==="file"?_c(e,t,i,d):a.type==="symlink"&&bc(e,t)},Dc=(e,a,t)=>{let p=g9(t,e);Sc(e,a,p),v9.sync(e,{inspectOptions:Pp},(d,i)=>{let r=rt.relative(e,d),s=rt.resolve(a,r);p.allowedToCopy(d,s,i)&&Tc(d,i,s,p)})},Ac=(e,a,t)=>Lp.async(e).then(p=>{if(p)return Lp.async(a);throw w9(e)}).then(p=>{if(p&&!t.overwrite)throw Vp(a)}),xc=e=>new Promise((a,t)=>{typeof e.opts.overwrite=="function"?f9.async(e.destPath,Pp).then(p=>{a(e.opts.overwrite(e.srcInspectData,p))}).catch(t):a(e.opts.overwrite===!0)}),hi=(e,a,t,p,d)=>new Promise((i,r)=>{let s=d||{},n="wx";s.overwrite&&(n="w");let o=Be.createReadStream(e),l=Be.createWriteStream(a,{mode:t,flags:n});o.on("error",r),l.on("error",u=>{o.resume(),u.code==="ENOENT"?vi.createAsync(rt.dirname(a)).then(()=>{hi(e,a,t,p).then(i,r)}).catch(r):u.code==="EEXIST"?xc(p).then(f=>{f?hi(e,a,t,p,{overwrite:!0}).then(i,r):y9(p)?r(Vp(a)):i()}).catch(r):r(u)}),l.on("finish",i),o.pipe(l)}),Cc=(e,a)=>Be.readlink(e).then(t=>new Promise((p,d)=>{Be.symlink(t,a).then(p).catch(i=>{i.code==="EEXIST"?Be.unlink(a).then(()=>Be.symlink(t,a)).then(p,d):d(i)})})),Ic=(e,a,t,p)=>{let d={srcPath:e,destPath:t,srcInspectData:a,opts:p},i=h9.normalizeFileMode(a.mode);return a.type==="dir"?vi.createAsync(t,{mode:i}):a.type==="file"?hi(e,t,i,d):a.type==="symlink"?Cc(e,t):Promise.resolve()},Rc=(e,a,t)=>new Promise((p,d)=>{let i=g9(t,e);Ac(e,a,i).then(()=>{let r=!1,s=0;v9.async(e,{inspectOptions:Pp},(n,o)=>{if(o){let l=rt.relative(e,n),u=rt.resolve(a,l);i.allowedToCopy(n,o,u)&&(s+=1,Ic(n,o,u,i).then(()=>{s-=1,r&&s===0&&p()}).catch(d))}},n=>{n?d(n):(r=!0,r&&s===0&&p())})}).catch(d)});$p.validateInput=Ec;$p.sync=Dc;$p.async=Rc});var yi=y(qp=>{"use strict";var E9=require("path"),va=Re(),wi=ge(),S9=gi(),N9=j1(),nt=Op(),Fp=mp(),Oc=(e,a,t,p)=>{let d=`${e}(from, to, [options])`;wi.argument(d,"from",a,["string"]),wi.argument(d,"to",t,["string"]),wi.options(d,"options",p,{overwrite:["boolean"]})},_9=e=>e||{},b9=e=>{let a=new Error(`Destination path already exists ${e}`);return a.code="EEXIST",a},T9=e=>{let a=new Error(`Path to move doesn't exist ${e}`);return a.code="ENOENT",a},Lc=(e,a,t)=>{let p=_9(t);if(nt.sync(a)!==!1&&p.overwrite!==!0)throw b9(a);try{va.renameSync(e,a)}catch(d){if(d.code==="EISDIR"||d.code==="EPERM")Fp.sync(a),va.renameSync(e,a);else if(d.code==="EXDEV")S9.sync(e,a,{overwrite:!0}),Fp.sync(e);else if(d.code==="ENOENT"){if(!nt.sync(e))throw T9(e);N9.createSync(E9.dirname(a)),va.renameSync(e,a)}else throw d}},Vc=e=>new Promise((a,t)=>{let p=E9.dirname(e);nt.async(p).then(d=>{d?t():N9.createAsync(p).then(a,t)}).catch(t)}),Pc=(e,a,t)=>{let p=_9(t);return new Promise((d,i)=>{nt.async(a).then(r=>{r!==!1&&p.overwrite!==!0?i(b9(a)):va.rename(e,a).then(d).catch(s=>{s.code==="EISDIR"||s.code==="EPERM"?Fp.async(a).then(()=>va.rename(e,a)).then(d,i):s.code==="EXDEV"?S9.async(e,a,{overwrite:!0}).then(()=>Fp.async(e)).then(d,i):s.code==="ENOENT"?nt.async(e).then(n=>{n?Vc(a).then(()=>va.rename(e,a)).then(d,i):i(T9(e))}).catch(i):i(s)})})})};qp.validateInput=Oc;qp.sync=Lc;qp.async=Pc});var R9=y(Bp=>{"use strict";var x9=Re(),D9=ge(),A9=["utf8","buffer","json","jsonWithDates"],$c=(e,a,t)=>{let p=`${e}(path, returnAs)`;if(D9.argument(p,"path",a,["string"]),D9.argument(p,"returnAs",t,["string","undefined"]),t&&A9.indexOf(t)===-1)throw new Error(`Argument "returnAs" passed to ${p} must have one of values: ${A9.join(", ")}`)},C9=(e,a)=>typeof a=="string"&&/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*))(?:Z|(\+|-)([\d|:]*))?$/.exec(a)?new Date(a):a,I9=(e,a)=>{let t=new Error(`JSON parsing failed while reading ${e} [${a}]`);return t.originalError=a,t},Fc=(e,a)=>{let t=a||"utf8",p,d="utf8";t==="buffer"&&(d=null);try{p=x9.readFileSync(e,{encoding:d})}catch(i){if(i.code==="ENOENT")return;throw i}try{t==="json"?p=JSON.parse(p):t==="jsonWithDates"&&(p=JSON.parse(p,C9))}catch(i){throw I9(e,i)}return p},qc=(e,a)=>new Promise((t,p)=>{let d=a||"utf8",i="utf8";d==="buffer"&&(i=null),x9.readFile(e,{encoding:i}).then(r=>{try{t(d==="json"?JSON.parse(r):d==="jsonWithDates"?JSON.parse(r,C9):r)}catch(s){p(I9(e,s))}}).catch(r=>{r.code==="ENOENT"?t(void 0):p(r)})});Bp.validateInput=$c;Bp.sync=Fc;Bp.async=qc});var L9=y(kp=>{"use strict";var st=require("path"),O9=yi(),Ei=ge(),Bc=(e,a,t,p)=>{let d=`${e}(path, newName, [options])`;if(Ei.argument(d,"path",a,["string"]),Ei.argument(d,"newName",t,["string"]),Ei.options(d,"options",p,{overwrite:["boolean"]}),st.basename(t)!==t)throw new Error(`Argument "newName" passed to ${d} should be a filename, not a path. Received "${t}"`)},kc=(e,a,t)=>{let p=st.join(st.dirname(e),a);O9.sync(e,p,t)},Uc=(e,a,t)=>{let p=st.join(st.dirname(e),a);return O9.async(e,p,t)};kp.validateInput=Bc;kp.sync=kc;kp.async=Uc});var F9=y(Hp=>{"use strict";var P9=require("path"),Up=Re(),V9=ge(),$9=j1(),Hc=(e,a,t)=>{let p=`${e}(symlinkValue, path)`;V9.argument(p,"symlinkValue",a,["string"]),V9.argument(p,"path",t,["string"])},Mc=(e,a)=>{try{Up.symlinkSync(e,a)}catch(t){if(t.code==="ENOENT")$9.createSync(P9.dirname(a)),Up.symlinkSync(e,a);else throw t}},jc=(e,a)=>new Promise((t,p)=>{Up.symlink(e,a).then(t).catch(d=>{d.code==="ENOENT"?$9.createAsync(P9.dirname(a)).then(()=>Up.symlink(e,a)).then(t,p):p(d)})});Hp.validateInput=Hc;Hp.sync=Mc;Hp.async=jc});var B9=y(Si=>{"use strict";var q9=require("fs");Si.createWriteStream=q9.createWriteStream;Si.createReadStream=q9.createReadStream});var G9=y(Mp=>{"use strict";var Ni=require("path"),Gc=require("os"),k9=require("crypto"),U9=j1(),H9=Re(),zc=ge(),Wc=(e,a)=>{let t=`${e}([options])`;zc.options(t,"options",a,{prefix:["string"],basePath:["string"]})},M9=(e,a)=>{e=e||{};let t={};return typeof e.prefix!="string"?t.prefix="":t.prefix=e.prefix,typeof e.basePath=="string"?t.basePath=Ni.resolve(a,e.basePath):t.basePath=Gc.tmpdir(),t},j9=32,Xc=(e,a)=>{let t=M9(a,e),p=k9.randomBytes(j9/2).toString("hex"),d=Ni.join(t.basePath,t.prefix+p);try{H9.mkdirSync(d)}catch(i){if(i.code==="ENOENT")U9.sync(d);else throw i}return d},Zc=(e,a)=>new Promise((t,p)=>{let d=M9(a,e);k9.randomBytes(j9/2,(i,r)=>{if(i)p(i);else{let s=r.toString("hex"),n=Ni.join(d.basePath,d.prefix+s);H9.mkdir(n,o=>{o?o.code==="ENOENT"?U9.async(n).then(()=>{t(n)},p):p(o):t(n)})}})});Mp.validateInput=Wc;Mp.sync=Xc;Mp.async=Zc});var K9=y((og,Z9)=>{"use strict";var z9=require("util"),_i=require("path"),jp=Cs(),Gp=j1(),zp=Ls(),Wp=l9(),Xp=fa(),Zp=u9(),Kp=gi(),Yp=Op(),Qp=Ep(),Jp=yi(),e2=R9(),a2=mp(),t2=L9(),p2=F9(),W9=B9(),d2=G9(),i2=pt(),X9=e=>{let a=()=>e||process.cwd(),t=function(){if(arguments.length===0)return a();let s=Array.prototype.slice.call(arguments),n=[a()].concat(s);return X9(_i.resolve.apply(null,n))},p=s=>_i.resolve(a(),s),d=function(){return Array.prototype.unshift.call(arguments,a()),_i.resolve.apply(null,arguments)},i=s=>{let n=s||{};return n.cwd=a(),n},r={cwd:t,path:d,append:(s,n,o)=>{jp.validateInput("append",s,n,o),jp.sync(p(s),n,o)},appendAsync:(s,n,o)=>(jp.validateInput("appendAsync",s,n,o),jp.async(p(s),n,o)),copy:(s,n,o)=>{Kp.validateInput("copy",s,n,o),Kp.sync(p(s),p(n),o)},copyAsync:(s,n,o)=>(Kp.validateInput("copyAsync",s,n,o),Kp.async(p(s),p(n),o)),createWriteStream:(s,n)=>W9.createWriteStream(p(s),n),createReadStream:(s,n)=>W9.createReadStream(p(s),n),dir:(s,n)=>{Gp.validateInput("dir",s,n);let o=p(s);return Gp.sync(o,n),t(o)},dirAsync:(s,n)=>(Gp.validateInput("dirAsync",s,n),new Promise((o,l)=>{let u=p(s);Gp.async(u,n).then(()=>{o(t(u))},l)})),exists:s=>(Yp.validateInput("exists",s),Yp.sync(p(s))),existsAsync:s=>(Yp.validateInput("existsAsync",s),Yp.async(p(s))),file:(s,n)=>(zp.validateInput("file",s,n),zp.sync(p(s),n),r),fileAsync:(s,n)=>(zp.validateInput("fileAsync",s,n),new Promise((o,l)=>{zp.async(p(s),n).then(()=>{o(r)},l)})),find:(s,n)=>(typeof n>"u"&&typeof s=="object"&&(n=s,s="."),Wp.validateInput("find",s,n),Wp.sync(p(s),i(n))),findAsync:(s,n)=>(typeof n>"u"&&typeof s=="object"&&(n=s,s="."),Wp.validateInput("findAsync",s,n),Wp.async(p(s),i(n))),inspect:(s,n)=>(Xp.validateInput("inspect",s,n),Xp.sync(p(s),n)),inspectAsync:(s,n)=>(Xp.validateInput("inspectAsync",s,n),Xp.async(p(s),n)),inspectTree:(s,n)=>(Zp.validateInput("inspectTree",s,n),Zp.sync(p(s),n)),inspectTreeAsync:(s,n)=>(Zp.validateInput("inspectTreeAsync",s,n),Zp.async(p(s),n)),list:s=>(Qp.validateInput("list",s),Qp.sync(p(s||"."))),listAsync:s=>(Qp.validateInput("listAsync",s),Qp.async(p(s||"."))),move:(s,n,o)=>{Jp.validateInput("move",s,n,o),Jp.sync(p(s),p(n),o)},moveAsync:(s,n,o)=>(Jp.validateInput("moveAsync",s,n,o),Jp.async(p(s),p(n),o)),read:(s,n)=>(e2.validateInput("read",s,n),e2.sync(p(s),n)),readAsync:(s,n)=>(e2.validateInput("readAsync",s,n),e2.async(p(s),n)),remove:s=>{a2.validateInput("remove",s),a2.sync(p(s||"."))},removeAsync:s=>(a2.validateInput("removeAsync",s),a2.async(p(s||"."))),rename:(s,n,o)=>{t2.validateInput("rename",s,n,o),t2.sync(p(s),n,o)},renameAsync:(s,n,o)=>(t2.validateInput("renameAsync",s,n,o),t2.async(p(s),n,o)),symlink:(s,n)=>{p2.validateInput("symlink",s,n),p2.sync(s,p(n))},symlinkAsync:(s,n)=>(p2.validateInput("symlinkAsync",s,n),p2.async(s,p(n))),tmpDir:s=>{d2.validateInput("tmpDir",s);let n=d2.sync(a(),s);return t(n)},tmpDirAsync:s=>(d2.validateInput("tmpDirAsync",s),new Promise((n,o)=>{d2.async(a(),s).then(l=>{n(t(l))},o)})),write:(s,n,o)=>{i2.validateInput("write",s,n,o),i2.sync(p(s),n,o)},writeAsync:(s,n,o)=>(i2.validateInput("writeAsync",s,n,o),i2.async(p(s),n,o))};return z9.inspect.custom!==void 0&&(r[z9.inspect.custom]=()=>`[fs-jetpack CWD: ${a()}]`),r};Z9.exports=X9});var Q9=y((mg,Y9)=>{"use strict";var Kc=K9();Y9.exports=Kc()});var ef={};Ti(ef,{activate:()=>Jc});module.exports=Ai(ef);var Oe=require("coc.nvim");var Y=require("coc.nvim"),u3=new Y.RequestType("textDocument/ast"),ct=class{constructor(a){this.ctx=a}fillClientCapabilities(){}initialize(a){"astProvider"in a&&typeof Y.window.createTreeView=="function"&&this.ctx.subscriptions.push(Y.commands.registerCommand("clangd.ast",async()=>{if(!this.ctx.client)return;let t=null,{document:p,position:d}=await Y.workspace.getCurrentState(),i=await Y.workspace.nvim.call("visualmode");i&&(t=await Y.window.getSelectedRange(i)),t||(t=Y.Range.create(d,d));let r={textDocument:{uri:p.uri},range:t},s=await this.ctx.client.sendRequest(u3,r);if(!s){Y.window.showInformationMessage("No AST node at selection");return}let n=await Y.workspace.nvim.eval("win_getid()"),o=new l2;o.setRoot(s,Y.Uri.parse(p.uri),n),Y.window.createTreeView("clangd.AST",{treeDataProvider:o}).show()}))}dispose(){}};function c3(e,a){return e==="expression"||e==="statement"||e==="declaration"||e==="template name"?a:`${a} ${e}`}var l2=class{constructor(){this._onDidChangeTreeData=new Y.Emitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event}hasRoot(){return this.root!==void 0}setRoot(a,t,p){this.root=a,this.doc=t,this.winid=p,this._onDidChangeTreeData.fire(null)}getTreeItem(a){let t=new Y.TreeItem(c3(a.role,a.kind));return a.children&&a.children.length>0&&(t.collapsibleState=Y.TreeItemCollapsibleState.Expanded),t.description=a.detail,t.tooltip=a.arcana,a.range&&this.winid&&(t.command={title:"Jump to",command:"workspace.openLocation",arguments:[this.winid,{uri:this.doc,range:a.range}]}),t}getChildren(a){return a?a.children||[]:this.root?[this.root]:[]}getParent(a){if(a===this.root)return;function t(p){for(let d of p?.children??[]){let i=a===d?p:t(d);if(i)return i}}return t(this.root)}};var xi=Ge(require("fs")),ya=Ge(require("path")),re=require("coc.nvim"),Ci;(a=>a.type=new re.RequestType("textDocument/switchSourceHeader"))(Ci||={});var Ii;(a=>a.type=new re.RequestType("textDocument/symbolInfo"))(Ii||={});function Ri(e){return async a=>{if(!e.client)return;let t=await re.workspace.document;if(!t)return;let p={uri:t.uri},d=await e.client.sendRequest(Ci.type.method,p);if(!d){re.window.showInformationMessage("Didn't find a corresponding file.");return}await re.workspace.jumpTo(d,null,a)}}function Oi(e){return async()=>{if(!e.client)return;let a=await re.workspace.document;if(!a)return;let t=await re.window.getCursorPosition(),p={textDocument:{uri:a.uri},position:t},d=await e.client.sendRequest(Ii.type.method,p);if(!d.length)return;let i=d[0];re.window.showInformationMessage(`name: ${i.name}, containerName: ${i.containerName}, usr: ${i.usr}`)}}function f3(){let e;switch(process.platform){case"win32":e=process.env.LOCALAPPDATA;break;case"darwin":e=ya.join(process.env.HOME,"Library","Preferences");break;default:e=process.env.XDG_CONFIG_HOME||ya.join(process.env.HOME,".config");break}return e?ya.join(e,"clangd","config.yaml"):""}async function Li(e){xi.existsSync(e)||await re.workspace.createFile(e),await re.workspace.openResource(e)}function Vi(){let e=f3();e?Li(e):re.window.showWarningMessage("Couldn't get global configuration directory")}function Pi(){if(re.workspace.workspaceFolders.length>0){let e=re.workspace.workspaceFolders[0];Li(ya.join(re.Uri.parse(e.uri).fsPath,".clangd"))}else re.window.showWarningMessage("No project is open")}var $i=require("fs"),Fi=require("path"),Ne=require("coc.nvim");var G1=require("coc.nvim"),ft=class{constructor(){this.cfg=G1.workspace.getConfiguration("clangd")}get enabled(){return this.cfg.get("enabled")}get disableDiagnostics(){return this.cfg.get("disableDiagnostics")}get disableSnippetCompletion(){return this.cfg.get("disableSnippetCompletion")}get disableCompletion(){return this.cfg.get("disableCompletion")}get disableProgressNotifications(){return this.cfg.get("disableProgressNotifications")}get disableFileStatus(){return this.cfg.get("disableFileStatus")}get arguments(){return this.cfg.get("arguments",[]).map(a=>G1.workspace.expand(a))}get trace(){return this.cfg.get("trace",{file:"",server:"off"})}get fallbackFlags(){return this.cfg.get("fallbackFlags",[]).map(a=>G1.workspace.expand(a))}get showDBChangedNotification(){return this.cfg.get("showDBChangedNotification")}get compilationDatabasePath(){return this.cfg.get("compilationDatabasePath")}get compilationDatabaseCandidates(){return this.cfg.get("compilationDatabaseCandidates",[])}get serverCompletionRanking(){return this.cfg.get("serverCompletionRanking")}get inlayHints(){let a=G1.workspace.getConfiguration("inlayHint").get("enable",!0);return{enable:G1.workspace.env.virtualText&&a,sep:this.cfg.get("inlayHints.sep","\u2023")}}};var ht=class{dispose(){}initialize(){}fillClientCapabilities(a){let t=a.textDocument.completion;t&&(t.editsNearCursor=!0)}},vt=[{scheme:"file",language:"c"},{scheme:"file",language:"cpp"},{scheme:"file",language:"objc"},{scheme:"file",language:"objcpp"},{scheme:"file",language:"objective-c"},{scheme:"file",language:"objective-cpp"},{scheme:"file",language:"opencl"},{scheme:"file",language:"cuda"}],gt=class{constructor(a){this.context=a;this.client=null;this.config=new ft}isClangDocument(a){return Ne.workspace.match(vt,a)}async startServer(a,...t){let p=this.client;p&&await p.stop();let d={command:a,args:this.config.arguments};this.config.trace.file&&(d.options={env:{CLANGD_TRACE:this.config.trace.file}});let i=d,r={clangdFileStatus:!0,fallbackFlags:this.config.fallbackFlags};if(this.config.compilationDatabasePath)r.compilationDatabasePath=Ne.workspace.expand(this.config.compilationDatabasePath);else if(this.config.compilationDatabaseCandidates.length){let l=this.closestCompilationDatabase(this.config.compilationDatabaseCandidates);l&&(r.compilationDatabasePath=l)}let s=[];this.config.disableDiagnostics&&s.push("diagnostics"),this.config.disableCompletion&&s.push("completion"),this.config.disableProgressNotifications&&s.push("progress"),this.config.inlayHints.enable||s.push("inlayHint");let n={documentSelector:vt,initializationOptions:r,progressOnInitialization:!this.config.disableProgressNotifications,disabledFeatures:s,disableSnippetCompletion:this.config.disableSnippetCompletion,middleware:{provideCompletionItem:async(l,u,f,c,m)=>{let h=await m(l,u,f,c);if(!h)return[];let{triggerKind:g,triggerCharacter:v,option:w}=f,_=g===2&&v==="."&&w&&w.input==="",b=await Ne.workspace.nvim.eval("strpart(getline('.'), col('.') - 1)"),T=/^\s*$/.test(b),R=Array.isArray(h)?h:h.items;for(let x of R)if(x.score&&(x.score=Math.max(1,x.score)+x.score/1e3),_&&x.insertText===`->${x.filterText}`&&x.insertTextFormat===Ne.InsertTextFormat.Snippet&&(x.filterText=`.${x.filterText}`),T&&x.insertTextFormat===Ne.InsertTextFormat.Snippet&&x.textEdit){let{textEdit:D}=x,{newText:C}=D;(x.kind===Ne.CompletionItemKind.Function||x.kind===Ne.CompletionItemKind.Text&&C.slice(-1)===")")&&(x.textEdit={range:D.range,newText:`${C};`})}return Array.isArray(h)?R:{items:R,isIncomplete:h.isIncomplete}},provideWorkspaceSymbols:async(l,u,f)=>{let c=await f(l,u);if(c)return c.map(m=>(l.includes("::")&&(m.containerName&&(m.name=`${m.containerName}::${m.name}`),m.containerName=""),m))}}},o=new Ne.LanguageClient("clangd",i,n);for(let l of t)o.registerFeature(l);this.context.subscriptions.push(Ne.services.registLanguageClient(o)),await o.onReady(),this.client=o}get subscriptions(){return this.context.subscriptions}closestCompilationDatabase(a){let t=a.map(p=>Ne.workspace.expand(p));for(let p of t)if((0,$i.existsSync)((0,Fi.join)(p,"compile_commands.json")))return p;return""}};var yt=require("coc.nvim"),wt=class{constructor(a){this.config=a;this.statuses=new Map;this.statusBarItem=yt.window.createStatusBarItem(0)}onFileUpdated(a){this.statuses.set(a.uri,a),this.updateStatus()}async updateStatus(){if(this.config.disableFileStatus)return;let a=await yt.workspace.document;if(!a)return;let t=this.statuses.get(a.uri);if(!t||t.state==="idle"){this.statusBarItem.hide();return}this.statusBarItem.text=`clangd: ${t.state}`,this.statusBarItem.show()}clear(){this.statuses.clear(),this.statusBarItem.hide()}dispose(){this.statusBarItem.dispose()}};var h1=require("coc.nvim");var qi;(a=>{let e;(p=>p.type=new h1.RequestType("clangd/inlayHints"))(e=a.InlayHintsRequest||={})})(qi||={});var Et=class{constructor(a){this.context=a}fillClientCapabilities(){}fillInitializeParams(){}initialize(a){!a.clangdInlayHintsProvider||h1.languages.registerInlayHintsProvider===void 0||a.inlayHintProvider||this.context.subscriptions.push(h1.languages.registerInlayHintsProvider(vt,new o2(this.context)))}getState(){return{kind:"static"}}dispose(){}},o2=class{constructor(a){this.context=a}decodeKind(a){if(a==="type")return h1.InlayHintKind.Type;if(a==="parameter")return h1.InlayHintKind.Parameter}decode(a){return{position:a.position??a.range.start,kind:this.decodeKind(a.kind),label:a.label.trim(),paddingLeft:a.label.startsWith(" "),paddingRight:a.label.endsWith(" ")}}async provideInlayHints(a,t,p){if(!this.context.client)return[];let d={textDocument:{uri:a.uri},range:t};return(await this.context.client.sendRequest(qi.InlayHintsRequest.type,d,p)).map(this.decode,this)}};var J9=require("os"),ga=Ge(ss()),De=Ge(require("coc.nvim")),e3=Ge(Q9()),bi=class{constructor(a,t){this.context=a;this.config=t}get storagePath(){return this.context.storagePath}slow(a,t){return De.window.showInformationMessage(`${a}...}`),t}error(a){De.window.showErrorMessage(a)}info(a){De.window.showInformationMessage(a)}progress(a,t,p){return this.slow(a,p(()=>{}))}async shouldReuse(a){return De.window.showInformationMessage(`Reusing existing ${a} installation in ${this.storagePath}`),!0}async promptReload(){await De.commands.executeCommand("editor.action.restart")}showHelp(a,t){De.window.showInformationMessage(`${a}. See ${t}.`)}async promptUpdate(a,t){let p=`clangd ${t} is available (you have ${a}). :CocCommand clangd.install, or :CocSettings to disable clangd.checkUpdates.`;De.window.showInformationMessage(p)}async promptInstall(a){let t=`clangd was not found on your PATH. :CocCommand clangd.install will install ${a}.`;De.window.showInformationMessage(t)}get clangdPath(){let a=this.config.get("path",""),t=process.platform==="win32"?"clangd.exe":"clangd";if(a==="")try{let p=(0,e3.find)(this.storagePath,{matching:`**/${t}`,files:!0,directories:!1});p.length>0&&(a=p[0])}catch{}return a===""&&(a=t),De.workspace.expand(a)}set clangdPath(a){this.config.update("path",a.replace((0,J9.homedir)(),"~"),!0)}};async function a3(e){let a=De.workspace.getConfiguration("clangd"),t=new bi(e,a);return e.subscriptions.push(De.commands.registerCommand("clangd.install",async()=>ga.installLatest(t))),e.subscriptions.push(De.commands.registerCommand("clangd.update",async()=>ga.checkUpdates(!0,t))),(await ga.prepare(t,a.get("checkUpdates",!1))).clangdPath}var wa=require("coc.nvim"),Qc=new wa.RequestType0("$/memoryUsage");function t3(e,a){let t=Math.max(a.lastIndexOf("/"),a.lastIndexOf("\\"));return{title:a,isFile:t>=0,total:e._total,self:e._self,children:Object.keys(e).sort().filter(p=>!p.startsWith("_")).map(p=>t3(e[p],p)).sort((p,d)=>d.total-p.total)}}var r2=[];function p3(e){let a=`${e.title} ${(e.total/1024/1024).toFixed(2)} MB`;e.title==="clangd_server"&&r2.push(a),["background_index","tuscheduler","dynamic_index"].includes(e.title)&&r2.push(` \u2514 ${a}`);for(let t of e.children)p3(t)}var n2=class{constructor(a){this.ctx=a}fillClientCapabilities(){}fillInitializeParams(){}initialize(a){"memoryUsageProvider"in a&&this.ctx.subscriptions.push(wa.commands.registerCommand("clangd.memoryUsage",async()=>{let t=await this.ctx.client?.sendRequest(Qc.method,{});r2.length=0,p3(t3(t,"<root>")),wa.window.echoLines(r2)}))}dispose(){}};async function Jc(e){let a=new gt(e);if(!a.config.enabled)return;if(Oe.services.getService("clangd")){Oe.window.showWarningMessage("Looks like you've configured clangd in coc-settings.json, you should remove it to use coc-clangd");return}let p=await a3(e);if(!p)return;try{let i=new ct(a),r=new ht,s=new n2(a),n=new Et(a);await a.startServer(p,i,r,s,n)}catch{return}let d=new wt(a.config);e.subscriptions.push(d,Oe.commands.registerCommand("clangd.switchSourceHeader",Ri(a)),Oe.commands.registerCommand("clangd.symbolInfo",Oi(a)),Oe.commands.registerCommand("clangd.userConfig",Vi),Oe.commands.registerCommand("clangd.projectConfig",Pi),a.client.onDidChangeState(i=>{i.newState===Oe.State.Running?a.client?.onNotification("textDocument/clangd.fileStatus",r=>{d.onFileUpdated(r)}):i.newState===Oe.State.Stopped&&d.clear()}),Oe.workspace.onDidOpenTextDocument(()=>{d.updateStatus()})),a.client?.onNotification("textDocument/clangd.fileStatus",i=>{d.onFileUpdated(i)})}0&&(module.exports={activate});
